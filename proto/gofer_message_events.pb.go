// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: gofer_message_events.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_UNKNOWN_EVENT_TYPE EventType = 0
	EventType_CREATED_NAMESPACE  EventType = 1
	EventType_DISABLED_PIPELINE  EventType = 5
	EventType_ENABLED_PIPELINE   EventType = 6
	EventType_CREATED_PIPELINE   EventType = 7
	EventType_ABANDONED_PIPELINE EventType = 8
	EventType_STARTED_RUN        EventType = 10
	EventType_COMPLETED_RUN      EventType = 11
	EventType_STARTED_TASK_RUN   EventType = 15
	EventType_SCHEDULED_TASK_RUN EventType = 16
	EventType_COMPLETED_TASK_RUN EventType = 17
	EventType_FIRED_TRIGGER      EventType = 20
	EventType_PROCESSED_TRIGGER  EventType = 21
	EventType_RESOLVED_TRIGGER   EventType = 22
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "UNKNOWN_EVENT_TYPE",
		1:  "CREATED_NAMESPACE",
		5:  "DISABLED_PIPELINE",
		6:  "ENABLED_PIPELINE",
		7:  "CREATED_PIPELINE",
		8:  "ABANDONED_PIPELINE",
		10: "STARTED_RUN",
		11: "COMPLETED_RUN",
		15: "STARTED_TASK_RUN",
		16: "SCHEDULED_TASK_RUN",
		17: "COMPLETED_TASK_RUN",
		20: "FIRED_TRIGGER",
		21: "PROCESSED_TRIGGER",
		22: "RESOLVED_TRIGGER",
	}
	EventType_value = map[string]int32{
		"UNKNOWN_EVENT_TYPE": 0,
		"CREATED_NAMESPACE":  1,
		"DISABLED_PIPELINE":  5,
		"ENABLED_PIPELINE":   6,
		"CREATED_PIPELINE":   7,
		"ABANDONED_PIPELINE": 8,
		"STARTED_RUN":        10,
		"COMPLETED_RUN":      11,
		"STARTED_TASK_RUN":   15,
		"SCHEDULED_TASK_RUN": 16,
		"COMPLETED_TASK_RUN": 17,
		"FIRED_TRIGGER":      20,
		"PROCESSED_TRIGGER":  21,
		"RESOLVED_TRIGGER":   22,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_events_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_gofer_message_events_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{0}
}

type TriggerResult_State int32

const (
	TriggerResult_UNKNOWN TriggerResult_State = 0
	TriggerResult_FAILURE TriggerResult_State = 1
	TriggerResult_SUCCESS TriggerResult_State = 2
	TriggerResult_SKIPPED TriggerResult_State = 3
)

// Enum value maps for TriggerResult_State.
var (
	TriggerResult_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "FAILURE",
		2: "SUCCESS",
		3: "SKIPPED",
	}
	TriggerResult_State_value = map[string]int32{
		"UNKNOWN": 0,
		"FAILURE": 1,
		"SUCCESS": 2,
		"SKIPPED": 3,
	}
)

func (x TriggerResult_State) Enum() *TriggerResult_State {
	p := new(TriggerResult_State)
	*p = x
	return p
}

func (x TriggerResult_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerResult_State) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_events_proto_enumTypes[1].Descriptor()
}

func (TriggerResult_State) Type() protoreflect.EnumType {
	return &file_gofer_message_events_proto_enumTypes[1]
}

func (x TriggerResult_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerResult_State.Descriptor instead.
func (TriggerResult_State) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{0, 0}
}

type EventCompletedRun_State int32

const (
	EventCompletedRun_UNKNOWN    EventCompletedRun_State = 0
	EventCompletedRun_PROCESSING EventCompletedRun_State = 1
	EventCompletedRun_WAITING    EventCompletedRun_State = 2
	EventCompletedRun_RUNNING    EventCompletedRun_State = 3
	EventCompletedRun_FAILED     EventCompletedRun_State = 4
	EventCompletedRun_SUCCESS    EventCompletedRun_State = 5
	EventCompletedRun_CANCELLED  EventCompletedRun_State = 6
)

// Enum value maps for EventCompletedRun_State.
var (
	EventCompletedRun_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "PROCESSING",
		2: "WAITING",
		3: "RUNNING",
		4: "FAILED",
		5: "SUCCESS",
		6: "CANCELLED",
	}
	EventCompletedRun_State_value = map[string]int32{
		"UNKNOWN":    0,
		"PROCESSING": 1,
		"WAITING":    2,
		"RUNNING":    3,
		"FAILED":     4,
		"SUCCESS":    5,
		"CANCELLED":  6,
	}
)

func (x EventCompletedRun_State) Enum() *EventCompletedRun_State {
	p := new(EventCompletedRun_State)
	*p = x
	return p
}

func (x EventCompletedRun_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventCompletedRun_State) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_events_proto_enumTypes[2].Descriptor()
}

func (EventCompletedRun_State) Type() protoreflect.EnumType {
	return &file_gofer_message_events_proto_enumTypes[2]
}

func (x EventCompletedRun_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventCompletedRun_State.Descriptor instead.
func (EventCompletedRun_State) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{8, 0}
}

type EventCompletedTaskRun_State int32

const (
	EventCompletedTaskRun_UNKNOWN    EventCompletedTaskRun_State = 0
	EventCompletedTaskRun_PROCESSING EventCompletedTaskRun_State = 1
	EventCompletedTaskRun_WAITING    EventCompletedTaskRun_State = 2
	EventCompletedTaskRun_RUNNING    EventCompletedTaskRun_State = 3
	EventCompletedTaskRun_FAILED     EventCompletedTaskRun_State = 4
	EventCompletedTaskRun_SUCCESS    EventCompletedTaskRun_State = 5
	EventCompletedTaskRun_CANCELLED  EventCompletedTaskRun_State = 6
	EventCompletedTaskRun_SKIPPED    EventCompletedTaskRun_State = 7
)

// Enum value maps for EventCompletedTaskRun_State.
var (
	EventCompletedTaskRun_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "PROCESSING",
		2: "WAITING",
		3: "RUNNING",
		4: "FAILED",
		5: "SUCCESS",
		6: "CANCELLED",
		7: "SKIPPED",
	}
	EventCompletedTaskRun_State_value = map[string]int32{
		"UNKNOWN":    0,
		"PROCESSING": 1,
		"WAITING":    2,
		"RUNNING":    3,
		"FAILED":     4,
		"SUCCESS":    5,
		"CANCELLED":  6,
		"SKIPPED":    7,
	}
)

func (x EventCompletedTaskRun_State) Enum() *EventCompletedTaskRun_State {
	p := new(EventCompletedTaskRun_State)
	*p = x
	return p
}

func (x EventCompletedTaskRun_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventCompletedTaskRun_State) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_events_proto_enumTypes[3].Descriptor()
}

func (EventCompletedTaskRun_State) Type() protoreflect.EnumType {
	return &file_gofer_message_events_proto_enumTypes[3]
}

func (x EventCompletedTaskRun_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventCompletedTaskRun_State.Descriptor instead.
func (EventCompletedTaskRun_State) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{11, 0}
}

type TriggerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State   TriggerResult_State `protobuf:"varint,1,opt,name=state,proto3,enum=proto.TriggerResult_State" json:"state,omitempty"`
	Details string              `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *TriggerResult) Reset() {
	*x = TriggerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerResult) ProtoMessage() {}

func (x *TriggerResult) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerResult.ProtoReflect.Descriptor instead.
func (*TriggerResult) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{0}
}

func (x *TriggerResult) GetState() TriggerResult_State {
	if x != nil {
		return x.State
	}
	return TriggerResult_UNKNOWN
}

func (x *TriggerResult) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId int64     `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Kind    EventType `protobuf:"varint,2,opt,name=kind,proto3,enum=proto.EventType" json:"kind,omitempty"`
	Emitted int64     `protobuf:"varint,3,opt,name=emitted,proto3" json:"emitted,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *Metadata) GetKind() EventType {
	if x != nil {
		return x.Kind
	}
	return EventType_UNKNOWN_EVENT_TYPE
}

func (x *Metadata) GetEmitted() int64 {
	if x != nil {
		return x.Emitted
	}
	return 0
}

type EventCreatedNamespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string    `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
}

func (x *EventCreatedNamespace) Reset() {
	*x = EventCreatedNamespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCreatedNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCreatedNamespace) ProtoMessage() {}

func (x *EventCreatedNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCreatedNamespace.ProtoReflect.Descriptor instead.
func (*EventCreatedNamespace) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventCreatedNamespace) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventCreatedNamespace) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

type EventDisabledPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string    `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string    `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *EventDisabledPipeline) Reset() {
	*x = EventDisabledPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDisabledPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDisabledPipeline) ProtoMessage() {}

func (x *EventDisabledPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDisabledPipeline.ProtoReflect.Descriptor instead.
func (*EventDisabledPipeline) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventDisabledPipeline) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventDisabledPipeline) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *EventDisabledPipeline) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

type EventEnabledPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string    `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string    `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *EventEnabledPipeline) Reset() {
	*x = EventEnabledPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventEnabledPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEnabledPipeline) ProtoMessage() {}

func (x *EventEnabledPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEnabledPipeline.ProtoReflect.Descriptor instead.
func (*EventEnabledPipeline) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{4}
}

func (x *EventEnabledPipeline) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventEnabledPipeline) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *EventEnabledPipeline) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

type EventCreatedPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string    `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string    `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *EventCreatedPipeline) Reset() {
	*x = EventCreatedPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCreatedPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCreatedPipeline) ProtoMessage() {}

func (x *EventCreatedPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCreatedPipeline.ProtoReflect.Descriptor instead.
func (*EventCreatedPipeline) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventCreatedPipeline) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventCreatedPipeline) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *EventCreatedPipeline) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

type EventAbandonedPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string    `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string    `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *EventAbandonedPipeline) Reset() {
	*x = EventAbandonedPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAbandonedPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAbandonedPipeline) ProtoMessage() {}

func (x *EventAbandonedPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAbandonedPipeline.ProtoReflect.Descriptor instead.
func (*EventAbandonedPipeline) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{6}
}

func (x *EventAbandonedPipeline) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventAbandonedPipeline) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *EventAbandonedPipeline) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

type EventStartedRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string    `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string    `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	RunId       int64     `protobuf:"varint,4,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
}

func (x *EventStartedRun) Reset() {
	*x = EventStartedRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStartedRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStartedRun) ProtoMessage() {}

func (x *EventStartedRun) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStartedRun.ProtoReflect.Descriptor instead.
func (*EventStartedRun) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{7}
}

func (x *EventStartedRun) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventStartedRun) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *EventStartedRun) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *EventStartedRun) GetRunId() int64 {
	if x != nil {
		return x.RunId
	}
	return 0
}

type EventCompletedRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata               `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string                  `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string                  `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	RunId       int64                   `protobuf:"varint,4,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	State       EventCompletedRun_State `protobuf:"varint,5,opt,name=state,proto3,enum=proto.EventCompletedRun_State" json:"state,omitempty"`
}

func (x *EventCompletedRun) Reset() {
	*x = EventCompletedRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCompletedRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCompletedRun) ProtoMessage() {}

func (x *EventCompletedRun) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCompletedRun.ProtoReflect.Descriptor instead.
func (*EventCompletedRun) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{8}
}

func (x *EventCompletedRun) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventCompletedRun) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *EventCompletedRun) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *EventCompletedRun) GetRunId() int64 {
	if x != nil {
		return x.RunId
	}
	return 0
}

func (x *EventCompletedRun) GetState() EventCompletedRun_State {
	if x != nil {
		return x.State
	}
	return EventCompletedRun_UNKNOWN
}

type EventStartedTaskRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string    `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string    `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	RunId       int64     `protobuf:"varint,4,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	TaskRunId   string    `protobuf:"bytes,5,opt,name=task_run_id,json=taskRunId,proto3" json:"task_run_id,omitempty"`
}

func (x *EventStartedTaskRun) Reset() {
	*x = EventStartedTaskRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStartedTaskRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStartedTaskRun) ProtoMessage() {}

func (x *EventStartedTaskRun) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStartedTaskRun.ProtoReflect.Descriptor instead.
func (*EventStartedTaskRun) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{9}
}

func (x *EventStartedTaskRun) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventStartedTaskRun) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *EventStartedTaskRun) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *EventStartedTaskRun) GetRunId() int64 {
	if x != nil {
		return x.RunId
	}
	return 0
}

func (x *EventStartedTaskRun) GetTaskRunId() string {
	if x != nil {
		return x.TaskRunId
	}
	return ""
}

type EventScheduledTaskRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string    `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string    `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	RunId       int64     `protobuf:"varint,4,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	TaskRunId   string    `protobuf:"bytes,5,opt,name=task_run_id,json=taskRunId,proto3" json:"task_run_id,omitempty"`
}

func (x *EventScheduledTaskRun) Reset() {
	*x = EventScheduledTaskRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventScheduledTaskRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventScheduledTaskRun) ProtoMessage() {}

func (x *EventScheduledTaskRun) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventScheduledTaskRun.ProtoReflect.Descriptor instead.
func (*EventScheduledTaskRun) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{10}
}

func (x *EventScheduledTaskRun) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventScheduledTaskRun) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *EventScheduledTaskRun) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *EventScheduledTaskRun) GetRunId() int64 {
	if x != nil {
		return x.RunId
	}
	return 0
}

func (x *EventScheduledTaskRun) GetTaskRunId() string {
	if x != nil {
		return x.TaskRunId
	}
	return ""
}

type EventCompletedTaskRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *Metadata                   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NamespaceId string                      `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string                      `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	RunId       int64                       `protobuf:"varint,4,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	TaskRunId   string                      `protobuf:"bytes,5,opt,name=task_run_id,json=taskRunId,proto3" json:"task_run_id,omitempty"`
	State       EventCompletedTaskRun_State `protobuf:"varint,6,opt,name=state,proto3,enum=proto.EventCompletedTaskRun_State" json:"state,omitempty"`
}

func (x *EventCompletedTaskRun) Reset() {
	*x = EventCompletedTaskRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCompletedTaskRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCompletedTaskRun) ProtoMessage() {}

func (x *EventCompletedTaskRun) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCompletedTaskRun.ProtoReflect.Descriptor instead.
func (*EventCompletedTaskRun) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{11}
}

func (x *EventCompletedTaskRun) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventCompletedTaskRun) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *EventCompletedTaskRun) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *EventCompletedTaskRun) GetRunId() int64 {
	if x != nil {
		return x.RunId
	}
	return 0
}

func (x *EventCompletedTaskRun) GetTaskRunId() string {
	if x != nil {
		return x.TaskRunId
	}
	return ""
}

func (x *EventCompletedTaskRun) GetState() EventCompletedTaskRun_State {
	if x != nil {
		return x.State
	}
	return EventCompletedTaskRun_UNKNOWN
}

type EventFiredTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata        *Metadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Label           string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Pipeline        string            `protobuf:"bytes,3,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Namespace       string            `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Result          *TriggerResult    `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	TriggerMetadata map[string]string `protobuf:"bytes,6,rep,name=trigger_metadata,json=triggerMetadata,proto3" json:"trigger_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EventFiredTrigger) Reset() {
	*x = EventFiredTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFiredTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFiredTrigger) ProtoMessage() {}

func (x *EventFiredTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFiredTrigger.ProtoReflect.Descriptor instead.
func (*EventFiredTrigger) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{12}
}

func (x *EventFiredTrigger) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventFiredTrigger) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *EventFiredTrigger) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *EventFiredTrigger) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EventFiredTrigger) GetResult() *TriggerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *EventFiredTrigger) GetTriggerMetadata() map[string]string {
	if x != nil {
		return x.TriggerMetadata
	}
	return nil
}

type EventProcessedTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata        *Metadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Label           string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Pipeline        string            `protobuf:"bytes,3,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Namespace       string            `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Result          *TriggerResult    `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	TriggerMetadata map[string]string `protobuf:"bytes,6,rep,name=trigger_metadata,json=triggerMetadata,proto3" json:"trigger_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EventProcessedTrigger) Reset() {
	*x = EventProcessedTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventProcessedTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProcessedTrigger) ProtoMessage() {}

func (x *EventProcessedTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventProcessedTrigger.ProtoReflect.Descriptor instead.
func (*EventProcessedTrigger) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{13}
}

func (x *EventProcessedTrigger) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventProcessedTrigger) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *EventProcessedTrigger) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *EventProcessedTrigger) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EventProcessedTrigger) GetResult() *TriggerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *EventProcessedTrigger) GetTriggerMetadata() map[string]string {
	if x != nil {
		return x.TriggerMetadata
	}
	return nil
}

type EventResolvedTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata        *Metadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Label           string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Pipeline        string            `protobuf:"bytes,3,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Namespace       string            `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Result          *TriggerResult    `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	TriggerMetadata map[string]string `protobuf:"bytes,6,rep,name=trigger_metadata,json=triggerMetadata,proto3" json:"trigger_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EventResolvedTrigger) Reset() {
	*x = EventResolvedTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_events_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResolvedTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResolvedTrigger) ProtoMessage() {}

func (x *EventResolvedTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_events_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResolvedTrigger.ProtoReflect.Descriptor instead.
func (*EventResolvedTrigger) Descriptor() ([]byte, []int) {
	return file_gofer_message_events_proto_rawDescGZIP(), []int{14}
}

func (x *EventResolvedTrigger) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventResolvedTrigger) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *EventResolvedTrigger) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *EventResolvedTrigger) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EventResolvedTrigger) GetResult() *TriggerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *EventResolvedTrigger) GetTriggerMetadata() map[string]string {
	if x != nil {
		return x.TriggerMetadata
	}
	return nil
}

var File_gofer_message_events_proto protoreflect.FileDescriptor

var file_gofer_message_events_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x67, 0x6f, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x3b, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55,
	0x52, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x03, 0x22, 0x65,
	0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x22, 0x67, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2b,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x88,
	0x01, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x89, 0x01,
	0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x12, 0x2b, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x72, 0x75, 0x6e, 0x49, 0x64, 0x22, 0xb9, 0x02, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x12, 0x2b, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x75,
	0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x66, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x06, 0x22, 0xbd, 0x01, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x75,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x49,
	0x64, 0x22, 0xbf, 0x01, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x2b, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x75,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x75,
	0x6e, 0x49, 0x64, 0x22, 0xee, 0x02, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x2b, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x72, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x75,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x75, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x73, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50,
	0x45, 0x44, 0x10, 0x07, 0x22, 0xdc, 0x02, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x72, 0x65, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a, 0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x72,
	0x65, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x42, 0x0a, 0x14, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xe4, 0x02, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5c, 0x0a, 0x10, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x42, 0x0a, 0x14, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x02, 0x0a, 0x14, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5b,
	0x0a, 0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x42, 0x0a, 0x14, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a,
	0xbf, 0x02, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x50,
	0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x07, 0x12,
	0x16, 0x0a, 0x12, 0x41, 0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x44, 0x5f, 0x50, 0x49, 0x50,
	0x45, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x45, 0x44, 0x5f, 0x52, 0x55, 0x4e, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x50,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x55, 0x4e, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x52, 0x55, 0x4e, 0x10,
	0x0f, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x5f, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x52, 0x55, 0x4e, 0x10, 0x10, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x52, 0x55, 0x4e, 0x10,
	0x11, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47,
	0x45, 0x52, 0x10, 0x14, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x45,
	0x44, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x10, 0x15, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x10,
	0x16, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x69, 0x6e, 0x74, 0x6a, 0x65, 0x64, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x67, 0x6f,
	0x66, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_gofer_message_events_proto_rawDescOnce sync.Once
	file_gofer_message_events_proto_rawDescData = file_gofer_message_events_proto_rawDesc
)

func file_gofer_message_events_proto_rawDescGZIP() []byte {
	file_gofer_message_events_proto_rawDescOnce.Do(func() {
		file_gofer_message_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_gofer_message_events_proto_rawDescData)
	})
	return file_gofer_message_events_proto_rawDescData
}

var file_gofer_message_events_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_gofer_message_events_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_gofer_message_events_proto_goTypes = []interface{}{
	(EventType)(0),                   // 0: proto.EventType
	(TriggerResult_State)(0),         // 1: proto.TriggerResult.State
	(EventCompletedRun_State)(0),     // 2: proto.EventCompletedRun.State
	(EventCompletedTaskRun_State)(0), // 3: proto.EventCompletedTaskRun.State
	(*TriggerResult)(nil),            // 4: proto.TriggerResult
	(*Metadata)(nil),                 // 5: proto.Metadata
	(*EventCreatedNamespace)(nil),    // 6: proto.EventCreatedNamespace
	(*EventDisabledPipeline)(nil),    // 7: proto.EventDisabledPipeline
	(*EventEnabledPipeline)(nil),     // 8: proto.EventEnabledPipeline
	(*EventCreatedPipeline)(nil),     // 9: proto.EventCreatedPipeline
	(*EventAbandonedPipeline)(nil),   // 10: proto.EventAbandonedPipeline
	(*EventStartedRun)(nil),          // 11: proto.EventStartedRun
	(*EventCompletedRun)(nil),        // 12: proto.EventCompletedRun
	(*EventStartedTaskRun)(nil),      // 13: proto.EventStartedTaskRun
	(*EventScheduledTaskRun)(nil),    // 14: proto.EventScheduledTaskRun
	(*EventCompletedTaskRun)(nil),    // 15: proto.EventCompletedTaskRun
	(*EventFiredTrigger)(nil),        // 16: proto.EventFiredTrigger
	(*EventProcessedTrigger)(nil),    // 17: proto.EventProcessedTrigger
	(*EventResolvedTrigger)(nil),     // 18: proto.EventResolvedTrigger
	nil,                              // 19: proto.EventFiredTrigger.TriggerMetadataEntry
	nil,                              // 20: proto.EventProcessedTrigger.TriggerMetadataEntry
	nil,                              // 21: proto.EventResolvedTrigger.TriggerMetadataEntry
}
var file_gofer_message_events_proto_depIdxs = []int32{
	1,  // 0: proto.TriggerResult.state:type_name -> proto.TriggerResult.State
	0,  // 1: proto.Metadata.kind:type_name -> proto.EventType
	5,  // 2: proto.EventCreatedNamespace.metadata:type_name -> proto.Metadata
	5,  // 3: proto.EventDisabledPipeline.metadata:type_name -> proto.Metadata
	5,  // 4: proto.EventEnabledPipeline.metadata:type_name -> proto.Metadata
	5,  // 5: proto.EventCreatedPipeline.metadata:type_name -> proto.Metadata
	5,  // 6: proto.EventAbandonedPipeline.metadata:type_name -> proto.Metadata
	5,  // 7: proto.EventStartedRun.metadata:type_name -> proto.Metadata
	5,  // 8: proto.EventCompletedRun.metadata:type_name -> proto.Metadata
	2,  // 9: proto.EventCompletedRun.state:type_name -> proto.EventCompletedRun.State
	5,  // 10: proto.EventStartedTaskRun.metadata:type_name -> proto.Metadata
	5,  // 11: proto.EventScheduledTaskRun.metadata:type_name -> proto.Metadata
	5,  // 12: proto.EventCompletedTaskRun.metadata:type_name -> proto.Metadata
	3,  // 13: proto.EventCompletedTaskRun.state:type_name -> proto.EventCompletedTaskRun.State
	5,  // 14: proto.EventFiredTrigger.metadata:type_name -> proto.Metadata
	4,  // 15: proto.EventFiredTrigger.result:type_name -> proto.TriggerResult
	19, // 16: proto.EventFiredTrigger.trigger_metadata:type_name -> proto.EventFiredTrigger.TriggerMetadataEntry
	5,  // 17: proto.EventProcessedTrigger.metadata:type_name -> proto.Metadata
	4,  // 18: proto.EventProcessedTrigger.result:type_name -> proto.TriggerResult
	20, // 19: proto.EventProcessedTrigger.trigger_metadata:type_name -> proto.EventProcessedTrigger.TriggerMetadataEntry
	5,  // 20: proto.EventResolvedTrigger.metadata:type_name -> proto.Metadata
	4,  // 21: proto.EventResolvedTrigger.result:type_name -> proto.TriggerResult
	21, // 22: proto.EventResolvedTrigger.trigger_metadata:type_name -> proto.EventResolvedTrigger.TriggerMetadataEntry
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_gofer_message_events_proto_init() }
func file_gofer_message_events_proto_init() {
	if File_gofer_message_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gofer_message_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCreatedNamespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDisabledPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventEnabledPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCreatedPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAbandonedPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStartedRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCompletedRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStartedTaskRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventScheduledTaskRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCompletedTaskRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFiredTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventProcessedTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_events_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResolvedTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gofer_message_events_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gofer_message_events_proto_goTypes,
		DependencyIndexes: file_gofer_message_events_proto_depIdxs,
		EnumInfos:         file_gofer_message_events_proto_enumTypes,
		MessageInfos:      file_gofer_message_events_proto_msgTypes,
	}.Build()
	File_gofer_message_events_proto = out.File
	file_gofer_message_events_proto_rawDesc = nil
	file_gofer_message_events_proto_goTypes = nil
	file_gofer_message_events_proto_depIdxs = nil
}
