// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: gofer_message.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskRequiredParentState int32

const (
	TaskRequiredParentState_UNKNOWN    TaskRequiredParentState = 0
	TaskRequiredParentState_ANY        TaskRequiredParentState = 1
	TaskRequiredParentState_SUCCESSFUL TaskRequiredParentState = 2
	TaskRequiredParentState_FAILURE    TaskRequiredParentState = 3
)

// Enum value maps for TaskRequiredParentState.
var (
	TaskRequiredParentState_name = map[int32]string{
		0: "UNKNOWN",
		1: "ANY",
		2: "SUCCESSFUL",
		3: "FAILURE",
	}
	TaskRequiredParentState_value = map[string]int32{
		"UNKNOWN":    0,
		"ANY":        1,
		"SUCCESSFUL": 2,
		"FAILURE":    3,
	}
)

func (x TaskRequiredParentState) Enum() *TaskRequiredParentState {
	p := new(TaskRequiredParentState)
	*p = x
	return p
}

func (x TaskRequiredParentState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRequiredParentState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[0].Descriptor()
}

func (TaskRequiredParentState) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[0]
}

func (x TaskRequiredParentState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRequiredParentState.Descriptor instead.
func (TaskRequiredParentState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{0}
}

type Pipeline_State int32

const (
	Pipeline_UNKNOWN   Pipeline_State = 0
	Pipeline_ACTIVE    Pipeline_State = 1
	Pipeline_DISABLED  Pipeline_State = 2
	Pipeline_ABANDONED Pipeline_State = 3
)

// Enum value maps for Pipeline_State.
var (
	Pipeline_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "ACTIVE",
		2: "DISABLED",
		3: "ABANDONED",
	}
	Pipeline_State_value = map[string]int32{
		"UNKNOWN":   0,
		"ACTIVE":    1,
		"DISABLED":  2,
		"ABANDONED": 3,
	}
)

func (x Pipeline_State) Enum() *Pipeline_State {
	p := new(Pipeline_State)
	*p = x
	return p
}

func (x Pipeline_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pipeline_State) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[1].Descriptor()
}

func (Pipeline_State) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[1]
}

func (x Pipeline_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pipeline_State.Descriptor instead.
func (Pipeline_State) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{0, 0}
}

type Run_State int32

const (
	Run_UNKNOWN    Run_State = 0
	Run_PROCESSING Run_State = 1
	Run_WAITING    Run_State = 2
	Run_RUNNING    Run_State = 3
	Run_FAILED     Run_State = 4
	Run_SUCCESS    Run_State = 5
	Run_CANCELLED  Run_State = 6
)

// Enum value maps for Run_State.
var (
	Run_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "PROCESSING",
		2: "WAITING",
		3: "RUNNING",
		4: "FAILED",
		5: "SUCCESS",
		6: "CANCELLED",
	}
	Run_State_value = map[string]int32{
		"UNKNOWN":    0,
		"PROCESSING": 1,
		"WAITING":    2,
		"RUNNING":    3,
		"FAILED":     4,
		"SUCCESS":    5,
		"CANCELLED":  6,
	}
)

func (x Run_State) Enum() *Run_State {
	p := new(Run_State)
	*p = x
	return p
}

func (x Run_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Run_State) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[2].Descriptor()
}

func (Run_State) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[2]
}

func (x Run_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Run_State.Descriptor instead.
func (Run_State) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{3, 0}
}

type RunFailure_Kind int32

const (
	RunFailure_UNKNOWN             RunFailure_Kind = 0
	RunFailure_ABNORMAL_EXIT       RunFailure_Kind = 1
	RunFailure_SCHEDULER_ERROR     RunFailure_Kind = 2
	RunFailure_FAILED_PRECONDITION RunFailure_Kind = 3
	RunFailure_CANCELLED           RunFailure_Kind = 4
)

// Enum value maps for RunFailure_Kind.
var (
	RunFailure_Kind_name = map[int32]string{
		0: "UNKNOWN",
		1: "ABNORMAL_EXIT",
		2: "SCHEDULER_ERROR",
		3: "FAILED_PRECONDITION",
		4: "CANCELLED",
	}
	RunFailure_Kind_value = map[string]int32{
		"UNKNOWN":             0,
		"ABNORMAL_EXIT":       1,
		"SCHEDULER_ERROR":     2,
		"FAILED_PRECONDITION": 3,
		"CANCELLED":           4,
	}
)

func (x RunFailure_Kind) Enum() *RunFailure_Kind {
	p := new(RunFailure_Kind)
	*p = x
	return p
}

func (x RunFailure_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunFailure_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[3].Descriptor()
}

func (RunFailure_Kind) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[3]
}

func (x RunFailure_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunFailure_Kind.Descriptor instead.
func (RunFailure_Kind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{4, 0}
}

type TaskRunFailure_Kind int32

const (
	TaskRunFailure_UNKNOWN             TaskRunFailure_Kind = 0
	TaskRunFailure_ABNORMAL_EXIT       TaskRunFailure_Kind = 1
	TaskRunFailure_SCHEDULER_ERROR     TaskRunFailure_Kind = 2
	TaskRunFailure_FAILED_PRECONDITION TaskRunFailure_Kind = 3
	TaskRunFailure_CANCELLED           TaskRunFailure_Kind = 4
	TaskRunFailure_ORPHANED            TaskRunFailure_Kind = 5
)

// Enum value maps for TaskRunFailure_Kind.
var (
	TaskRunFailure_Kind_name = map[int32]string{
		0: "UNKNOWN",
		1: "ABNORMAL_EXIT",
		2: "SCHEDULER_ERROR",
		3: "FAILED_PRECONDITION",
		4: "CANCELLED",
		5: "ORPHANED",
	}
	TaskRunFailure_Kind_value = map[string]int32{
		"UNKNOWN":             0,
		"ABNORMAL_EXIT":       1,
		"SCHEDULER_ERROR":     2,
		"FAILED_PRECONDITION": 3,
		"CANCELLED":           4,
		"ORPHANED":            5,
	}
)

func (x TaskRunFailure_Kind) Enum() *TaskRunFailure_Kind {
	p := new(TaskRunFailure_Kind)
	*p = x
	return p
}

func (x TaskRunFailure_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRunFailure_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[4].Descriptor()
}

func (TaskRunFailure_Kind) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[4]
}

func (x TaskRunFailure_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRunFailure_Kind.Descriptor instead.
func (TaskRunFailure_Kind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{5, 0}
}

type TaskRun_State int32

const (
	TaskRun_UNKNOWN    TaskRun_State = 0
	TaskRun_PROCESSING TaskRun_State = 1
	TaskRun_WAITING    TaskRun_State = 2
	TaskRun_RUNNING    TaskRun_State = 3
	TaskRun_FAILED     TaskRun_State = 4
	TaskRun_SUCCESS    TaskRun_State = 5
	TaskRun_CANCELLED  TaskRun_State = 6
	TaskRun_SKIPPED    TaskRun_State = 7
)

// Enum value maps for TaskRun_State.
var (
	TaskRun_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "PROCESSING",
		2: "WAITING",
		3: "RUNNING",
		4: "FAILED",
		5: "SUCCESS",
		6: "CANCELLED",
		7: "SKIPPED",
	}
	TaskRun_State_value = map[string]int32{
		"UNKNOWN":    0,
		"PROCESSING": 1,
		"WAITING":    2,
		"RUNNING":    3,
		"FAILED":     4,
		"SUCCESS":    5,
		"CANCELLED":  6,
		"SKIPPED":    7,
	}
)

func (x TaskRun_State) Enum() *TaskRun_State {
	p := new(TaskRun_State)
	*p = x
	return p
}

func (x TaskRun_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRun_State) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[5].Descriptor()
}

func (TaskRun_State) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[5]
}

func (x TaskRun_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRun_State.Descriptor instead.
func (TaskRun_State) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{6, 0}
}

type PipelineTriggerConfig_State int32

const (
	PipelineTriggerConfig_UNKNOWN     PipelineTriggerConfig_State = 0
	PipelineTriggerConfig_ACTIVE      PipelineTriggerConfig_State = 1
	PipelineTriggerConfig_DISABLED    PipelineTriggerConfig_State = 2
	PipelineTriggerConfig_UNSUPPORTED PipelineTriggerConfig_State = 3
)

// Enum value maps for PipelineTriggerConfig_State.
var (
	PipelineTriggerConfig_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "ACTIVE",
		2: "DISABLED",
		3: "UNSUPPORTED",
	}
	PipelineTriggerConfig_State_value = map[string]int32{
		"UNKNOWN":     0,
		"ACTIVE":      1,
		"DISABLED":    2,
		"UNSUPPORTED": 3,
	}
)

func (x PipelineTriggerConfig_State) Enum() *PipelineTriggerConfig_State {
	p := new(PipelineTriggerConfig_State)
	*p = x
	return p
}

func (x PipelineTriggerConfig_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineTriggerConfig_State) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[6].Descriptor()
}

func (PipelineTriggerConfig_State) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[6]
}

func (x PipelineTriggerConfig_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineTriggerConfig_State.Descriptor instead.
func (PipelineTriggerConfig_State) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{7, 0}
}

type Trigger_State int32

const (
	Trigger_UNKNOWN    Trigger_State = 0
	Trigger_PROCESSING Trigger_State = 1
	Trigger_WAITING    Trigger_State = 2
	Trigger_RUNNING    Trigger_State = 3
	Trigger_FAILED     Trigger_State = 4
	Trigger_SUCCESS    Trigger_State = 5
)

// Enum value maps for Trigger_State.
var (
	Trigger_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "PROCESSING",
		2: "WAITING",
		3: "RUNNING",
		4: "FAILED",
		5: "SUCCESS",
	}
	Trigger_State_value = map[string]int32{
		"UNKNOWN":    0,
		"PROCESSING": 1,
		"WAITING":    2,
		"RUNNING":    3,
		"FAILED":     4,
		"SUCCESS":    5,
	}
)

func (x Trigger_State) Enum() *Trigger_State {
	p := new(Trigger_State)
	*p = x
	return p
}

func (x Trigger_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Trigger_State) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[7].Descriptor()
}

func (Trigger_State) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[7]
}

func (x Trigger_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Trigger_State.Descriptor instead.
func (Trigger_State) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{8, 0}
}

type Token_Kind int32

const (
	Token_UNKNOWN    Token_Kind = 0
	Token_MANAGEMENT Token_Kind = 1
	Token_CLIENT     Token_Kind = 2
)

// Enum value maps for Token_Kind.
var (
	Token_Kind_name = map[int32]string{
		0: "UNKNOWN",
		1: "MANAGEMENT",
		2: "CLIENT",
	}
	Token_Kind_value = map[string]int32{
		"UNKNOWN":    0,
		"MANAGEMENT": 1,
		"CLIENT":     2,
	}
)

func (x Token_Kind) Enum() *Token_Kind {
	p := new(Token_Kind)
	*p = x
	return p
}

func (x Token_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Token_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[8].Descriptor()
}

func (Token_Kind) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[8]
}

func (x Token_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Token_Kind.Descriptor instead.
func (Token_Kind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{13, 0}
}

type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location    string                             `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Created     int64                              `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Description string                             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Id          string                             `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Namespace   string                             `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	LastRunTime int64                              `protobuf:"varint,6,opt,name=last_run_time,json=lastRunTime,proto3" json:"last_run_time,omitempty"`
	LastRunId   int64                              `protobuf:"varint,7,opt,name=last_run_id,json=lastRunId,proto3" json:"last_run_id,omitempty"`
	Updated     int64                              `protobuf:"varint,8,opt,name=updated,proto3" json:"updated,omitempty"`
	Name        string                             `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Sequential  bool                               `protobuf:"varint,10,opt,name=sequential,proto3" json:"sequential,omitempty"`
	State       Pipeline_State                     `protobuf:"varint,11,opt,name=state,proto3,enum=proto.Pipeline_State" json:"state,omitempty"`
	Tasks       map[string]*Task                   `protobuf:"bytes,12,rep,name=tasks,proto3" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Triggers    map[string]*PipelineTriggerConfig  `protobuf:"bytes,13,rep,name=triggers,proto3" json:"triggers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Notifiers   map[string]*PipelineNotifierConfig `protobuf:"bytes,14,rep,name=notifiers,proto3" json:"notifiers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Objects     []string                           `protobuf:"bytes,15,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{0}
}

func (x *Pipeline) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Pipeline) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Pipeline) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Pipeline) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pipeline) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Pipeline) GetLastRunTime() int64 {
	if x != nil {
		return x.LastRunTime
	}
	return 0
}

func (x *Pipeline) GetLastRunId() int64 {
	if x != nil {
		return x.LastRunId
	}
	return 0
}

func (x *Pipeline) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *Pipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pipeline) GetSequential() bool {
	if x != nil {
		return x.Sequential
	}
	return false
}

func (x *Pipeline) GetState() Pipeline_State {
	if x != nil {
		return x.State
	}
	return Pipeline_UNKNOWN
}

func (x *Pipeline) GetTasks() map[string]*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Pipeline) GetTriggers() map[string]*PipelineTriggerConfig {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *Pipeline) GetNotifiers() map[string]*PipelineNotifierConfig {
	if x != nil {
		return x.Notifiers
	}
	return nil
}

func (x *Pipeline) GetObjects() []string {
	if x != nil {
		return x.Objects
	}
	return nil
}

type Exec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shell  string `protobuf:"bytes,1,opt,name=shell,proto3" json:"shell,omitempty"`
	Script string `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *Exec) Reset() {
	*x = Exec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exec) ProtoMessage() {}

func (x *Exec) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exec.ProtoReflect.Descriptor instead.
func (*Exec) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{1}
}

func (x *Exec) GetShell() string {
	if x != nil {
		return x.Shell
	}
	return ""
}

func (x *Exec) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image       string                             `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	DependsOn   map[string]TaskRequiredParentState `protobuf:"bytes,4,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.TaskRequiredParentState"`
	EnvVars     map[string]string                  `protobuf:"bytes,5,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// secrets never contains actual secrets just the name of the env vars
	// whose values aren't shown to the user.
	Secrets []string `protobuf:"bytes,6,rep,name=secrets,proto3" json:"secrets,omitempty"`
	Exec    *Exec    `protobuf:"bytes,7,opt,name=exec,proto3" json:"exec,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{2}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Task) GetDependsOn() map[string]TaskRequiredParentState {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *Task) GetEnvVars() map[string]string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *Task) GetSecrets() []string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *Task) GetExec() *Exec {
	if x != nil {
		return x.Exec
	}
	return nil
}

type Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ended          int64             `protobuf:"varint,1,opt,name=ended,proto3" json:"ended,omitempty"`
	Failure        *RunFailure       `protobuf:"bytes,2,opt,name=failure,proto3" json:"failure,omitempty"`
	Id             int64             `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	NamespaceId    string            `protobuf:"bytes,4,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId     string            `protobuf:"bytes,5,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Started        int64             `protobuf:"varint,6,opt,name=started,proto3" json:"started,omitempty"`
	State          Run_State         `protobuf:"varint,7,opt,name=state,proto3,enum=proto.Run_State" json:"state,omitempty"`
	TaskRuns       []string          `protobuf:"bytes,8,rep,name=task_runs,json=taskRuns,proto3" json:"task_runs,omitempty"`
	Only           []string          `protobuf:"bytes,9,rep,name=only,proto3" json:"only,omitempty"`
	TriggerKind    string            `protobuf:"bytes,10,opt,name=trigger_kind,json=triggerKind,proto3" json:"trigger_kind,omitempty"`
	TriggerName    string            `protobuf:"bytes,11,opt,name=trigger_name,json=triggerName,proto3" json:"trigger_name,omitempty"`
	Variables      map[string]string `protobuf:"bytes,12,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Objects        []string          `protobuf:"bytes,13,rep,name=objects,proto3" json:"objects,omitempty"`
	ObjectsExpired bool              `protobuf:"varint,14,opt,name=objects_expired,json=objectsExpired,proto3" json:"objects_expired,omitempty"`
}

func (x *Run) Reset() {
	*x = Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{3}
}

func (x *Run) GetEnded() int64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *Run) GetFailure() *RunFailure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *Run) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Run) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *Run) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *Run) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Run) GetState() Run_State {
	if x != nil {
		return x.State
	}
	return Run_UNKNOWN
}

func (x *Run) GetTaskRuns() []string {
	if x != nil {
		return x.TaskRuns
	}
	return nil
}

func (x *Run) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

func (x *Run) GetTriggerKind() string {
	if x != nil {
		return x.TriggerKind
	}
	return ""
}

func (x *Run) GetTriggerName() string {
	if x != nil {
		return x.TriggerName
	}
	return ""
}

func (x *Run) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Run) GetObjects() []string {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *Run) GetObjectsExpired() bool {
	if x != nil {
		return x.ObjectsExpired
	}
	return false
}

type RunFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind        RunFailure_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=proto.RunFailure_Kind" json:"kind,omitempty"`
	Description string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RunFailure) Reset() {
	*x = RunFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunFailure) ProtoMessage() {}

func (x *RunFailure) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunFailure.ProtoReflect.Descriptor instead.
func (*RunFailure) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{4}
}

func (x *RunFailure) GetKind() RunFailure_Kind {
	if x != nil {
		return x.Kind
	}
	return RunFailure_UNKNOWN
}

func (x *RunFailure) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TaskRunFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind        TaskRunFailure_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=proto.TaskRunFailure_Kind" json:"kind,omitempty"`
	Description string              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TaskRunFailure) Reset() {
	*x = TaskRunFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRunFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRunFailure) ProtoMessage() {}

func (x *TaskRunFailure) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRunFailure.ProtoReflect.Descriptor instead.
func (*TaskRunFailure) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{5}
}

func (x *TaskRunFailure) GetKind() TaskRunFailure_Kind {
	if x != nil {
		return x.Kind
	}
	return TaskRunFailure_UNKNOWN
}

func (x *TaskRunFailure) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TaskRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created     int64           `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Ended       int64           `protobuf:"varint,2,opt,name=ended,proto3" json:"ended,omitempty"`
	ExitCode    int64           `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Failure     *TaskRunFailure `protobuf:"bytes,4,opt,name=failure,proto3" json:"failure,omitempty"`
	Id          string          `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	LogsExpired bool            `protobuf:"varint,6,opt,name=logs_expired,json=logsExpired,proto3" json:"logs_expired,omitempty"`
	LogsRemoved bool            `protobuf:"varint,7,opt,name=logs_removed,json=logsRemoved,proto3" json:"logs_removed,omitempty"`
	NamespaceId string          `protobuf:"bytes,8,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId  string          `protobuf:"bytes,9,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	RunId       int64           `protobuf:"varint,10,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	SchedulerId string          `protobuf:"bytes,11,opt,name=scheduler_id,json=schedulerId,proto3" json:"scheduler_id,omitempty"`
	Started     int64           `protobuf:"varint,12,opt,name=started,proto3" json:"started,omitempty"`
	State       TaskRun_State   `protobuf:"varint,13,opt,name=state,proto3,enum=proto.TaskRun_State" json:"state,omitempty"`
	Task        *Task           `protobuf:"bytes,14,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *TaskRun) Reset() {
	*x = TaskRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRun) ProtoMessage() {}

func (x *TaskRun) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRun.ProtoReflect.Descriptor instead.
func (*TaskRun) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{6}
}

func (x *TaskRun) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *TaskRun) GetEnded() int64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *TaskRun) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *TaskRun) GetFailure() *TaskRunFailure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *TaskRun) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskRun) GetLogsExpired() bool {
	if x != nil {
		return x.LogsExpired
	}
	return false
}

func (x *TaskRun) GetLogsRemoved() bool {
	if x != nil {
		return x.LogsRemoved
	}
	return false
}

func (x *TaskRun) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TaskRun) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *TaskRun) GetRunId() int64 {
	if x != nil {
		return x.RunId
	}
	return 0
}

func (x *TaskRun) GetSchedulerId() string {
	if x != nil {
		return x.SchedulerId
	}
	return ""
}

func (x *TaskRun) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *TaskRun) GetState() TaskRun_State {
	if x != nil {
		return x.State
	}
	return TaskRun_UNKNOWN
}

func (x *TaskRun) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type PipelineTriggerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind   string                      `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Label  string                      `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Config map[string]string           `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	State  PipelineTriggerConfig_State `protobuf:"varint,4,opt,name=state,proto3,enum=proto.PipelineTriggerConfig_State" json:"state,omitempty"`
	Events []string                    `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *PipelineTriggerConfig) Reset() {
	*x = PipelineTriggerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineTriggerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineTriggerConfig) ProtoMessage() {}

func (x *PipelineTriggerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineTriggerConfig.ProtoReflect.Descriptor instead.
func (*PipelineTriggerConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{7}
}

func (x *PipelineTriggerConfig) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *PipelineTriggerConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineTriggerConfig) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PipelineTriggerConfig) GetState() PipelineTriggerConfig_State {
	if x != nil {
		return x.State
	}
	return PipelineTriggerConfig_UNKNOWN
}

func (x *PipelineTriggerConfig) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

type Trigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind          string        `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Image         string        `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Url           string        `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	SchedulerId   string        `protobuf:"bytes,4,opt,name=scheduler_id,json=schedulerId,proto3" json:"scheduler_id,omitempty"`
	Started       int64         `protobuf:"varint,5,opt,name=started,proto3" json:"started,omitempty"`
	State         Trigger_State `protobuf:"varint,6,opt,name=state,proto3,enum=proto.Trigger_State" json:"state,omitempty"`
	Documentation string        `protobuf:"bytes,7,opt,name=documentation,proto3" json:"documentation,omitempty"`
}

func (x *Trigger) Reset() {
	*x = Trigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trigger) ProtoMessage() {}

func (x *Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trigger.ProtoReflect.Descriptor instead.
func (*Trigger) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{8}
}

func (x *Trigger) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Trigger) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Trigger) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Trigger) GetSchedulerId() string {
	if x != nil {
		return x.SchedulerId
	}
	return ""
}

func (x *Trigger) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Trigger) GetState() Trigger_State {
	if x != nil {
		return x.State
	}
	return Trigger_UNKNOWN
}

func (x *Trigger) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

type TriggerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind    string            `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Image   string            `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	User    string            `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Pass    string            `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	EnvVars map[string]string `protobuf:"bytes,5,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TriggerConfig) Reset() {
	*x = TriggerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerConfig) ProtoMessage() {}

func (x *TriggerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerConfig.ProtoReflect.Descriptor instead.
func (*TriggerConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{9}
}

func (x *TriggerConfig) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TriggerConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *TriggerConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *TriggerConfig) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *TriggerConfig) GetEnvVars() map[string]string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

type PipelineNotifierConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind   string            `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Label  string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Config map[string]string `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PipelineNotifierConfig) Reset() {
	*x = PipelineNotifierConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineNotifierConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineNotifierConfig) ProtoMessage() {}

func (x *PipelineNotifierConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineNotifierConfig.ProtoReflect.Descriptor instead.
func (*PipelineNotifierConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{10}
}

func (x *PipelineNotifierConfig) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *PipelineNotifierConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineNotifierConfig) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type Notifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind          string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Image         string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Documentation string `protobuf:"bytes,3,opt,name=documentation,proto3" json:"documentation,omitempty"`
}

func (x *Notifier) Reset() {
	*x = Notifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notifier) ProtoMessage() {}

func (x *Notifier) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notifier.ProtoReflect.Descriptor instead.
func (*Notifier) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{11}
}

func (x *Notifier) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Notifier) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Notifier) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

type NotifierConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind    string            `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Image   string            `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	User    string            `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Pass    string            `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	EnvVars map[string]string `protobuf:"bytes,5,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NotifierConfig) Reset() {
	*x = NotifierConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifierConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifierConfig) ProtoMessage() {}

func (x *NotifierConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifierConfig.ProtoReflect.Descriptor instead.
func (*NotifierConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{12}
}

func (x *NotifierConfig) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *NotifierConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *NotifierConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *NotifierConfig) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *NotifierConfig) GetEnvVars() map[string]string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created    int64             `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Kind       Token_Kind        `protobuf:"varint,2,opt,name=kind,proto3,enum=proto.Token_Kind" json:"kind,omitempty"`
	Namespaces []string          `protobuf:"bytes,3,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Metadata   map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{13}
}

func (x *Token) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Token) GetKind() Token_Kind {
	if x != nil {
		return x.Kind
	}
	return Token_UNKNOWN
}

func (x *Token) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *Token) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Created     int64  `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
	Deleted     int64  `protobuf:"varint,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{14}
}

func (x *Namespace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Namespace) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Namespace) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

var File_gofer_message_proto protoreflect.FileDescriptor

var file_gofer_message_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x6f, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x06, 0x0a,
	0x08, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x75, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x75,
	0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30,
	0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x39, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x1a, 0x45, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x59, 0x0a, 0x0d, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5b, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x3d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x44, 0x10,
	0x03, 0x22, 0x34, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x65,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x93, 0x03, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x4f, 0x6e, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x04, 0x65,
	0x78, 0x65, 0x63, 0x1a, 0x5c, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf7, 0x04,
	0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52,
	0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6f,
	0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x1a, 0x3c, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x66, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0xbf, 0x01, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x42, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x22, 0xd5, 0x01, 0x0a, 0x0e, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x75, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x71,
	0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x42, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x5f,
	0x45, 0x58, 0x49, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55,
	0x4c, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x52, 0x50, 0x48, 0x41, 0x4e, 0x45, 0x44, 0x10,
	0x05, 0x22, 0xb7, 0x04, 0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x6f, 0x67, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x73, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x07, 0x22, 0xd1, 0x02, 0x0a, 0x15,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x40, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x03, 0x22,
	0xad, 0x02, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x22,
	0xdb, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x56,
	0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72,
	0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc0, 0x01,
	0x0a, 0x16, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x41, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x5a, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdd, 0x01, 0x0a,
	0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73,
	0x73, 0x12, 0x3d, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73,
	0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8e, 0x02, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2f, 0x0a, 0x04,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x22, 0x85, 0x01,
	0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x2a, 0x4c, 0x0a, 0x17, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x46, 0x55, 0x4c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52,
	0x45, 0x10, 0x03, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x6e, 0x74, 0x6a, 0x65, 0x64, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f,
	0x67, 0x6f, 0x66, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_gofer_message_proto_rawDescOnce sync.Once
	file_gofer_message_proto_rawDescData = file_gofer_message_proto_rawDesc
)

func file_gofer_message_proto_rawDescGZIP() []byte {
	file_gofer_message_proto_rawDescOnce.Do(func() {
		file_gofer_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_gofer_message_proto_rawDescData)
	})
	return file_gofer_message_proto_rawDescData
}

var file_gofer_message_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_gofer_message_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_gofer_message_proto_goTypes = []interface{}{
	(TaskRequiredParentState)(0),     // 0: proto.TaskRequiredParentState
	(Pipeline_State)(0),              // 1: proto.Pipeline.State
	(Run_State)(0),                   // 2: proto.Run.State
	(RunFailure_Kind)(0),             // 3: proto.RunFailure.Kind
	(TaskRunFailure_Kind)(0),         // 4: proto.TaskRunFailure.Kind
	(TaskRun_State)(0),               // 5: proto.TaskRun.State
	(PipelineTriggerConfig_State)(0), // 6: proto.PipelineTriggerConfig.State
	(Trigger_State)(0),               // 7: proto.Trigger.State
	(Token_Kind)(0),                  // 8: proto.Token.Kind
	(*Pipeline)(nil),                 // 9: proto.Pipeline
	(*Exec)(nil),                     // 10: proto.Exec
	(*Task)(nil),                     // 11: proto.Task
	(*Run)(nil),                      // 12: proto.Run
	(*RunFailure)(nil),               // 13: proto.RunFailure
	(*TaskRunFailure)(nil),           // 14: proto.TaskRunFailure
	(*TaskRun)(nil),                  // 15: proto.TaskRun
	(*PipelineTriggerConfig)(nil),    // 16: proto.PipelineTriggerConfig
	(*Trigger)(nil),                  // 17: proto.Trigger
	(*TriggerConfig)(nil),            // 18: proto.TriggerConfig
	(*PipelineNotifierConfig)(nil),   // 19: proto.PipelineNotifierConfig
	(*Notifier)(nil),                 // 20: proto.Notifier
	(*NotifierConfig)(nil),           // 21: proto.NotifierConfig
	(*Token)(nil),                    // 22: proto.Token
	(*Namespace)(nil),                // 23: proto.Namespace
	nil,                              // 24: proto.Pipeline.TasksEntry
	nil,                              // 25: proto.Pipeline.TriggersEntry
	nil,                              // 26: proto.Pipeline.NotifiersEntry
	nil,                              // 27: proto.Task.DependsOnEntry
	nil,                              // 28: proto.Task.EnvVarsEntry
	nil,                              // 29: proto.Run.VariablesEntry
	nil,                              // 30: proto.PipelineTriggerConfig.ConfigEntry
	nil,                              // 31: proto.TriggerConfig.EnvVarsEntry
	nil,                              // 32: proto.PipelineNotifierConfig.ConfigEntry
	nil,                              // 33: proto.NotifierConfig.EnvVarsEntry
	nil,                              // 34: proto.Token.MetadataEntry
}
var file_gofer_message_proto_depIdxs = []int32{
	1,  // 0: proto.Pipeline.state:type_name -> proto.Pipeline.State
	24, // 1: proto.Pipeline.tasks:type_name -> proto.Pipeline.TasksEntry
	25, // 2: proto.Pipeline.triggers:type_name -> proto.Pipeline.TriggersEntry
	26, // 3: proto.Pipeline.notifiers:type_name -> proto.Pipeline.NotifiersEntry
	27, // 4: proto.Task.depends_on:type_name -> proto.Task.DependsOnEntry
	28, // 5: proto.Task.env_vars:type_name -> proto.Task.EnvVarsEntry
	10, // 6: proto.Task.exec:type_name -> proto.Exec
	13, // 7: proto.Run.failure:type_name -> proto.RunFailure
	2,  // 8: proto.Run.state:type_name -> proto.Run.State
	29, // 9: proto.Run.variables:type_name -> proto.Run.VariablesEntry
	3,  // 10: proto.RunFailure.kind:type_name -> proto.RunFailure.Kind
	4,  // 11: proto.TaskRunFailure.kind:type_name -> proto.TaskRunFailure.Kind
	14, // 12: proto.TaskRun.failure:type_name -> proto.TaskRunFailure
	5,  // 13: proto.TaskRun.state:type_name -> proto.TaskRun.State
	11, // 14: proto.TaskRun.task:type_name -> proto.Task
	30, // 15: proto.PipelineTriggerConfig.config:type_name -> proto.PipelineTriggerConfig.ConfigEntry
	6,  // 16: proto.PipelineTriggerConfig.state:type_name -> proto.PipelineTriggerConfig.State
	7,  // 17: proto.Trigger.state:type_name -> proto.Trigger.State
	31, // 18: proto.TriggerConfig.env_vars:type_name -> proto.TriggerConfig.EnvVarsEntry
	32, // 19: proto.PipelineNotifierConfig.config:type_name -> proto.PipelineNotifierConfig.ConfigEntry
	33, // 20: proto.NotifierConfig.env_vars:type_name -> proto.NotifierConfig.EnvVarsEntry
	8,  // 21: proto.Token.kind:type_name -> proto.Token.Kind
	34, // 22: proto.Token.metadata:type_name -> proto.Token.MetadataEntry
	11, // 23: proto.Pipeline.TasksEntry.value:type_name -> proto.Task
	16, // 24: proto.Pipeline.TriggersEntry.value:type_name -> proto.PipelineTriggerConfig
	19, // 25: proto.Pipeline.NotifiersEntry.value:type_name -> proto.PipelineNotifierConfig
	0,  // 26: proto.Task.DependsOnEntry.value:type_name -> proto.TaskRequiredParentState
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_gofer_message_proto_init() }
func file_gofer_message_proto_init() {
	if File_gofer_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gofer_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRunFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineTriggerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineNotifierConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifierConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gofer_message_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gofer_message_proto_goTypes,
		DependencyIndexes: file_gofer_message_proto_depIdxs,
		EnumInfos:         file_gofer_message_proto_enumTypes,
		MessageInfos:      file_gofer_message_proto_msgTypes,
	}.Build()
	File_gofer_message_proto = out.File
	file_gofer_message_proto_rawDesc = nil
	file_gofer_message_proto_goTypes = nil
	file_gofer_message_proto_depIdxs = nil
}
