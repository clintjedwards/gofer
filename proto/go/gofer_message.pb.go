// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.4
// source: gofer_message.proto

package _go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pipeline_PipelineState int32

const (
	Pipeline_PIPELINE_STATE_UNKNOWN Pipeline_PipelineState = 0
	Pipeline_ACTIVE                 Pipeline_PipelineState = 1
	Pipeline_DISABLED               Pipeline_PipelineState = 2
)

// Enum value maps for Pipeline_PipelineState.
var (
	Pipeline_PipelineState_name = map[int32]string{
		0: "PIPELINE_STATE_UNKNOWN",
		1: "ACTIVE",
		2: "DISABLED",
	}
	Pipeline_PipelineState_value = map[string]int32{
		"PIPELINE_STATE_UNKNOWN": 0,
		"ACTIVE":                 1,
		"DISABLED":               2,
	}
)

func (x Pipeline_PipelineState) Enum() *Pipeline_PipelineState {
	p := new(Pipeline_PipelineState)
	*p = x
	return p
}

func (x Pipeline_PipelineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pipeline_PipelineState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[0].Descriptor()
}

func (Pipeline_PipelineState) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[0]
}

func (x Pipeline_PipelineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pipeline_PipelineState.Descriptor instead.
func (Pipeline_PipelineState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{2, 0}
}

type Pipeline_ErrorKind int32

const (
	Pipeline_ERROR_KIND_UNKNOWN           Pipeline_ErrorKind = 0
	Pipeline_TRIGGER_SUBSCRIPTION_FAILURE Pipeline_ErrorKind = 1
)

// Enum value maps for Pipeline_ErrorKind.
var (
	Pipeline_ErrorKind_name = map[int32]string{
		0: "ERROR_KIND_UNKNOWN",
		1: "TRIGGER_SUBSCRIPTION_FAILURE",
	}
	Pipeline_ErrorKind_value = map[string]int32{
		"ERROR_KIND_UNKNOWN":           0,
		"TRIGGER_SUBSCRIPTION_FAILURE": 1,
	}
)

func (x Pipeline_ErrorKind) Enum() *Pipeline_ErrorKind {
	p := new(Pipeline_ErrorKind)
	*p = x
	return p
}

func (x Pipeline_ErrorKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pipeline_ErrorKind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[1].Descriptor()
}

func (Pipeline_ErrorKind) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[1]
}

func (x Pipeline_ErrorKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pipeline_ErrorKind.Descriptor instead.
func (Pipeline_ErrorKind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{2, 1}
}

type Run_RunState int32

const (
	Run_RUN_STATE_UNKNOWN Run_RunState = 0
	Run_PENDING           Run_RunState = 1
	Run_RUNNING           Run_RunState = 2
	Run_COMPLETE          Run_RunState = 3
)

// Enum value maps for Run_RunState.
var (
	Run_RunState_name = map[int32]string{
		0: "RUN_STATE_UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETE",
	}
	Run_RunState_value = map[string]int32{
		"RUN_STATE_UNKNOWN": 0,
		"PENDING":           1,
		"RUNNING":           2,
		"COMPLETE":          3,
	}
)

func (x Run_RunState) Enum() *Run_RunState {
	p := new(Run_RunState)
	*p = x
	return p
}

func (x Run_RunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Run_RunState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[2].Descriptor()
}

func (Run_RunState) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[2]
}

func (x Run_RunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Run_RunState.Descriptor instead.
func (Run_RunState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{5, 0}
}

type Run_RunStatus int32

const (
	Run_RUN_STATUS_UNKNOWN Run_RunStatus = 0
	Run_SUCCESSFUL         Run_RunStatus = 1
	Run_FAILED             Run_RunStatus = 2
	Run_CANCELLED          Run_RunStatus = 3
)

// Enum value maps for Run_RunStatus.
var (
	Run_RunStatus_name = map[int32]string{
		0: "RUN_STATUS_UNKNOWN",
		1: "SUCCESSFUL",
		2: "FAILED",
		3: "CANCELLED",
	}
	Run_RunStatus_value = map[string]int32{
		"RUN_STATUS_UNKNOWN": 0,
		"SUCCESSFUL":         1,
		"FAILED":             2,
		"CANCELLED":          3,
	}
)

func (x Run_RunStatus) Enum() *Run_RunStatus {
	p := new(Run_RunStatus)
	*p = x
	return p
}

func (x Run_RunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Run_RunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[3].Descriptor()
}

func (Run_RunStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[3]
}

func (x Run_RunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Run_RunStatus.Descriptor instead.
func (Run_RunStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{5, 1}
}

type RunStatusReason_RunStatusReasonKind int32

const (
	RunStatusReason_RUN_STATUS_REASON_UNKNOWN RunStatusReason_RunStatusReasonKind = 0
	RunStatusReason_ABNORMAL_EXIT             RunStatusReason_RunStatusReasonKind = 1
	RunStatusReason_SCHEDULER_ERROR           RunStatusReason_RunStatusReasonKind = 2
	RunStatusReason_FAILED_PRECONDITION       RunStatusReason_RunStatusReasonKind = 3
	RunStatusReason_USER_CANCELLED            RunStatusReason_RunStatusReasonKind = 4
	RunStatusReason_ADMIN_CANCELLED           RunStatusReason_RunStatusReasonKind = 5
)

// Enum value maps for RunStatusReason_RunStatusReasonKind.
var (
	RunStatusReason_RunStatusReasonKind_name = map[int32]string{
		0: "RUN_STATUS_REASON_UNKNOWN",
		1: "ABNORMAL_EXIT",
		2: "SCHEDULER_ERROR",
		3: "FAILED_PRECONDITION",
		4: "USER_CANCELLED",
		5: "ADMIN_CANCELLED",
	}
	RunStatusReason_RunStatusReasonKind_value = map[string]int32{
		"RUN_STATUS_REASON_UNKNOWN": 0,
		"ABNORMAL_EXIT":             1,
		"SCHEDULER_ERROR":           2,
		"FAILED_PRECONDITION":       3,
		"USER_CANCELLED":            4,
		"ADMIN_CANCELLED":           5,
	}
)

func (x RunStatusReason_RunStatusReasonKind) Enum() *RunStatusReason_RunStatusReasonKind {
	p := new(RunStatusReason_RunStatusReasonKind)
	*p = x
	return p
}

func (x RunStatusReason_RunStatusReasonKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunStatusReason_RunStatusReasonKind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[4].Descriptor()
}

func (RunStatusReason_RunStatusReasonKind) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[4]
}

func (x RunStatusReason_RunStatusReasonKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunStatusReason_RunStatusReasonKind.Descriptor instead.
func (RunStatusReason_RunStatusReasonKind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{6, 0}
}

type CustomTask_RequiredParentStatus int32

const (
	CustomTask_REQUIRED_PARENT_STATUS_UNKNOWN CustomTask_RequiredParentStatus = 0
	CustomTask_ANY                            CustomTask_RequiredParentStatus = 1
	CustomTask_SUCCESS                        CustomTask_RequiredParentStatus = 2
	CustomTask_FAILURE                        CustomTask_RequiredParentStatus = 3
)

// Enum value maps for CustomTask_RequiredParentStatus.
var (
	CustomTask_RequiredParentStatus_name = map[int32]string{
		0: "REQUIRED_PARENT_STATUS_UNKNOWN",
		1: "ANY",
		2: "SUCCESS",
		3: "FAILURE",
	}
	CustomTask_RequiredParentStatus_value = map[string]int32{
		"REQUIRED_PARENT_STATUS_UNKNOWN": 0,
		"ANY":                            1,
		"SUCCESS":                        2,
		"FAILURE":                        3,
	}
)

func (x CustomTask_RequiredParentStatus) Enum() *CustomTask_RequiredParentStatus {
	p := new(CustomTask_RequiredParentStatus)
	*p = x
	return p
}

func (x CustomTask_RequiredParentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomTask_RequiredParentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[5].Descriptor()
}

func (CustomTask_RequiredParentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[5]
}

func (x CustomTask_RequiredParentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomTask_RequiredParentStatus.Descriptor instead.
func (CustomTask_RequiredParentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{8, 0}
}

type PipelineCommonTaskSettings_RequiredParentStatus int32

const (
	PipelineCommonTaskSettings_REQUIRED_PARENT_STATUS_UNKNOWN PipelineCommonTaskSettings_RequiredParentStatus = 0
	PipelineCommonTaskSettings_ANY                            PipelineCommonTaskSettings_RequiredParentStatus = 1
	PipelineCommonTaskSettings_SUCCESS                        PipelineCommonTaskSettings_RequiredParentStatus = 2
	PipelineCommonTaskSettings_FAILURE                        PipelineCommonTaskSettings_RequiredParentStatus = 3
)

// Enum value maps for PipelineCommonTaskSettings_RequiredParentStatus.
var (
	PipelineCommonTaskSettings_RequiredParentStatus_name = map[int32]string{
		0: "REQUIRED_PARENT_STATUS_UNKNOWN",
		1: "ANY",
		2: "SUCCESS",
		3: "FAILURE",
	}
	PipelineCommonTaskSettings_RequiredParentStatus_value = map[string]int32{
		"REQUIRED_PARENT_STATUS_UNKNOWN": 0,
		"ANY":                            1,
		"SUCCESS":                        2,
		"FAILURE":                        3,
	}
)

func (x PipelineCommonTaskSettings_RequiredParentStatus) Enum() *PipelineCommonTaskSettings_RequiredParentStatus {
	p := new(PipelineCommonTaskSettings_RequiredParentStatus)
	*p = x
	return p
}

func (x PipelineCommonTaskSettings_RequiredParentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineCommonTaskSettings_RequiredParentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[6].Descriptor()
}

func (PipelineCommonTaskSettings_RequiredParentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[6]
}

func (x PipelineCommonTaskSettings_RequiredParentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineCommonTaskSettings_RequiredParentStatus.Descriptor instead.
func (PipelineCommonTaskSettings_RequiredParentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{10, 0}
}

type CustomTaskConfig_RequiredParentStatus int32

const (
	CustomTaskConfig_REQUIRED_PARENT_STATUS_UNKNOWN CustomTaskConfig_RequiredParentStatus = 0
	CustomTaskConfig_ANY                            CustomTaskConfig_RequiredParentStatus = 1
	CustomTaskConfig_SUCCESS                        CustomTaskConfig_RequiredParentStatus = 2
	CustomTaskConfig_FAILURE                        CustomTaskConfig_RequiredParentStatus = 3
)

// Enum value maps for CustomTaskConfig_RequiredParentStatus.
var (
	CustomTaskConfig_RequiredParentStatus_name = map[int32]string{
		0: "REQUIRED_PARENT_STATUS_UNKNOWN",
		1: "ANY",
		2: "SUCCESS",
		3: "FAILURE",
	}
	CustomTaskConfig_RequiredParentStatus_value = map[string]int32{
		"REQUIRED_PARENT_STATUS_UNKNOWN": 0,
		"ANY":                            1,
		"SUCCESS":                        2,
		"FAILURE":                        3,
	}
)

func (x CustomTaskConfig_RequiredParentStatus) Enum() *CustomTaskConfig_RequiredParentStatus {
	p := new(CustomTaskConfig_RequiredParentStatus)
	*p = x
	return p
}

func (x CustomTaskConfig_RequiredParentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomTaskConfig_RequiredParentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[7].Descriptor()
}

func (CustomTaskConfig_RequiredParentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[7]
}

func (x CustomTaskConfig_RequiredParentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomTaskConfig_RequiredParentStatus.Descriptor instead.
func (CustomTaskConfig_RequiredParentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{11, 0}
}

type CommonTask_RequiredParentStatus int32

const (
	CommonTask_REQUIRED_PARENT_STATUS_UNKNOWN CommonTask_RequiredParentStatus = 0
	CommonTask_ANY                            CommonTask_RequiredParentStatus = 1
	CommonTask_SUCCESS                        CommonTask_RequiredParentStatus = 2
	CommonTask_FAILURE                        CommonTask_RequiredParentStatus = 3
)

// Enum value maps for CommonTask_RequiredParentStatus.
var (
	CommonTask_RequiredParentStatus_name = map[int32]string{
		0: "REQUIRED_PARENT_STATUS_UNKNOWN",
		1: "ANY",
		2: "SUCCESS",
		3: "FAILURE",
	}
	CommonTask_RequiredParentStatus_value = map[string]int32{
		"REQUIRED_PARENT_STATUS_UNKNOWN": 0,
		"ANY":                            1,
		"SUCCESS":                        2,
		"FAILURE":                        3,
	}
)

func (x CommonTask_RequiredParentStatus) Enum() *CommonTask_RequiredParentStatus {
	p := new(CommonTask_RequiredParentStatus)
	*p = x
	return p
}

func (x CommonTask_RequiredParentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonTask_RequiredParentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[8].Descriptor()
}

func (CommonTask_RequiredParentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[8]
}

func (x CommonTask_RequiredParentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonTask_RequiredParentStatus.Descriptor instead.
func (CommonTask_RequiredParentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{13, 0}
}

type CommonTaskConfig_RequiredParentStatus int32

const (
	CommonTaskConfig_REQUIRED_PARENT_STATUS_UNKNOWN CommonTaskConfig_RequiredParentStatus = 0
	CommonTaskConfig_ANY                            CommonTaskConfig_RequiredParentStatus = 1
	CommonTaskConfig_SUCCESS                        CommonTaskConfig_RequiredParentStatus = 2
	CommonTaskConfig_FAILURE                        CommonTaskConfig_RequiredParentStatus = 3
)

// Enum value maps for CommonTaskConfig_RequiredParentStatus.
var (
	CommonTaskConfig_RequiredParentStatus_name = map[int32]string{
		0: "REQUIRED_PARENT_STATUS_UNKNOWN",
		1: "ANY",
		2: "SUCCESS",
		3: "FAILURE",
	}
	CommonTaskConfig_RequiredParentStatus_value = map[string]int32{
		"REQUIRED_PARENT_STATUS_UNKNOWN": 0,
		"ANY":                            1,
		"SUCCESS":                        2,
		"FAILURE":                        3,
	}
)

func (x CommonTaskConfig_RequiredParentStatus) Enum() *CommonTaskConfig_RequiredParentStatus {
	p := new(CommonTaskConfig_RequiredParentStatus)
	*p = x
	return p
}

func (x CommonTaskConfig_RequiredParentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonTaskConfig_RequiredParentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[9].Descriptor()
}

func (CommonTaskConfig_RequiredParentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[9]
}

func (x CommonTaskConfig_RequiredParentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonTaskConfig_RequiredParentStatus.Descriptor instead.
func (CommonTaskConfig_RequiredParentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{14, 0}
}

type TaskRunStatusReason_Reason int32

const (
	TaskRunStatusReason_UNKNOWN             TaskRunStatusReason_Reason = 0
	TaskRunStatusReason_ABNORMAL_EXIT       TaskRunStatusReason_Reason = 1
	TaskRunStatusReason_SCHEDULER_ERROR     TaskRunStatusReason_Reason = 2
	TaskRunStatusReason_FAILED_PRECONDITION TaskRunStatusReason_Reason = 3
	TaskRunStatusReason_CANCELLED           TaskRunStatusReason_Reason = 4
	TaskRunStatusReason_ORPHANED            TaskRunStatusReason_Reason = 5
)

// Enum value maps for TaskRunStatusReason_Reason.
var (
	TaskRunStatusReason_Reason_name = map[int32]string{
		0: "UNKNOWN",
		1: "ABNORMAL_EXIT",
		2: "SCHEDULER_ERROR",
		3: "FAILED_PRECONDITION",
		4: "CANCELLED",
		5: "ORPHANED",
	}
	TaskRunStatusReason_Reason_value = map[string]int32{
		"UNKNOWN":             0,
		"ABNORMAL_EXIT":       1,
		"SCHEDULER_ERROR":     2,
		"FAILED_PRECONDITION": 3,
		"CANCELLED":           4,
		"ORPHANED":            5,
	}
)

func (x TaskRunStatusReason_Reason) Enum() *TaskRunStatusReason_Reason {
	p := new(TaskRunStatusReason_Reason)
	*p = x
	return p
}

func (x TaskRunStatusReason_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRunStatusReason_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[10].Descriptor()
}

func (TaskRunStatusReason_Reason) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[10]
}

func (x TaskRunStatusReason_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRunStatusReason_Reason.Descriptor instead.
func (TaskRunStatusReason_Reason) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{15, 0}
}

type TaskRun_TaskRunState int32

const (
	TaskRun_UNKNOWN_STATE TaskRun_TaskRunState = 0
	TaskRun_PROCESSING    TaskRun_TaskRunState = 1
	TaskRun_WAITING       TaskRun_TaskRunState = 2
	TaskRun_RUNNING       TaskRun_TaskRunState = 3
	TaskRun_COMPLETE      TaskRun_TaskRunState = 4
)

// Enum value maps for TaskRun_TaskRunState.
var (
	TaskRun_TaskRunState_name = map[int32]string{
		0: "UNKNOWN_STATE",
		1: "PROCESSING",
		2: "WAITING",
		3: "RUNNING",
		4: "COMPLETE",
	}
	TaskRun_TaskRunState_value = map[string]int32{
		"UNKNOWN_STATE": 0,
		"PROCESSING":    1,
		"WAITING":       2,
		"RUNNING":       3,
		"COMPLETE":      4,
	}
)

func (x TaskRun_TaskRunState) Enum() *TaskRun_TaskRunState {
	p := new(TaskRun_TaskRunState)
	*p = x
	return p
}

func (x TaskRun_TaskRunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRun_TaskRunState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[11].Descriptor()
}

func (TaskRun_TaskRunState) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[11]
}

func (x TaskRun_TaskRunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRun_TaskRunState.Descriptor instead.
func (TaskRun_TaskRunState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{16, 0}
}

type TaskRun_TaskRunStatus int32

const (
	TaskRun_UNKNOWN_STATUS TaskRun_TaskRunStatus = 0
	TaskRun_SUCCESSFUL     TaskRun_TaskRunStatus = 1
	TaskRun_FAILED         TaskRun_TaskRunStatus = 2
	TaskRun_CANCELLED      TaskRun_TaskRunStatus = 3
	TaskRun_SKIPPED        TaskRun_TaskRunStatus = 4
)

// Enum value maps for TaskRun_TaskRunStatus.
var (
	TaskRun_TaskRunStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "SUCCESSFUL",
		2: "FAILED",
		3: "CANCELLED",
		4: "SKIPPED",
	}
	TaskRun_TaskRunStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"SUCCESSFUL":     1,
		"FAILED":         2,
		"CANCELLED":      3,
		"SKIPPED":        4,
	}
)

func (x TaskRun_TaskRunStatus) Enum() *TaskRun_TaskRunStatus {
	p := new(TaskRun_TaskRunStatus)
	*p = x
	return p
}

func (x TaskRun_TaskRunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRun_TaskRunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[12].Descriptor()
}

func (TaskRun_TaskRunStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[12]
}

func (x TaskRun_TaskRunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRun_TaskRunStatus.Descriptor instead.
func (TaskRun_TaskRunStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{16, 1}
}

type Trigger_TriggerState int32

const (
	Trigger_UNKNOWN_STATE Trigger_TriggerState = 0
	Trigger_PROCESSING    Trigger_TriggerState = 1
	Trigger_RUNNING       Trigger_TriggerState = 2
	Trigger_EXITED        Trigger_TriggerState = 3
)

// Enum value maps for Trigger_TriggerState.
var (
	Trigger_TriggerState_name = map[int32]string{
		0: "UNKNOWN_STATE",
		1: "PROCESSING",
		2: "RUNNING",
		3: "EXITED",
	}
	Trigger_TriggerState_value = map[string]int32{
		"UNKNOWN_STATE": 0,
		"PROCESSING":    1,
		"RUNNING":       2,
		"EXITED":        3,
	}
)

func (x Trigger_TriggerState) Enum() *Trigger_TriggerState {
	p := new(Trigger_TriggerState)
	*p = x
	return p
}

func (x Trigger_TriggerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Trigger_TriggerState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[13].Descriptor()
}

func (Trigger_TriggerState) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[13]
}

func (x Trigger_TriggerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Trigger_TriggerState.Descriptor instead.
func (Trigger_TriggerState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{17, 0}
}

type Trigger_TriggerStatus int32

const (
	Trigger_UNKNOWN_STATUS Trigger_TriggerStatus = 0
	Trigger_ENABLED        Trigger_TriggerStatus = 1
	Trigger_DISABLED       Trigger_TriggerStatus = 2
)

// Enum value maps for Trigger_TriggerStatus.
var (
	Trigger_TriggerStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "ENABLED",
		2: "DISABLED",
	}
	Trigger_TriggerStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"ENABLED":        1,
		"DISABLED":       2,
	}
)

func (x Trigger_TriggerStatus) Enum() *Trigger_TriggerStatus {
	p := new(Trigger_TriggerStatus)
	*p = x
	return p
}

func (x Trigger_TriggerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Trigger_TriggerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[14].Descriptor()
}

func (Trigger_TriggerStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[14]
}

func (x Trigger_TriggerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Trigger_TriggerStatus.Descriptor instead.
func (Trigger_TriggerStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{17, 1}
}

type TriggerRegistration_TriggerStatus int32

const (
	TriggerRegistration_UNKNOWN_STATUS TriggerRegistration_TriggerStatus = 0
	TriggerRegistration_ENABLED        TriggerRegistration_TriggerStatus = 1
	TriggerRegistration_DISABLED       TriggerRegistration_TriggerStatus = 2
)

// Enum value maps for TriggerRegistration_TriggerStatus.
var (
	TriggerRegistration_TriggerStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "ENABLED",
		2: "DISABLED",
	}
	TriggerRegistration_TriggerStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"ENABLED":        1,
		"DISABLED":       2,
	}
)

func (x TriggerRegistration_TriggerStatus) Enum() *TriggerRegistration_TriggerStatus {
	p := new(TriggerRegistration_TriggerStatus)
	*p = x
	return p
}

func (x TriggerRegistration_TriggerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerRegistration_TriggerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[15].Descriptor()
}

func (TriggerRegistration_TriggerStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[15]
}

func (x TriggerRegistration_TriggerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerRegistration_TriggerStatus.Descriptor instead.
func (TriggerRegistration_TriggerStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{18, 0}
}

type CommonTaskRegistration_Status int32

const (
	CommonTaskRegistration_UNKNOWN  CommonTaskRegistration_Status = 0
	CommonTaskRegistration_ENABLED  CommonTaskRegistration_Status = 1
	CommonTaskRegistration_DISABLED CommonTaskRegistration_Status = 2
)

// Enum value maps for CommonTaskRegistration_Status.
var (
	CommonTaskRegistration_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "ENABLED",
		2: "DISABLED",
	}
	CommonTaskRegistration_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x CommonTaskRegistration_Status) Enum() *CommonTaskRegistration_Status {
	p := new(CommonTaskRegistration_Status)
	*p = x
	return p
}

func (x CommonTaskRegistration_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonTaskRegistration_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[16].Descriptor()
}

func (CommonTaskRegistration_Status) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[16]
}

func (x CommonTaskRegistration_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonTaskRegistration_Status.Descriptor instead.
func (CommonTaskRegistration_Status) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{19, 0}
}

type Token_Kind int32

const (
	Token_UNKNOWN    Token_Kind = 0
	Token_MANAGEMENT Token_Kind = 1
	Token_CLIENT     Token_Kind = 2
)

// Enum value maps for Token_Kind.
var (
	Token_Kind_name = map[int32]string{
		0: "UNKNOWN",
		1: "MANAGEMENT",
		2: "CLIENT",
	}
	Token_Kind_value = map[string]int32{
		"UNKNOWN":    0,
		"MANAGEMENT": 1,
		"CLIENT":     2,
	}
)

func (x Token_Kind) Enum() *Token_Kind {
	p := new(Token_Kind)
	*p = x
	return p
}

func (x Token_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Token_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[17].Descriptor()
}

func (Token_Kind) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[17]
}

func (x Token_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Token_Kind.Descriptor instead.
func (Token_Kind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{21, 0}
}

type TriggerResult_Status int32

const (
	TriggerResult_UNKNOWN TriggerResult_Status = 0
	TriggerResult_FAILURE TriggerResult_Status = 1
	TriggerResult_SUCCESS TriggerResult_Status = 2
	TriggerResult_SKIPPED TriggerResult_Status = 3
)

// Enum value maps for TriggerResult_Status.
var (
	TriggerResult_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "FAILURE",
		2: "SUCCESS",
		3: "SKIPPED",
	}
	TriggerResult_Status_value = map[string]int32{
		"UNKNOWN": 0,
		"FAILURE": 1,
		"SUCCESS": 2,
		"SKIPPED": 3,
	}
)

func (x TriggerResult_Status) Enum() *TriggerResult_Status {
	p := new(TriggerResult_Status)
	*p = x
	return p
}

func (x TriggerResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[18].Descriptor()
}

func (TriggerResult_Status) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[18]
}

func (x TriggerResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerResult_Status.Descriptor instead.
func (TriggerResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{22, 0}
}

type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Created     int64  `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified    int64  `protobuf:"varint,5,opt,name=modified,proto3" json:"modified,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{0}
}

func (x *Namespace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Namespace) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Namespace) GetModified() int64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

type Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Variable) Reset() {
	*x = Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{1}
}

func (x *Variable) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Variable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Variable) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string                                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Id          string                                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Parallelism int64                                  `protobuf:"varint,5,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	Created     int64                                  `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	Modified    int64                                  `protobuf:"varint,7,opt,name=modified,proto3" json:"modified,omitempty"`
	State       Pipeline_PipelineState                 `protobuf:"varint,8,opt,name=state,proto3,enum=proto.Pipeline_PipelineState" json:"state,omitempty"`
	CustomTasks map[string]*CustomTask                 `protobuf:"bytes,9,rep,name=custom_tasks,json=customTasks,proto3" json:"custom_tasks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Triggers    map[string]*PipelineTriggerSettings    `protobuf:"bytes,10,rep,name=triggers,proto3" json:"triggers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CommonTasks map[string]*PipelineCommonTaskSettings `protobuf:"bytes,11,rep,name=common_tasks,json=commonTasks,proto3" json:"common_tasks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Errors      []*Pipeline_Error                      `protobuf:"bytes,12,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{2}
}

func (x *Pipeline) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Pipeline) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pipeline) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Pipeline) GetParallelism() int64 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *Pipeline) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Pipeline) GetModified() int64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

func (x *Pipeline) GetState() Pipeline_PipelineState {
	if x != nil {
		return x.State
	}
	return Pipeline_PIPELINE_STATE_UNKNOWN
}

func (x *Pipeline) GetCustomTasks() map[string]*CustomTask {
	if x != nil {
		return x.CustomTasks
	}
	return nil
}

func (x *Pipeline) GetTriggers() map[string]*PipelineTriggerSettings {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *Pipeline) GetCommonTasks() map[string]*PipelineCommonTaskSettings {
	if x != nil {
		return x.CommonTasks
	}
	return nil
}

func (x *Pipeline) GetErrors() []*Pipeline_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type PipelineTaskConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Task:
	//	*PipelineTaskConfig_CustomTask
	//	*PipelineTaskConfig_CommonTask
	Task isPipelineTaskConfig_Task `protobuf_oneof:"task"`
}

func (x *PipelineTaskConfig) Reset() {
	*x = PipelineTaskConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineTaskConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineTaskConfig) ProtoMessage() {}

func (x *PipelineTaskConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineTaskConfig.ProtoReflect.Descriptor instead.
func (*PipelineTaskConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{3}
}

func (m *PipelineTaskConfig) GetTask() isPipelineTaskConfig_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (x *PipelineTaskConfig) GetCustomTask() *CustomTaskConfig {
	if x, ok := x.GetTask().(*PipelineTaskConfig_CustomTask); ok {
		return x.CustomTask
	}
	return nil
}

func (x *PipelineTaskConfig) GetCommonTask() *CommonTaskConfig {
	if x, ok := x.GetTask().(*PipelineTaskConfig_CommonTask); ok {
		return x.CommonTask
	}
	return nil
}

type isPipelineTaskConfig_Task interface {
	isPipelineTaskConfig_Task()
}

type PipelineTaskConfig_CustomTask struct {
	CustomTask *CustomTaskConfig `protobuf:"bytes,1,opt,name=custom_task,json=customTask,proto3,oneof"`
}

type PipelineTaskConfig_CommonTask struct {
	CommonTask *CommonTaskConfig `protobuf:"bytes,2,opt,name=common_task,json=commonTask,proto3,oneof"`
}

func (*PipelineTaskConfig_CustomTask) isPipelineTaskConfig_Task() {}

func (*PipelineTaskConfig_CommonTask) isPipelineTaskConfig_Task() {}

type PipelineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Parallelism int64                    `protobuf:"varint,4,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	Tasks       []*PipelineTaskConfig    `protobuf:"bytes,5,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Triggers    []*PipelineTriggerConfig `protobuf:"bytes,6,rep,name=triggers,proto3" json:"triggers,omitempty"`
}

func (x *PipelineConfig) Reset() {
	*x = PipelineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineConfig) ProtoMessage() {}

func (x *PipelineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineConfig.ProtoReflect.Descriptor instead.
func (*PipelineConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{4}
}

func (x *PipelineConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PipelineConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PipelineConfig) GetParallelism() int64 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *PipelineConfig) GetTasks() []*PipelineTaskConfig {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *PipelineConfig) GetTriggers() []*PipelineTriggerConfig {
	if x != nil {
		return x.Triggers
	}
	return nil
}

type Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace           string              `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pipeline            string              `protobuf:"bytes,2,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Id                  int64               `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Started             int64               `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`
	Ended               int64               `protobuf:"varint,5,opt,name=ended,proto3" json:"ended,omitempty"`
	State               Run_RunState        `protobuf:"varint,6,opt,name=state,proto3,enum=proto.Run_RunState" json:"state,omitempty"`
	Status              Run_RunStatus       `protobuf:"varint,7,opt,name=status,proto3,enum=proto.Run_RunStatus" json:"status,omitempty"`
	StatusReason        *RunStatusReason    `protobuf:"bytes,8,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	TaskRuns            []string            `protobuf:"bytes,9,rep,name=task_runs,json=taskRuns,proto3" json:"task_runs,omitempty"`
	Trigger             *Run_RunTriggerInfo `protobuf:"bytes,10,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Variables           []*Variable         `protobuf:"bytes,11,rep,name=variables,proto3" json:"variables,omitempty"`
	StoreObjectsExpired bool                `protobuf:"varint,12,opt,name=store_objects_expired,json=storeObjectsExpired,proto3" json:"store_objects_expired,omitempty"`
}

func (x *Run) Reset() {
	*x = Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{5}
}

func (x *Run) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Run) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *Run) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Run) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Run) GetEnded() int64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *Run) GetState() Run_RunState {
	if x != nil {
		return x.State
	}
	return Run_RUN_STATE_UNKNOWN
}

func (x *Run) GetStatus() Run_RunStatus {
	if x != nil {
		return x.Status
	}
	return Run_RUN_STATUS_UNKNOWN
}

func (x *Run) GetStatusReason() *RunStatusReason {
	if x != nil {
		return x.StatusReason
	}
	return nil
}

func (x *Run) GetTaskRuns() []string {
	if x != nil {
		return x.TaskRuns
	}
	return nil
}

func (x *Run) GetTrigger() *Run_RunTriggerInfo {
	if x != nil {
		return x.Trigger
	}
	return nil
}

func (x *Run) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Run) GetStoreObjectsExpired() bool {
	if x != nil {
		return x.StoreObjectsExpired
	}
	return false
}

type RunStatusReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      RunStatusReason_RunStatusReasonKind `protobuf:"varint,1,opt,name=reason,proto3,enum=proto.RunStatusReason_RunStatusReasonKind" json:"reason,omitempty"`
	Description string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RunStatusReason) Reset() {
	*x = RunStatusReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStatusReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStatusReason) ProtoMessage() {}

func (x *RunStatusReason) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStatusReason.ProtoReflect.Descriptor instead.
func (*RunStatusReason) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{6}
}

func (x *RunStatusReason) GetReason() RunStatusReason_RunStatusReasonKind {
	if x != nil {
		return x.Reason
	}
	return RunStatusReason_RUN_STATUS_REASON_UNKNOWN
}

func (x *RunStatusReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RegistryAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Pass string `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
}

func (x *RegistryAuth) Reset() {
	*x = RegistryAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryAuth) ProtoMessage() {}

func (x *RegistryAuth) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryAuth.ProtoReflect.Descriptor instead.
func (*RegistryAuth) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{7}
}

func (x *RegistryAuth) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RegistryAuth) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

type CustomTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description  string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image        string                                     `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	RegistryAuth *RegistryAuth                              `protobuf:"bytes,4,opt,name=registry_auth,json=registryAuth,proto3" json:"registry_auth,omitempty"`
	DependsOn    map[string]CustomTask_RequiredParentStatus `protobuf:"bytes,5,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.CustomTask_RequiredParentStatus"`
	Variables    []*Variable                                `protobuf:"bytes,6,rep,name=variables,proto3" json:"variables,omitempty"`
	Entrypoint   []string                                   `protobuf:"bytes,7,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Command      []string                                   `protobuf:"bytes,8,rep,name=command,proto3" json:"command,omitempty"`
}

func (x *CustomTask) Reset() {
	*x = CustomTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomTask) ProtoMessage() {}

func (x *CustomTask) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomTask.ProtoReflect.Descriptor instead.
func (*CustomTask) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{8}
}

func (x *CustomTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CustomTask) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CustomTask) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CustomTask) GetRegistryAuth() *RegistryAuth {
	if x != nil {
		return x.RegistryAuth
	}
	return nil
}

func (x *CustomTask) GetDependsOn() map[string]CustomTask_RequiredParentStatus {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *CustomTask) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CustomTask) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *CustomTask) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

type PipelineTriggerSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label    string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Settings map[string]string `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PipelineTriggerSettings) Reset() {
	*x = PipelineTriggerSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineTriggerSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineTriggerSettings) ProtoMessage() {}

func (x *PipelineTriggerSettings) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineTriggerSettings.ProtoReflect.Descriptor instead.
func (*PipelineTriggerSettings) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{9}
}

func (x *PipelineTriggerSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineTriggerSettings) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineTriggerSettings) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

type PipelineCommonTaskSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                                                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label       string                                                     `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Description string                                                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DependsOn   map[string]PipelineCommonTaskSettings_RequiredParentStatus `protobuf:"bytes,4,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.PipelineCommonTaskSettings_RequiredParentStatus"`
	Settings    map[string]string                                          `protobuf:"bytes,5,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PipelineCommonTaskSettings) Reset() {
	*x = PipelineCommonTaskSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineCommonTaskSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineCommonTaskSettings) ProtoMessage() {}

func (x *PipelineCommonTaskSettings) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineCommonTaskSettings.ProtoReflect.Descriptor instead.
func (*PipelineCommonTaskSettings) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{10}
}

func (x *PipelineCommonTaskSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineCommonTaskSettings) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineCommonTaskSettings) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PipelineCommonTaskSettings) GetDependsOn() map[string]PipelineCommonTaskSettings_RequiredParentStatus {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *PipelineCommonTaskSettings) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CustomTaskConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                                           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description  string                                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image        string                                           `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	RegistryAuth *RegistryAuth                                    `protobuf:"bytes,4,opt,name=registry_auth,json=registryAuth,proto3" json:"registry_auth,omitempty"`
	DependsOn    map[string]CustomTaskConfig_RequiredParentStatus `protobuf:"bytes,5,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.CustomTaskConfig_RequiredParentStatus"`
	Variables    map[string]string                                `protobuf:"bytes,6,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Entrypoint   []string                                         `protobuf:"bytes,7,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Command      []string                                         `protobuf:"bytes,8,rep,name=command,proto3" json:"command,omitempty"`
}

func (x *CustomTaskConfig) Reset() {
	*x = CustomTaskConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomTaskConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomTaskConfig) ProtoMessage() {}

func (x *CustomTaskConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomTaskConfig.ProtoReflect.Descriptor instead.
func (*CustomTaskConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{11}
}

func (x *CustomTaskConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CustomTaskConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CustomTaskConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CustomTaskConfig) GetRegistryAuth() *RegistryAuth {
	if x != nil {
		return x.RegistryAuth
	}
	return nil
}

func (x *CustomTaskConfig) GetDependsOn() map[string]CustomTaskConfig_RequiredParentStatus {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *CustomTaskConfig) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CustomTaskConfig) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *CustomTaskConfig) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

type PipelineTriggerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label    string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Settings map[string]string `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PipelineTriggerConfig) Reset() {
	*x = PipelineTriggerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineTriggerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineTriggerConfig) ProtoMessage() {}

func (x *PipelineTriggerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineTriggerConfig.ProtoReflect.Descriptor instead.
func (*PipelineTriggerConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{12}
}

func (x *PipelineTriggerConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineTriggerConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineTriggerConfig) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CommonTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description  string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image        string                                     `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	RegistryAuth *RegistryAuth                              `protobuf:"bytes,4,opt,name=registry_auth,json=registryAuth,proto3" json:"registry_auth,omitempty"`
	DependsOn    map[string]CommonTask_RequiredParentStatus `protobuf:"bytes,5,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.CommonTask_RequiredParentStatus"`
	Variables    []*Variable                                `protobuf:"bytes,6,rep,name=variables,proto3" json:"variables,omitempty"`
	Label        string                                     `protobuf:"bytes,7,opt,name=label,proto3" json:"label,omitempty"`
	Name         string                                     `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CommonTask) Reset() {
	*x = CommonTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTask) ProtoMessage() {}

func (x *CommonTask) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTask.ProtoReflect.Descriptor instead.
func (*CommonTask) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{13}
}

func (x *CommonTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommonTask) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CommonTask) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CommonTask) GetRegistryAuth() *RegistryAuth {
	if x != nil {
		return x.RegistryAuth
	}
	return nil
}

func (x *CommonTask) GetDependsOn() map[string]CommonTask_RequiredParentStatus {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *CommonTask) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CommonTask) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CommonTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CommonTaskConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label       string                                           `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Description string                                           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DependsOn   map[string]CommonTaskConfig_RequiredParentStatus `protobuf:"bytes,4,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.CommonTaskConfig_RequiredParentStatus"`
	Settings    map[string]string                                `protobuf:"bytes,5,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CommonTaskConfig) Reset() {
	*x = CommonTaskConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTaskConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTaskConfig) ProtoMessage() {}

func (x *CommonTaskConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTaskConfig.ProtoReflect.Descriptor instead.
func (*CommonTaskConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{14}
}

func (x *CommonTaskConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommonTaskConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CommonTaskConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CommonTaskConfig) GetDependsOn() map[string]CommonTaskConfig_RequiredParentStatus {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *CommonTaskConfig) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

type TaskRunStatusReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      TaskRunStatusReason_Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=proto.TaskRunStatusReason_Reason" json:"reason,omitempty"`
	Description string                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TaskRunStatusReason) Reset() {
	*x = TaskRunStatusReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRunStatusReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRunStatusReason) ProtoMessage() {}

func (x *TaskRunStatusReason) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRunStatusReason.ProtoReflect.Descriptor instead.
func (*TaskRunStatusReason) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{15}
}

func (x *TaskRunStatusReason) GetReason() TaskRunStatusReason_Reason {
	if x != nil {
		return x.Reason
	}
	return TaskRunStatusReason_UNKNOWN
}

func (x *TaskRunStatusReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TaskRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created      int64                 `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Ended        int64                 `protobuf:"varint,2,opt,name=ended,proto3" json:"ended,omitempty"`
	ExitCode     int64                 `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	StatusReason *TaskRunStatusReason  `protobuf:"bytes,4,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	Id           string                `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	LogsExpired  bool                  `protobuf:"varint,6,opt,name=logs_expired,json=logsExpired,proto3" json:"logs_expired,omitempty"`
	LogsRemoved  bool                  `protobuf:"varint,7,opt,name=logs_removed,json=logsRemoved,proto3" json:"logs_removed,omitempty"`
	Namespace    string                `protobuf:"bytes,8,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pipeline     string                `protobuf:"bytes,9,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Run          int64                 `protobuf:"varint,10,opt,name=run,proto3" json:"run,omitempty"`
	Started      int64                 `protobuf:"varint,11,opt,name=started,proto3" json:"started,omitempty"`
	State        TaskRun_TaskRunState  `protobuf:"varint,12,opt,name=state,proto3,enum=proto.TaskRun_TaskRunState" json:"state,omitempty"`
	Status       TaskRun_TaskRunStatus `protobuf:"varint,13,opt,name=status,proto3,enum=proto.TaskRun_TaskRunStatus" json:"status,omitempty"`
	// Types that are assignable to Task:
	//	*TaskRun_CustomTask
	//	*TaskRun_CommonTask
	Task      isTaskRun_Task `protobuf_oneof:"task"`
	Variables []*Variable    `protobuf:"bytes,16,rep,name=variables,proto3" json:"variables,omitempty"`
}

func (x *TaskRun) Reset() {
	*x = TaskRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRun) ProtoMessage() {}

func (x *TaskRun) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRun.ProtoReflect.Descriptor instead.
func (*TaskRun) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{16}
}

func (x *TaskRun) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *TaskRun) GetEnded() int64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *TaskRun) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *TaskRun) GetStatusReason() *TaskRunStatusReason {
	if x != nil {
		return x.StatusReason
	}
	return nil
}

func (x *TaskRun) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskRun) GetLogsExpired() bool {
	if x != nil {
		return x.LogsExpired
	}
	return false
}

func (x *TaskRun) GetLogsRemoved() bool {
	if x != nil {
		return x.LogsRemoved
	}
	return false
}

func (x *TaskRun) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TaskRun) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *TaskRun) GetRun() int64 {
	if x != nil {
		return x.Run
	}
	return 0
}

func (x *TaskRun) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *TaskRun) GetState() TaskRun_TaskRunState {
	if x != nil {
		return x.State
	}
	return TaskRun_UNKNOWN_STATE
}

func (x *TaskRun) GetStatus() TaskRun_TaskRunStatus {
	if x != nil {
		return x.Status
	}
	return TaskRun_UNKNOWN_STATUS
}

func (m *TaskRun) GetTask() isTaskRun_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (x *TaskRun) GetCustomTask() *CustomTask {
	if x, ok := x.GetTask().(*TaskRun_CustomTask); ok {
		return x.CustomTask
	}
	return nil
}

func (x *TaskRun) GetCommonTask() *CommonTask {
	if x, ok := x.GetTask().(*TaskRun_CommonTask); ok {
		return x.CommonTask
	}
	return nil
}

func (x *TaskRun) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

type isTaskRun_Task interface {
	isTaskRun_Task()
}

type TaskRun_CustomTask struct {
	CustomTask *CustomTask `protobuf:"bytes,14,opt,name=custom_task,json=customTask,proto3,oneof"`
}

type TaskRun_CommonTask struct {
	CommonTask *CommonTask `protobuf:"bytes,15,opt,name=common_task,json=commonTask,proto3,oneof"`
}

func (*TaskRun_CustomTask) isTaskRun_Task() {}

func (*TaskRun_CommonTask) isTaskRun_Task() {}

type Trigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Url           string                `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Started       int64                 `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`
	State         Trigger_TriggerState  `protobuf:"varint,5,opt,name=state,proto3,enum=proto.Trigger_TriggerState" json:"state,omitempty"`
	Status        Trigger_TriggerStatus `protobuf:"varint,6,opt,name=status,proto3,enum=proto.Trigger_TriggerStatus" json:"status,omitempty"`
	Documentation string                `protobuf:"bytes,7,opt,name=documentation,proto3" json:"documentation,omitempty"`
}

func (x *Trigger) Reset() {
	*x = Trigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trigger) ProtoMessage() {}

func (x *Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trigger.ProtoReflect.Descriptor instead.
func (*Trigger) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{17}
}

func (x *Trigger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Trigger) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Trigger) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Trigger) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Trigger) GetState() Trigger_TriggerState {
	if x != nil {
		return x.State
	}
	return Trigger_UNKNOWN_STATE
}

func (x *Trigger) GetStatus() Trigger_TriggerStatus {
	if x != nil {
		return x.Status
	}
	return Trigger_UNKNOWN_STATUS
}

func (x *Trigger) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

type TriggerRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image     string                            `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	User      string                            `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Pass      string                            `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	Variables map[string]string                 `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Created   int64                             `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	Status    TriggerRegistration_TriggerStatus `protobuf:"varint,7,opt,name=status,proto3,enum=proto.TriggerRegistration_TriggerStatus" json:"status,omitempty"`
}

func (x *TriggerRegistration) Reset() {
	*x = TriggerRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRegistration) ProtoMessage() {}

func (x *TriggerRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRegistration.ProtoReflect.Descriptor instead.
func (*TriggerRegistration) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{18}
}

func (x *TriggerRegistration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerRegistration) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *TriggerRegistration) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *TriggerRegistration) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *TriggerRegistration) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *TriggerRegistration) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *TriggerRegistration) GetStatus() TriggerRegistration_TriggerStatus {
	if x != nil {
		return x.Status
	}
	return TriggerRegistration_UNKNOWN_STATUS
}

type CommonTaskRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                        `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	User          string                        `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Pass          string                        `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	Variables     []*Variable                   `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty"`
	Created       int64                         `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	Status        CommonTaskRegistration_Status `protobuf:"varint,7,opt,name=status,proto3,enum=proto.CommonTaskRegistration_Status" json:"status,omitempty"`
	Documentation string                        `protobuf:"bytes,8,opt,name=documentation,proto3" json:"documentation,omitempty"`
}

func (x *CommonTaskRegistration) Reset() {
	*x = CommonTaskRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTaskRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTaskRegistration) ProtoMessage() {}

func (x *CommonTaskRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTaskRegistration.ProtoReflect.Descriptor instead.
func (*CommonTaskRegistration) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{19}
}

func (x *CommonTaskRegistration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommonTaskRegistration) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CommonTaskRegistration) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CommonTaskRegistration) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *CommonTaskRegistration) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CommonTaskRegistration) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *CommonTaskRegistration) GetStatus() CommonTaskRegistration_Status {
	if x != nil {
		return x.Status
	}
	return CommonTaskRegistration_UNKNOWN
}

func (x *CommonTaskRegistration) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind    string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`       // What type of event
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"` // Json output of the event
	Emitted int64  `protobuf:"varint,4,opt,name=emitted,proto3" json:"emitted,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{20}
}

func (x *Event) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Event) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *Event) GetEmitted() int64 {
	if x != nil {
		return x.Emitted
	}
	return 0
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created    int64             `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Kind       Token_Kind        `protobuf:"varint,2,opt,name=kind,proto3,enum=proto.Token_Kind" json:"kind,omitempty"`
	Namespaces []string          `protobuf:"bytes,3,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Metadata   map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Expires    int64             `protobuf:"varint,5,opt,name=expires,proto3" json:"expires,omitempty"`
	Disabled   bool              `protobuf:"varint,6,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{21}
}

func (x *Token) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Token) GetKind() Token_Kind {
	if x != nil {
		return x.Kind
	}
	return Token_UNKNOWN
}

func (x *Token) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *Token) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Token) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *Token) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type TriggerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  TriggerResult_Status `protobuf:"varint,1,opt,name=status,proto3,enum=proto.TriggerResult_Status" json:"status,omitempty"`
	Details string               `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *TriggerResult) Reset() {
	*x = TriggerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerResult) ProtoMessage() {}

func (x *TriggerResult) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerResult.ProtoReflect.Descriptor instead.
func (*TriggerResult) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{22}
}

func (x *TriggerResult) GetStatus() TriggerResult_Status {
	if x != nil {
		return x.Status
	}
	return TriggerResult_UNKNOWN
}

func (x *TriggerResult) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type SecretStoreKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Created int64  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *SecretStoreKey) Reset() {
	*x = SecretStoreKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretStoreKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretStoreKey) ProtoMessage() {}

func (x *SecretStoreKey) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretStoreKey.ProtoReflect.Descriptor instead.
func (*SecretStoreKey) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{23}
}

func (x *SecretStoreKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SecretStoreKey) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type ObjectStoreKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Created int64  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *ObjectStoreKey) Reset() {
	*x = ObjectStoreKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStoreKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStoreKey) ProtoMessage() {}

func (x *ObjectStoreKey) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStoreKey.ProtoReflect.Descriptor instead.
func (*ObjectStoreKey) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{24}
}

func (x *ObjectStoreKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ObjectStoreKey) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type Pipeline_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind        Pipeline_ErrorKind `protobuf:"varint,1,opt,name=kind,proto3,enum=proto.Pipeline_ErrorKind" json:"kind,omitempty"`
	Description string             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Pipeline_Error) Reset() {
	*x = Pipeline_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline_Error) ProtoMessage() {}

func (x *Pipeline_Error) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline_Error.ProtoReflect.Descriptor instead.
func (*Pipeline_Error) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Pipeline_Error) GetKind() Pipeline_ErrorKind {
	if x != nil {
		return x.Kind
	}
	return Pipeline_ERROR_KIND_UNKNOWN
}

func (x *Pipeline_Error) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Run_RunTriggerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Run_RunTriggerInfo) Reset() {
	*x = Run_RunTriggerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run_RunTriggerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run_RunTriggerInfo) ProtoMessage() {}

func (x *Run_RunTriggerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run_RunTriggerInfo.ProtoReflect.Descriptor instead.
func (*Run_RunTriggerInfo) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Run_RunTriggerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Run_RunTriggerInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

var File_gofer_message_proto protoreflect.FileDescriptor

var file_gofer_message_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x6f, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a,
	0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x4a, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0xea, 0x07, 0x0a, 0x08, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69,
	0x73, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c,
	0x65, 0x6c, 0x69, 0x73, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x43, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73,
	0x12, 0x43, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x1a, 0x51, 0x0a, 0x10, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5b, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x58, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2d, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x45, 0x0a, 0x0d, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x45, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4b,
	0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x20, 0x0a,
	0x1c, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x01, 0x22,
	0x94, 0x01, 0x0a, 0x12, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0xe3, 0x01, 0x0a, 0x0e, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73,
	0x6d, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x22, 0xa1, 0x05, 0x0a,
	0x03, 0x52, 0x75, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x75, 0x6e,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e,
	0x73, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x52,
	0x75, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x1a, 0x3a, 0x0a, 0x0e, 0x52, 0x75, 0x6e,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x49, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03,
	0x22, 0x4e, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x12, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x46, 0x55, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x22, 0x98, 0x02, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x52,
	0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x42, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x5f, 0x45, 0x58,
	0x49, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45,
	0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x22, 0x36, 0x0a, 0x0c, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x73, 0x73, 0x22, 0xfd, 0x03, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x64,
	0x0a, 0x0e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x61, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e,
	0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52,
	0x45, 0x10, 0x03, 0x22, 0xca, 0x01, 0x0a, 0x17, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x48, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x98, 0x04, 0x0a, 0x1a, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x0a, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x4b, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x74, 0x0a, 0x0e, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4c, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x14,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44,
	0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x03, 0x22, 0xe4, 0x04, 0x0a, 0x10,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x45, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x6a, 0x0a, 0x0e, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x42, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x52,
	0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x10, 0x03, 0x22, 0xc6, 0x01, 0x0a, 0x15, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x46, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x3b,
	0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x03, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x2d, 0x0a,
	0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x64, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x14,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44,
	0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x03, 0x22, 0xf0, 0x03, 0x0a, 0x10,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x4f, 0x6e, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x6a, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x5d, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x51, 0x55, 0x49,
	0x52, 0x45, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x4e, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x03, 0x22, 0xe7,
	0x01, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x42,
	0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45,
	0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x52,
	0x50, 0x48, 0x41, 0x4e, 0x45, 0x44, 0x10, 0x05, 0x22, 0x97, 0x06, 0x0a, 0x07, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x75, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x73, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x72, 0x75, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x31,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75,
	0x6e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x48,
	0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x34, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x22, 0x59, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x22, 0x5b, 0x0a,
	0x0d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x22, 0xfa, 0x02, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x0c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x10, 0x03, 0x22,
	0x3e, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22,
	0x8a, 0x03, 0x0a, 0x13, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x3c,
	0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x0d,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0xc9, 0x02, 0x0a,
	0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x5f, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x22, 0xc4, 0x02, 0x0a, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x2f, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02,
	0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x3c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c,
	0x55, 0x52, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x03, 0x22,
	0x3c, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x3c, 0x0a,
	0x0e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x29, 0x5a, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x6e, 0x74, 0x6a,
	0x65, 0x64, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x66, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gofer_message_proto_rawDescOnce sync.Once
	file_gofer_message_proto_rawDescData = file_gofer_message_proto_rawDesc
)

func file_gofer_message_proto_rawDescGZIP() []byte {
	file_gofer_message_proto_rawDescOnce.Do(func() {
		file_gofer_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_gofer_message_proto_rawDescData)
	})
	return file_gofer_message_proto_rawDescData
}

var file_gofer_message_proto_enumTypes = make([]protoimpl.EnumInfo, 19)
var file_gofer_message_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_gofer_message_proto_goTypes = []interface{}{
	(Pipeline_PipelineState)(0),                          // 0: proto.Pipeline.PipelineState
	(Pipeline_ErrorKind)(0),                              // 1: proto.Pipeline.ErrorKind
	(Run_RunState)(0),                                    // 2: proto.Run.RunState
	(Run_RunStatus)(0),                                   // 3: proto.Run.RunStatus
	(RunStatusReason_RunStatusReasonKind)(0),             // 4: proto.RunStatusReason.RunStatusReasonKind
	(CustomTask_RequiredParentStatus)(0),                 // 5: proto.CustomTask.RequiredParentStatus
	(PipelineCommonTaskSettings_RequiredParentStatus)(0), // 6: proto.PipelineCommonTaskSettings.RequiredParentStatus
	(CustomTaskConfig_RequiredParentStatus)(0),           // 7: proto.CustomTaskConfig.RequiredParentStatus
	(CommonTask_RequiredParentStatus)(0),                 // 8: proto.CommonTask.RequiredParentStatus
	(CommonTaskConfig_RequiredParentStatus)(0),           // 9: proto.CommonTaskConfig.RequiredParentStatus
	(TaskRunStatusReason_Reason)(0),                      // 10: proto.TaskRunStatusReason.Reason
	(TaskRun_TaskRunState)(0),                            // 11: proto.TaskRun.TaskRunState
	(TaskRun_TaskRunStatus)(0),                           // 12: proto.TaskRun.TaskRunStatus
	(Trigger_TriggerState)(0),                            // 13: proto.Trigger.TriggerState
	(Trigger_TriggerStatus)(0),                           // 14: proto.Trigger.TriggerStatus
	(TriggerRegistration_TriggerStatus)(0),               // 15: proto.TriggerRegistration.TriggerStatus
	(CommonTaskRegistration_Status)(0),                   // 16: proto.CommonTaskRegistration.Status
	(Token_Kind)(0),                                      // 17: proto.Token.Kind
	(TriggerResult_Status)(0),                            // 18: proto.TriggerResult.Status
	(*Namespace)(nil),                                    // 19: proto.Namespace
	(*Variable)(nil),                                     // 20: proto.Variable
	(*Pipeline)(nil),                                     // 21: proto.Pipeline
	(*PipelineTaskConfig)(nil),                           // 22: proto.PipelineTaskConfig
	(*PipelineConfig)(nil),                               // 23: proto.PipelineConfig
	(*Run)(nil),                                          // 24: proto.Run
	(*RunStatusReason)(nil),                              // 25: proto.RunStatusReason
	(*RegistryAuth)(nil),                                 // 26: proto.RegistryAuth
	(*CustomTask)(nil),                                   // 27: proto.CustomTask
	(*PipelineTriggerSettings)(nil),                      // 28: proto.PipelineTriggerSettings
	(*PipelineCommonTaskSettings)(nil),                   // 29: proto.PipelineCommonTaskSettings
	(*CustomTaskConfig)(nil),                             // 30: proto.CustomTaskConfig
	(*PipelineTriggerConfig)(nil),                        // 31: proto.PipelineTriggerConfig
	(*CommonTask)(nil),                                   // 32: proto.CommonTask
	(*CommonTaskConfig)(nil),                             // 33: proto.CommonTaskConfig
	(*TaskRunStatusReason)(nil),                          // 34: proto.TaskRunStatusReason
	(*TaskRun)(nil),                                      // 35: proto.TaskRun
	(*Trigger)(nil),                                      // 36: proto.Trigger
	(*TriggerRegistration)(nil),                          // 37: proto.TriggerRegistration
	(*CommonTaskRegistration)(nil),                       // 38: proto.CommonTaskRegistration
	(*Event)(nil),                                        // 39: proto.Event
	(*Token)(nil),                                        // 40: proto.Token
	(*TriggerResult)(nil),                                // 41: proto.TriggerResult
	(*SecretStoreKey)(nil),                               // 42: proto.SecretStoreKey
	(*ObjectStoreKey)(nil),                               // 43: proto.ObjectStoreKey
	nil,                                                  // 44: proto.Pipeline.CustomTasksEntry
	nil,                                                  // 45: proto.Pipeline.TriggersEntry
	nil,                                                  // 46: proto.Pipeline.CommonTasksEntry
	(*Pipeline_Error)(nil),                               // 47: proto.Pipeline.Error
	(*Run_RunTriggerInfo)(nil),                           // 48: proto.Run.RunTriggerInfo
	nil,                                                  // 49: proto.CustomTask.DependsOnEntry
	nil,                                                  // 50: proto.PipelineTriggerSettings.SettingsEntry
	nil,                                                  // 51: proto.PipelineCommonTaskSettings.DependsOnEntry
	nil,                                                  // 52: proto.PipelineCommonTaskSettings.SettingsEntry
	nil,                                                  // 53: proto.CustomTaskConfig.DependsOnEntry
	nil,                                                  // 54: proto.CustomTaskConfig.VariablesEntry
	nil,                                                  // 55: proto.PipelineTriggerConfig.SettingsEntry
	nil,                                                  // 56: proto.CommonTask.DependsOnEntry
	nil,                                                  // 57: proto.CommonTaskConfig.DependsOnEntry
	nil,                                                  // 58: proto.CommonTaskConfig.SettingsEntry
	nil,                                                  // 59: proto.TriggerRegistration.VariablesEntry
	nil,                                                  // 60: proto.Token.MetadataEntry
}
var file_gofer_message_proto_depIdxs = []int32{
	0,  // 0: proto.Pipeline.state:type_name -> proto.Pipeline.PipelineState
	44, // 1: proto.Pipeline.custom_tasks:type_name -> proto.Pipeline.CustomTasksEntry
	45, // 2: proto.Pipeline.triggers:type_name -> proto.Pipeline.TriggersEntry
	46, // 3: proto.Pipeline.common_tasks:type_name -> proto.Pipeline.CommonTasksEntry
	47, // 4: proto.Pipeline.errors:type_name -> proto.Pipeline.Error
	30, // 5: proto.PipelineTaskConfig.custom_task:type_name -> proto.CustomTaskConfig
	33, // 6: proto.PipelineTaskConfig.common_task:type_name -> proto.CommonTaskConfig
	22, // 7: proto.PipelineConfig.tasks:type_name -> proto.PipelineTaskConfig
	31, // 8: proto.PipelineConfig.triggers:type_name -> proto.PipelineTriggerConfig
	2,  // 9: proto.Run.state:type_name -> proto.Run.RunState
	3,  // 10: proto.Run.status:type_name -> proto.Run.RunStatus
	25, // 11: proto.Run.status_reason:type_name -> proto.RunStatusReason
	48, // 12: proto.Run.trigger:type_name -> proto.Run.RunTriggerInfo
	20, // 13: proto.Run.variables:type_name -> proto.Variable
	4,  // 14: proto.RunStatusReason.reason:type_name -> proto.RunStatusReason.RunStatusReasonKind
	26, // 15: proto.CustomTask.registry_auth:type_name -> proto.RegistryAuth
	49, // 16: proto.CustomTask.depends_on:type_name -> proto.CustomTask.DependsOnEntry
	20, // 17: proto.CustomTask.variables:type_name -> proto.Variable
	50, // 18: proto.PipelineTriggerSettings.settings:type_name -> proto.PipelineTriggerSettings.SettingsEntry
	51, // 19: proto.PipelineCommonTaskSettings.depends_on:type_name -> proto.PipelineCommonTaskSettings.DependsOnEntry
	52, // 20: proto.PipelineCommonTaskSettings.settings:type_name -> proto.PipelineCommonTaskSettings.SettingsEntry
	26, // 21: proto.CustomTaskConfig.registry_auth:type_name -> proto.RegistryAuth
	53, // 22: proto.CustomTaskConfig.depends_on:type_name -> proto.CustomTaskConfig.DependsOnEntry
	54, // 23: proto.CustomTaskConfig.variables:type_name -> proto.CustomTaskConfig.VariablesEntry
	55, // 24: proto.PipelineTriggerConfig.settings:type_name -> proto.PipelineTriggerConfig.SettingsEntry
	26, // 25: proto.CommonTask.registry_auth:type_name -> proto.RegistryAuth
	56, // 26: proto.CommonTask.depends_on:type_name -> proto.CommonTask.DependsOnEntry
	20, // 27: proto.CommonTask.variables:type_name -> proto.Variable
	57, // 28: proto.CommonTaskConfig.depends_on:type_name -> proto.CommonTaskConfig.DependsOnEntry
	58, // 29: proto.CommonTaskConfig.settings:type_name -> proto.CommonTaskConfig.SettingsEntry
	10, // 30: proto.TaskRunStatusReason.reason:type_name -> proto.TaskRunStatusReason.Reason
	34, // 31: proto.TaskRun.status_reason:type_name -> proto.TaskRunStatusReason
	11, // 32: proto.TaskRun.state:type_name -> proto.TaskRun.TaskRunState
	12, // 33: proto.TaskRun.status:type_name -> proto.TaskRun.TaskRunStatus
	27, // 34: proto.TaskRun.custom_task:type_name -> proto.CustomTask
	32, // 35: proto.TaskRun.common_task:type_name -> proto.CommonTask
	20, // 36: proto.TaskRun.variables:type_name -> proto.Variable
	13, // 37: proto.Trigger.state:type_name -> proto.Trigger.TriggerState
	14, // 38: proto.Trigger.status:type_name -> proto.Trigger.TriggerStatus
	59, // 39: proto.TriggerRegistration.variables:type_name -> proto.TriggerRegistration.VariablesEntry
	15, // 40: proto.TriggerRegistration.status:type_name -> proto.TriggerRegistration.TriggerStatus
	20, // 41: proto.CommonTaskRegistration.variables:type_name -> proto.Variable
	16, // 42: proto.CommonTaskRegistration.status:type_name -> proto.CommonTaskRegistration.Status
	17, // 43: proto.Token.kind:type_name -> proto.Token.Kind
	60, // 44: proto.Token.metadata:type_name -> proto.Token.MetadataEntry
	18, // 45: proto.TriggerResult.status:type_name -> proto.TriggerResult.Status
	27, // 46: proto.Pipeline.CustomTasksEntry.value:type_name -> proto.CustomTask
	28, // 47: proto.Pipeline.TriggersEntry.value:type_name -> proto.PipelineTriggerSettings
	29, // 48: proto.Pipeline.CommonTasksEntry.value:type_name -> proto.PipelineCommonTaskSettings
	1,  // 49: proto.Pipeline.Error.kind:type_name -> proto.Pipeline.ErrorKind
	5,  // 50: proto.CustomTask.DependsOnEntry.value:type_name -> proto.CustomTask.RequiredParentStatus
	6,  // 51: proto.PipelineCommonTaskSettings.DependsOnEntry.value:type_name -> proto.PipelineCommonTaskSettings.RequiredParentStatus
	7,  // 52: proto.CustomTaskConfig.DependsOnEntry.value:type_name -> proto.CustomTaskConfig.RequiredParentStatus
	8,  // 53: proto.CommonTask.DependsOnEntry.value:type_name -> proto.CommonTask.RequiredParentStatus
	9,  // 54: proto.CommonTaskConfig.DependsOnEntry.value:type_name -> proto.CommonTaskConfig.RequiredParentStatus
	55, // [55:55] is the sub-list for method output_type
	55, // [55:55] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_gofer_message_proto_init() }
func file_gofer_message_proto_init() {
	if File_gofer_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gofer_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineTaskConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStatusReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineTriggerSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineCommonTaskSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomTaskConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineTriggerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTaskConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRunStatusReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTaskRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretStoreKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStoreKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run_RunTriggerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gofer_message_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*PipelineTaskConfig_CustomTask)(nil),
		(*PipelineTaskConfig_CommonTask)(nil),
	}
	file_gofer_message_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*TaskRun_CustomTask)(nil),
		(*TaskRun_CommonTask)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gofer_message_proto_rawDesc,
			NumEnums:      19,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gofer_message_proto_goTypes,
		DependencyIndexes: file_gofer_message_proto_depIdxs,
		EnumInfos:         file_gofer_message_proto_enumTypes,
		MessageInfos:      file_gofer_message_proto_msgTypes,
	}.Build()
	File_gofer_message_proto = out.File
	file_gofer_message_proto_rawDesc = nil
	file_gofer_message_proto_goTypes = nil
	file_gofer_message_proto_depIdxs = nil
}
