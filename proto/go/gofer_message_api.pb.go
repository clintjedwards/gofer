// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: gofer_message_api.proto

package _go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PipelineMetadata_PipelineState int32

const (
	PipelineMetadata_PIPELINE_STATE_UNKNOWN PipelineMetadata_PipelineState = 0
	PipelineMetadata_ACTIVE                 PipelineMetadata_PipelineState = 1
	PipelineMetadata_DISABLED               PipelineMetadata_PipelineState = 2
)

// Enum value maps for PipelineMetadata_PipelineState.
var (
	PipelineMetadata_PipelineState_name = map[int32]string{
		0: "PIPELINE_STATE_UNKNOWN",
		1: "ACTIVE",
		2: "DISABLED",
	}
	PipelineMetadata_PipelineState_value = map[string]int32{
		"PIPELINE_STATE_UNKNOWN": 0,
		"ACTIVE":                 1,
		"DISABLED":               2,
	}
)

func (x PipelineMetadata_PipelineState) Enum() *PipelineMetadata_PipelineState {
	p := new(PipelineMetadata_PipelineState)
	*p = x
	return p
}

func (x PipelineMetadata_PipelineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineMetadata_PipelineState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[0].Descriptor()
}

func (PipelineMetadata_PipelineState) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[0]
}

func (x PipelineMetadata_PipelineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineMetadata_PipelineState.Descriptor instead.
func (PipelineMetadata_PipelineState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{3, 0}
}

type PipelineConfig_PipelineConfigState int32

const (
	PipelineConfig_PIPELINE_CONFIG_STATE_UNKNOWN PipelineConfig_PipelineConfigState = 0
	PipelineConfig_UNRELEASED                    PipelineConfig_PipelineConfigState = 1
	PipelineConfig_LIVE                          PipelineConfig_PipelineConfigState = 2
	PipelineConfig_DEPRECATED                    PipelineConfig_PipelineConfigState = 3
)

// Enum value maps for PipelineConfig_PipelineConfigState.
var (
	PipelineConfig_PipelineConfigState_name = map[int32]string{
		0: "PIPELINE_CONFIG_STATE_UNKNOWN",
		1: "UNRELEASED",
		2: "LIVE",
		3: "DEPRECATED",
	}
	PipelineConfig_PipelineConfigState_value = map[string]int32{
		"PIPELINE_CONFIG_STATE_UNKNOWN": 0,
		"UNRELEASED":                    1,
		"LIVE":                          2,
		"DEPRECATED":                    3,
	}
)

func (x PipelineConfig_PipelineConfigState) Enum() *PipelineConfig_PipelineConfigState {
	p := new(PipelineConfig_PipelineConfigState)
	*p = x
	return p
}

func (x PipelineConfig_PipelineConfigState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineConfig_PipelineConfigState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[1].Descriptor()
}

func (PipelineConfig_PipelineConfigState) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[1]
}

func (x PipelineConfig_PipelineConfigState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineConfig_PipelineConfigState.Descriptor instead.
func (PipelineConfig_PipelineConfigState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{4, 0}
}

type PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind int32

const (
	PipelineExtensionSubscriptionStatusReason_PIPELINE_EXTENSION_STATUS_REASON_UNKNOWN PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind = 0
	PipelineExtensionSubscriptionStatusReason_ACTIVE                                   PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind = 1
	PipelineExtensionSubscriptionStatusReason_ERROR                                    PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind = 2
	PipelineExtensionSubscriptionStatusReason_DISABLED                                 PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind = 3
)

// Enum value maps for PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind.
var (
	PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind_name = map[int32]string{
		0: "PIPELINE_EXTENSION_STATUS_REASON_UNKNOWN",
		1: "ACTIVE",
		2: "ERROR",
		3: "DISABLED",
	}
	PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind_value = map[string]int32{
		"PIPELINE_EXTENSION_STATUS_REASON_UNKNOWN": 0,
		"ACTIVE":   1,
		"ERROR":    2,
		"DISABLED": 3,
	}
)

func (x PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind) Enum() *PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind {
	p := new(PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind)
	*p = x
	return p
}

func (x PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[2].Descriptor()
}

func (PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[2]
}

func (x PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind.Descriptor instead.
func (PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{5, 0}
}

type PipelineExtensionSubscription_Status int32

const (
	PipelineExtensionSubscription_STATUS_UNKNOWN PipelineExtensionSubscription_Status = 0
	PipelineExtensionSubscription_ACTIVE         PipelineExtensionSubscription_Status = 1
	PipelineExtensionSubscription_ERROR          PipelineExtensionSubscription_Status = 2
	PipelineExtensionSubscription_DISABLED       PipelineExtensionSubscription_Status = 3
)

// Enum value maps for PipelineExtensionSubscription_Status.
var (
	PipelineExtensionSubscription_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "ACTIVE",
		2: "ERROR",
		3: "DISABLED",
	}
	PipelineExtensionSubscription_Status_value = map[string]int32{
		"STATUS_UNKNOWN": 0,
		"ACTIVE":         1,
		"ERROR":          2,
		"DISABLED":       3,
	}
)

func (x PipelineExtensionSubscription_Status) Enum() *PipelineExtensionSubscription_Status {
	p := new(PipelineExtensionSubscription_Status)
	*p = x
	return p
}

func (x PipelineExtensionSubscription_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineExtensionSubscription_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[3].Descriptor()
}

func (PipelineExtensionSubscription_Status) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[3]
}

func (x PipelineExtensionSubscription_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineExtensionSubscription_Status.Descriptor instead.
func (PipelineExtensionSubscription_Status) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{6, 0}
}

type DeploymentStatusReason_DeploymentStatusReasonKind int32

const (
	DeploymentStatusReason_DEPLOYMENT_STATUS_REASON_UNKNOWN DeploymentStatusReason_DeploymentStatusReasonKind = 0
)

// Enum value maps for DeploymentStatusReason_DeploymentStatusReasonKind.
var (
	DeploymentStatusReason_DeploymentStatusReasonKind_name = map[int32]string{
		0: "DEPLOYMENT_STATUS_REASON_UNKNOWN",
	}
	DeploymentStatusReason_DeploymentStatusReasonKind_value = map[string]int32{
		"DEPLOYMENT_STATUS_REASON_UNKNOWN": 0,
	}
)

func (x DeploymentStatusReason_DeploymentStatusReasonKind) Enum() *DeploymentStatusReason_DeploymentStatusReasonKind {
	p := new(DeploymentStatusReason_DeploymentStatusReasonKind)
	*p = x
	return p
}

func (x DeploymentStatusReason_DeploymentStatusReasonKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentStatusReason_DeploymentStatusReasonKind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[4].Descriptor()
}

func (DeploymentStatusReason_DeploymentStatusReasonKind) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[4]
}

func (x DeploymentStatusReason_DeploymentStatusReasonKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentStatusReason_DeploymentStatusReasonKind.Descriptor instead.
func (DeploymentStatusReason_DeploymentStatusReasonKind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{7, 0}
}

type Deployment_DeploymentState int32

const (
	Deployment_DEPLOYMENT_STATE_UNKNOWN Deployment_DeploymentState = 0
	Deployment_RUNNING                  Deployment_DeploymentState = 1
	Deployment_COMPLETE                 Deployment_DeploymentState = 2
)

// Enum value maps for Deployment_DeploymentState.
var (
	Deployment_DeploymentState_name = map[int32]string{
		0: "DEPLOYMENT_STATE_UNKNOWN",
		1: "RUNNING",
		2: "COMPLETE",
	}
	Deployment_DeploymentState_value = map[string]int32{
		"DEPLOYMENT_STATE_UNKNOWN": 0,
		"RUNNING":                  1,
		"COMPLETE":                 2,
	}
)

func (x Deployment_DeploymentState) Enum() *Deployment_DeploymentState {
	p := new(Deployment_DeploymentState)
	*p = x
	return p
}

func (x Deployment_DeploymentState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Deployment_DeploymentState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[5].Descriptor()
}

func (Deployment_DeploymentState) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[5]
}

func (x Deployment_DeploymentState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Deployment_DeploymentState.Descriptor instead.
func (Deployment_DeploymentState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{8, 0}
}

type Deployment_DeploymentStatus int32

const (
	Deployment_DEPLOYMENT_STATUS_UNKNOWN Deployment_DeploymentStatus = 0
	Deployment_FAILED                    Deployment_DeploymentStatus = 1
	Deployment_SUCCESSFUL                Deployment_DeploymentStatus = 2
)

// Enum value maps for Deployment_DeploymentStatus.
var (
	Deployment_DeploymentStatus_name = map[int32]string{
		0: "DEPLOYMENT_STATUS_UNKNOWN",
		1: "FAILED",
		2: "SUCCESSFUL",
	}
	Deployment_DeploymentStatus_value = map[string]int32{
		"DEPLOYMENT_STATUS_UNKNOWN": 0,
		"FAILED":                    1,
		"SUCCESSFUL":                2,
	}
)

func (x Deployment_DeploymentStatus) Enum() *Deployment_DeploymentStatus {
	p := new(Deployment_DeploymentStatus)
	*p = x
	return p
}

func (x Deployment_DeploymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Deployment_DeploymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[6].Descriptor()
}

func (Deployment_DeploymentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[6]
}

func (x Deployment_DeploymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Deployment_DeploymentStatus.Descriptor instead.
func (Deployment_DeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{8, 1}
}

type Run_RunState int32

const (
	Run_RUN_STATE_UNKNOWN Run_RunState = 0
	Run_PENDING           Run_RunState = 1
	Run_RUNNING           Run_RunState = 2
	Run_COMPLETE          Run_RunState = 3
)

// Enum value maps for Run_RunState.
var (
	Run_RunState_name = map[int32]string{
		0: "RUN_STATE_UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETE",
	}
	Run_RunState_value = map[string]int32{
		"RUN_STATE_UNKNOWN": 0,
		"PENDING":           1,
		"RUNNING":           2,
		"COMPLETE":          3,
	}
)

func (x Run_RunState) Enum() *Run_RunState {
	p := new(Run_RunState)
	*p = x
	return p
}

func (x Run_RunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Run_RunState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[7].Descriptor()
}

func (Run_RunState) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[7]
}

func (x Run_RunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Run_RunState.Descriptor instead.
func (Run_RunState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{9, 0}
}

type Run_RunStatus int32

const (
	Run_RUN_STATUS_UNKNOWN Run_RunStatus = 0
	Run_SUCCESSFUL         Run_RunStatus = 1
	Run_FAILED             Run_RunStatus = 2
	Run_CANCELLED          Run_RunStatus = 3
)

// Enum value maps for Run_RunStatus.
var (
	Run_RunStatus_name = map[int32]string{
		0: "RUN_STATUS_UNKNOWN",
		1: "SUCCESSFUL",
		2: "FAILED",
		3: "CANCELLED",
	}
	Run_RunStatus_value = map[string]int32{
		"RUN_STATUS_UNKNOWN": 0,
		"SUCCESSFUL":         1,
		"FAILED":             2,
		"CANCELLED":          3,
	}
)

func (x Run_RunStatus) Enum() *Run_RunStatus {
	p := new(Run_RunStatus)
	*p = x
	return p
}

func (x Run_RunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Run_RunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[8].Descriptor()
}

func (Run_RunStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[8]
}

func (x Run_RunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Run_RunStatus.Descriptor instead.
func (Run_RunStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{9, 1}
}

type RunStatusReason_RunStatusReasonKind int32

const (
	RunStatusReason_RUN_STATUS_REASON_UNKNOWN RunStatusReason_RunStatusReasonKind = 0
	RunStatusReason_ABNORMAL_EXIT             RunStatusReason_RunStatusReasonKind = 1
	RunStatusReason_SCHEDULER_ERROR           RunStatusReason_RunStatusReasonKind = 2
	RunStatusReason_FAILED_PRECONDITION       RunStatusReason_RunStatusReasonKind = 3
	RunStatusReason_USER_CANCELLED            RunStatusReason_RunStatusReasonKind = 4
	RunStatusReason_ADMIN_CANCELLED           RunStatusReason_RunStatusReasonKind = 5
)

// Enum value maps for RunStatusReason_RunStatusReasonKind.
var (
	RunStatusReason_RunStatusReasonKind_name = map[int32]string{
		0: "RUN_STATUS_REASON_UNKNOWN",
		1: "ABNORMAL_EXIT",
		2: "SCHEDULER_ERROR",
		3: "FAILED_PRECONDITION",
		4: "USER_CANCELLED",
		5: "ADMIN_CANCELLED",
	}
	RunStatusReason_RunStatusReasonKind_value = map[string]int32{
		"RUN_STATUS_REASON_UNKNOWN": 0,
		"ABNORMAL_EXIT":             1,
		"SCHEDULER_ERROR":           2,
		"FAILED_PRECONDITION":       3,
		"USER_CANCELLED":            4,
		"ADMIN_CANCELLED":           5,
	}
)

func (x RunStatusReason_RunStatusReasonKind) Enum() *RunStatusReason_RunStatusReasonKind {
	p := new(RunStatusReason_RunStatusReasonKind)
	*p = x
	return p
}

func (x RunStatusReason_RunStatusReasonKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunStatusReason_RunStatusReasonKind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[9].Descriptor()
}

func (RunStatusReason_RunStatusReasonKind) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[9]
}

func (x RunStatusReason_RunStatusReasonKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunStatusReason_RunStatusReasonKind.Descriptor instead.
func (RunStatusReason_RunStatusReasonKind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{10, 0}
}

type CustomTask_RequiredParentStatus int32

const (
	CustomTask_REQUIRED_PARENT_STATUS_UNKNOWN CustomTask_RequiredParentStatus = 0
	CustomTask_ANY                            CustomTask_RequiredParentStatus = 1
	CustomTask_SUCCESS                        CustomTask_RequiredParentStatus = 2
	CustomTask_FAILURE                        CustomTask_RequiredParentStatus = 3
)

// Enum value maps for CustomTask_RequiredParentStatus.
var (
	CustomTask_RequiredParentStatus_name = map[int32]string{
		0: "REQUIRED_PARENT_STATUS_UNKNOWN",
		1: "ANY",
		2: "SUCCESS",
		3: "FAILURE",
	}
	CustomTask_RequiredParentStatus_value = map[string]int32{
		"REQUIRED_PARENT_STATUS_UNKNOWN": 0,
		"ANY":                            1,
		"SUCCESS":                        2,
		"FAILURE":                        3,
	}
)

func (x CustomTask_RequiredParentStatus) Enum() *CustomTask_RequiredParentStatus {
	p := new(CustomTask_RequiredParentStatus)
	*p = x
	return p
}

func (x CustomTask_RequiredParentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomTask_RequiredParentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[10].Descriptor()
}

func (CustomTask_RequiredParentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[10]
}

func (x CustomTask_RequiredParentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomTask_RequiredParentStatus.Descriptor instead.
func (CustomTask_RequiredParentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{12, 0}
}

type PipelineCommonTaskSettings_RequiredParentStatus int32

const (
	PipelineCommonTaskSettings_REQUIRED_PARENT_STATUS_UNKNOWN PipelineCommonTaskSettings_RequiredParentStatus = 0
	PipelineCommonTaskSettings_ANY                            PipelineCommonTaskSettings_RequiredParentStatus = 1
	PipelineCommonTaskSettings_SUCCESS                        PipelineCommonTaskSettings_RequiredParentStatus = 2
	PipelineCommonTaskSettings_FAILURE                        PipelineCommonTaskSettings_RequiredParentStatus = 3
)

// Enum value maps for PipelineCommonTaskSettings_RequiredParentStatus.
var (
	PipelineCommonTaskSettings_RequiredParentStatus_name = map[int32]string{
		0: "REQUIRED_PARENT_STATUS_UNKNOWN",
		1: "ANY",
		2: "SUCCESS",
		3: "FAILURE",
	}
	PipelineCommonTaskSettings_RequiredParentStatus_value = map[string]int32{
		"REQUIRED_PARENT_STATUS_UNKNOWN": 0,
		"ANY":                            1,
		"SUCCESS":                        2,
		"FAILURE":                        3,
	}
)

func (x PipelineCommonTaskSettings_RequiredParentStatus) Enum() *PipelineCommonTaskSettings_RequiredParentStatus {
	p := new(PipelineCommonTaskSettings_RequiredParentStatus)
	*p = x
	return p
}

func (x PipelineCommonTaskSettings_RequiredParentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineCommonTaskSettings_RequiredParentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[11].Descriptor()
}

func (PipelineCommonTaskSettings_RequiredParentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[11]
}

func (x PipelineCommonTaskSettings_RequiredParentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineCommonTaskSettings_RequiredParentStatus.Descriptor instead.
func (PipelineCommonTaskSettings_RequiredParentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{14, 0}
}

type TaskRunStatusReason_Reason int32

const (
	TaskRunStatusReason_UNKNOWN             TaskRunStatusReason_Reason = 0
	TaskRunStatusReason_ABNORMAL_EXIT       TaskRunStatusReason_Reason = 1
	TaskRunStatusReason_SCHEDULER_ERROR     TaskRunStatusReason_Reason = 2
	TaskRunStatusReason_FAILED_PRECONDITION TaskRunStatusReason_Reason = 3
	TaskRunStatusReason_CANCELLED           TaskRunStatusReason_Reason = 4
	TaskRunStatusReason_ORPHANED            TaskRunStatusReason_Reason = 5
)

// Enum value maps for TaskRunStatusReason_Reason.
var (
	TaskRunStatusReason_Reason_name = map[int32]string{
		0: "UNKNOWN",
		1: "ABNORMAL_EXIT",
		2: "SCHEDULER_ERROR",
		3: "FAILED_PRECONDITION",
		4: "CANCELLED",
		5: "ORPHANED",
	}
	TaskRunStatusReason_Reason_value = map[string]int32{
		"UNKNOWN":             0,
		"ABNORMAL_EXIT":       1,
		"SCHEDULER_ERROR":     2,
		"FAILED_PRECONDITION": 3,
		"CANCELLED":           4,
		"ORPHANED":            5,
	}
)

func (x TaskRunStatusReason_Reason) Enum() *TaskRunStatusReason_Reason {
	p := new(TaskRunStatusReason_Reason)
	*p = x
	return p
}

func (x TaskRunStatusReason_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRunStatusReason_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[12].Descriptor()
}

func (TaskRunStatusReason_Reason) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[12]
}

func (x TaskRunStatusReason_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRunStatusReason_Reason.Descriptor instead.
func (TaskRunStatusReason_Reason) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{16, 0}
}

type TaskRun_TaskRunState int32

const (
	TaskRun_UNKNOWN_STATE TaskRun_TaskRunState = 0
	TaskRun_PROCESSING    TaskRun_TaskRunState = 1
	TaskRun_WAITING       TaskRun_TaskRunState = 2
	TaskRun_RUNNING       TaskRun_TaskRunState = 3
	TaskRun_COMPLETE      TaskRun_TaskRunState = 4
)

// Enum value maps for TaskRun_TaskRunState.
var (
	TaskRun_TaskRunState_name = map[int32]string{
		0: "UNKNOWN_STATE",
		1: "PROCESSING",
		2: "WAITING",
		3: "RUNNING",
		4: "COMPLETE",
	}
	TaskRun_TaskRunState_value = map[string]int32{
		"UNKNOWN_STATE": 0,
		"PROCESSING":    1,
		"WAITING":       2,
		"RUNNING":       3,
		"COMPLETE":      4,
	}
)

func (x TaskRun_TaskRunState) Enum() *TaskRun_TaskRunState {
	p := new(TaskRun_TaskRunState)
	*p = x
	return p
}

func (x TaskRun_TaskRunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRun_TaskRunState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[13].Descriptor()
}

func (TaskRun_TaskRunState) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[13]
}

func (x TaskRun_TaskRunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRun_TaskRunState.Descriptor instead.
func (TaskRun_TaskRunState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{17, 0}
}

type TaskRun_TaskRunStatus int32

const (
	TaskRun_UNKNOWN_STATUS TaskRun_TaskRunStatus = 0
	TaskRun_SUCCESSFUL     TaskRun_TaskRunStatus = 1
	TaskRun_FAILED         TaskRun_TaskRunStatus = 2
	TaskRun_CANCELLED      TaskRun_TaskRunStatus = 3
	TaskRun_SKIPPED        TaskRun_TaskRunStatus = 4
)

// Enum value maps for TaskRun_TaskRunStatus.
var (
	TaskRun_TaskRunStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "SUCCESSFUL",
		2: "FAILED",
		3: "CANCELLED",
		4: "SKIPPED",
	}
	TaskRun_TaskRunStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"SUCCESSFUL":     1,
		"FAILED":         2,
		"CANCELLED":      3,
		"SKIPPED":        4,
	}
)

func (x TaskRun_TaskRunStatus) Enum() *TaskRun_TaskRunStatus {
	p := new(TaskRun_TaskRunStatus)
	*p = x
	return p
}

func (x TaskRun_TaskRunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRun_TaskRunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[14].Descriptor()
}

func (TaskRun_TaskRunStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[14]
}

func (x TaskRun_TaskRunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRun_TaskRunStatus.Descriptor instead.
func (TaskRun_TaskRunStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{17, 1}
}

type TaskRun_TaskKind int32

const (
	TaskRun_UNKNOWN_TASKKIND TaskRun_TaskKind = 0
	TaskRun_COMMON           TaskRun_TaskKind = 1
	TaskRun_CUSTOM           TaskRun_TaskKind = 2
)

// Enum value maps for TaskRun_TaskKind.
var (
	TaskRun_TaskKind_name = map[int32]string{
		0: "UNKNOWN_TASKKIND",
		1: "COMMON",
		2: "CUSTOM",
	}
	TaskRun_TaskKind_value = map[string]int32{
		"UNKNOWN_TASKKIND": 0,
		"COMMON":           1,
		"CUSTOM":           2,
	}
)

func (x TaskRun_TaskKind) Enum() *TaskRun_TaskKind {
	p := new(TaskRun_TaskKind)
	*p = x
	return p
}

func (x TaskRun_TaskKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRun_TaskKind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[15].Descriptor()
}

func (TaskRun_TaskKind) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[15]
}

func (x TaskRun_TaskKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRun_TaskKind.Descriptor instead.
func (TaskRun_TaskKind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{17, 2}
}

type Extension_ExtensionState int32

const (
	Extension_UNKNOWN_STATE Extension_ExtensionState = 0
	Extension_PROCESSING    Extension_ExtensionState = 1
	Extension_RUNNING       Extension_ExtensionState = 2
	Extension_EXITED        Extension_ExtensionState = 3
)

// Enum value maps for Extension_ExtensionState.
var (
	Extension_ExtensionState_name = map[int32]string{
		0: "UNKNOWN_STATE",
		1: "PROCESSING",
		2: "RUNNING",
		3: "EXITED",
	}
	Extension_ExtensionState_value = map[string]int32{
		"UNKNOWN_STATE": 0,
		"PROCESSING":    1,
		"RUNNING":       2,
		"EXITED":        3,
	}
)

func (x Extension_ExtensionState) Enum() *Extension_ExtensionState {
	p := new(Extension_ExtensionState)
	*p = x
	return p
}

func (x Extension_ExtensionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Extension_ExtensionState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[16].Descriptor()
}

func (Extension_ExtensionState) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[16]
}

func (x Extension_ExtensionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Extension_ExtensionState.Descriptor instead.
func (Extension_ExtensionState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{18, 0}
}

type Extension_ExtensionStatus int32

const (
	Extension_UNKNOWN_STATUS Extension_ExtensionStatus = 0
	Extension_ENABLED        Extension_ExtensionStatus = 1
	Extension_DISABLED       Extension_ExtensionStatus = 2
)

// Enum value maps for Extension_ExtensionStatus.
var (
	Extension_ExtensionStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "ENABLED",
		2: "DISABLED",
	}
	Extension_ExtensionStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"ENABLED":        1,
		"DISABLED":       2,
	}
)

func (x Extension_ExtensionStatus) Enum() *Extension_ExtensionStatus {
	p := new(Extension_ExtensionStatus)
	*p = x
	return p
}

func (x Extension_ExtensionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Extension_ExtensionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[17].Descriptor()
}

func (Extension_ExtensionStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[17]
}

func (x Extension_ExtensionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Extension_ExtensionStatus.Descriptor instead.
func (Extension_ExtensionStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{18, 1}
}

type ExtensionRegistration_ExtensionStatus int32

const (
	ExtensionRegistration_UNKNOWN_STATUS ExtensionRegistration_ExtensionStatus = 0
	ExtensionRegistration_ENABLED        ExtensionRegistration_ExtensionStatus = 1
	ExtensionRegistration_DISABLED       ExtensionRegistration_ExtensionStatus = 2
)

// Enum value maps for ExtensionRegistration_ExtensionStatus.
var (
	ExtensionRegistration_ExtensionStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "ENABLED",
		2: "DISABLED",
	}
	ExtensionRegistration_ExtensionStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"ENABLED":        1,
		"DISABLED":       2,
	}
)

func (x ExtensionRegistration_ExtensionStatus) Enum() *ExtensionRegistration_ExtensionStatus {
	p := new(ExtensionRegistration_ExtensionStatus)
	*p = x
	return p
}

func (x ExtensionRegistration_ExtensionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExtensionRegistration_ExtensionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[18].Descriptor()
}

func (ExtensionRegistration_ExtensionStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[18]
}

func (x ExtensionRegistration_ExtensionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExtensionRegistration_ExtensionStatus.Descriptor instead.
func (ExtensionRegistration_ExtensionStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{19, 0}
}

type CommonTaskRegistration_Status int32

const (
	CommonTaskRegistration_UNKNOWN  CommonTaskRegistration_Status = 0
	CommonTaskRegistration_ENABLED  CommonTaskRegistration_Status = 1
	CommonTaskRegistration_DISABLED CommonTaskRegistration_Status = 2
)

// Enum value maps for CommonTaskRegistration_Status.
var (
	CommonTaskRegistration_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "ENABLED",
		2: "DISABLED",
	}
	CommonTaskRegistration_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x CommonTaskRegistration_Status) Enum() *CommonTaskRegistration_Status {
	p := new(CommonTaskRegistration_Status)
	*p = x
	return p
}

func (x CommonTaskRegistration_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonTaskRegistration_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[19].Descriptor()
}

func (CommonTaskRegistration_Status) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[19]
}

func (x CommonTaskRegistration_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonTaskRegistration_Status.Descriptor instead.
func (CommonTaskRegistration_Status) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{20, 0}
}

type Token_Kind int32

const (
	Token_UNKNOWN    Token_Kind = 0
	Token_MANAGEMENT Token_Kind = 1
	Token_CLIENT     Token_Kind = 2
)

// Enum value maps for Token_Kind.
var (
	Token_Kind_name = map[int32]string{
		0: "UNKNOWN",
		1: "MANAGEMENT",
		2: "CLIENT",
	}
	Token_Kind_value = map[string]int32{
		"UNKNOWN":    0,
		"MANAGEMENT": 1,
		"CLIENT":     2,
	}
)

func (x Token_Kind) Enum() *Token_Kind {
	p := new(Token_Kind)
	*p = x
	return p
}

func (x Token_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Token_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[20].Descriptor()
}

func (Token_Kind) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[20]
}

func (x Token_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Token_Kind.Descriptor instead.
func (Token_Kind) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{22, 0}
}

type ExtensionResult_Status int32

const (
	ExtensionResult_UNKNOWN ExtensionResult_Status = 0
	ExtensionResult_FAILURE ExtensionResult_Status = 1
	ExtensionResult_SUCCESS ExtensionResult_Status = 2
	ExtensionResult_SKIPPED ExtensionResult_Status = 3
)

// Enum value maps for ExtensionResult_Status.
var (
	ExtensionResult_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "FAILURE",
		2: "SUCCESS",
		3: "SKIPPED",
	}
	ExtensionResult_Status_value = map[string]int32{
		"UNKNOWN": 0,
		"FAILURE": 1,
		"SUCCESS": 2,
		"SKIPPED": 3,
	}
)

func (x ExtensionResult_Status) Enum() *ExtensionResult_Status {
	p := new(ExtensionResult_Status)
	*p = x
	return p
}

func (x ExtensionResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExtensionResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_api_proto_enumTypes[21].Descriptor()
}

func (ExtensionResult_Status) Type() protoreflect.EnumType {
	return &file_gofer_message_api_proto_enumTypes[21]
}

func (x ExtensionResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExtensionResult_Status.Descriptor instead.
func (ExtensionResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{23, 0}
}

type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Created     int64  `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified    int64  `protobuf:"varint,5,opt,name=modified,proto3" json:"modified,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{0}
}

func (x *Namespace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Namespace) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Namespace) GetModified() int64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

type Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Variable) Reset() {
	*x = Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{1}
}

func (x *Variable) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Variable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Variable) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *PipelineMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Config   *PipelineConfig   `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{2}
}

func (x *Pipeline) GetMetadata() *PipelineMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Pipeline) GetConfig() *PipelineConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type PipelineMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string                         `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Id        string                         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Created   int64                          `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Modified  int64                          `protobuf:"varint,4,opt,name=modified,proto3" json:"modified,omitempty"`
	State     PipelineMetadata_PipelineState `protobuf:"varint,5,opt,name=state,proto3,enum=proto.PipelineMetadata_PipelineState" json:"state,omitempty"`
}

func (x *PipelineMetadata) Reset() {
	*x = PipelineMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineMetadata) ProtoMessage() {}

func (x *PipelineMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineMetadata.ProtoReflect.Descriptor instead.
func (*PipelineMetadata) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{3}
}

func (x *PipelineMetadata) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PipelineMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PipelineMetadata) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *PipelineMetadata) GetModified() int64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

func (x *PipelineMetadata) GetState() PipelineMetadata_PipelineState {
	if x != nil {
		return x.State
	}
	return PipelineMetadata_PIPELINE_STATE_UNKNOWN
}

type PipelineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string                                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pipeline    string                                 `protobuf:"bytes,2,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Version     int64                                  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Parallelism int64                                  `protobuf:"varint,4,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	Name        string                                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CustomTasks map[string]*CustomTask                 `protobuf:"bytes,7,rep,name=custom_tasks,json=customTasks,proto3" json:"custom_tasks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CommonTasks map[string]*PipelineCommonTaskSettings `protobuf:"bytes,8,rep,name=common_tasks,json=commonTasks,proto3" json:"common_tasks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	State       PipelineConfig_PipelineConfigState     `protobuf:"varint,9,opt,name=state,proto3,enum=proto.PipelineConfig_PipelineConfigState" json:"state,omitempty"`
	Registered  int64                                  `protobuf:"varint,10,opt,name=registered,proto3" json:"registered,omitempty"`
	Deprecated  int64                                  `protobuf:"varint,11,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
}

func (x *PipelineConfig) Reset() {
	*x = PipelineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineConfig) ProtoMessage() {}

func (x *PipelineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineConfig.ProtoReflect.Descriptor instead.
func (*PipelineConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{4}
}

func (x *PipelineConfig) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PipelineConfig) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *PipelineConfig) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PipelineConfig) GetParallelism() int64 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *PipelineConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PipelineConfig) GetCustomTasks() map[string]*CustomTask {
	if x != nil {
		return x.CustomTasks
	}
	return nil
}

func (x *PipelineConfig) GetCommonTasks() map[string]*PipelineCommonTaskSettings {
	if x != nil {
		return x.CommonTasks
	}
	return nil
}

func (x *PipelineConfig) GetState() PipelineConfig_PipelineConfigState {
	if x != nil {
		return x.State
	}
	return PipelineConfig_PIPELINE_CONFIG_STATE_UNKNOWN
}

func (x *PipelineConfig) GetRegistered() int64 {
	if x != nil {
		return x.Registered
	}
	return 0
}

func (x *PipelineConfig) GetDeprecated() int64 {
	if x != nil {
		return x.Deprecated
	}
	return 0
}

type PipelineExtensionSubscriptionStatusReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind `protobuf:"varint,1,opt,name=reason,proto3,enum=proto.PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind" json:"reason,omitempty"`
	Description string                                                                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PipelineExtensionSubscriptionStatusReason) Reset() {
	*x = PipelineExtensionSubscriptionStatusReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineExtensionSubscriptionStatusReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineExtensionSubscriptionStatusReason) ProtoMessage() {}

func (x *PipelineExtensionSubscriptionStatusReason) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineExtensionSubscriptionStatusReason.ProtoReflect.Descriptor instead.
func (*PipelineExtensionSubscriptionStatusReason) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{5}
}

func (x *PipelineExtensionSubscriptionStatusReason) GetReason() PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind {
	if x != nil {
		return x.Reason
	}
	return PipelineExtensionSubscriptionStatusReason_PIPELINE_EXTENSION_STATUS_REASON_UNKNOWN
}

func (x *PipelineExtensionSubscriptionStatusReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type PipelineExtensionSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace    string                                     `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pipeline     string                                     `protobuf:"bytes,2,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Name         string                                     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Label        string                                     `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Settings     map[string]string                          `protobuf:"bytes,5,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status       PipelineExtensionSubscription_Status       `protobuf:"varint,6,opt,name=status,proto3,enum=proto.PipelineExtensionSubscription_Status" json:"status,omitempty"`
	StatusReason *PipelineExtensionSubscriptionStatusReason `protobuf:"bytes,7,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
}

func (x *PipelineExtensionSubscription) Reset() {
	*x = PipelineExtensionSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineExtensionSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineExtensionSubscription) ProtoMessage() {}

func (x *PipelineExtensionSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineExtensionSubscription.ProtoReflect.Descriptor instead.
func (*PipelineExtensionSubscription) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{6}
}

func (x *PipelineExtensionSubscription) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PipelineExtensionSubscription) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *PipelineExtensionSubscription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineExtensionSubscription) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineExtensionSubscription) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *PipelineExtensionSubscription) GetStatus() PipelineExtensionSubscription_Status {
	if x != nil {
		return x.Status
	}
	return PipelineExtensionSubscription_STATUS_UNKNOWN
}

func (x *PipelineExtensionSubscription) GetStatusReason() *PipelineExtensionSubscriptionStatusReason {
	if x != nil {
		return x.StatusReason
	}
	return nil
}

type DeploymentStatusReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      DeploymentStatusReason_DeploymentStatusReasonKind `protobuf:"varint,1,opt,name=reason,proto3,enum=proto.DeploymentStatusReason_DeploymentStatusReasonKind" json:"reason,omitempty"`
	Description string                                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DeploymentStatusReason) Reset() {
	*x = DeploymentStatusReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentStatusReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentStatusReason) ProtoMessage() {}

func (x *DeploymentStatusReason) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentStatusReason.ProtoReflect.Descriptor instead.
func (*DeploymentStatusReason) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{7}
}

func (x *DeploymentStatusReason) GetReason() DeploymentStatusReason_DeploymentStatusReasonKind {
	if x != nil {
		return x.Reason
	}
	return DeploymentStatusReason_DEPLOYMENT_STATUS_REASON_UNKNOWN
}

func (x *DeploymentStatusReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace    string                      `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pipeline     string                      `protobuf:"bytes,2,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Id           int64                       `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	StartVersion int64                       `protobuf:"varint,4,opt,name=start_version,json=startVersion,proto3" json:"start_version,omitempty"`
	EndVersion   int64                       `protobuf:"varint,5,opt,name=end_version,json=endVersion,proto3" json:"end_version,omitempty"`
	Started      int64                       `protobuf:"varint,6,opt,name=started,proto3" json:"started,omitempty"`
	Ended        int64                       `protobuf:"varint,7,opt,name=ended,proto3" json:"ended,omitempty"`
	State        Deployment_DeploymentState  `protobuf:"varint,8,opt,name=state,proto3,enum=proto.Deployment_DeploymentState" json:"state,omitempty"`
	Status       Deployment_DeploymentStatus `protobuf:"varint,9,opt,name=status,proto3,enum=proto.Deployment_DeploymentStatus" json:"status,omitempty"`
	StatusReason *DeploymentStatusReason     `protobuf:"bytes,10,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	Logs         []*Event                    `protobuf:"bytes,11,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{8}
}

func (x *Deployment) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Deployment) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *Deployment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Deployment) GetStartVersion() int64 {
	if x != nil {
		return x.StartVersion
	}
	return 0
}

func (x *Deployment) GetEndVersion() int64 {
	if x != nil {
		return x.EndVersion
	}
	return 0
}

func (x *Deployment) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Deployment) GetEnded() int64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *Deployment) GetState() Deployment_DeploymentState {
	if x != nil {
		return x.State
	}
	return Deployment_DEPLOYMENT_STATE_UNKNOWN
}

func (x *Deployment) GetStatus() Deployment_DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return Deployment_DEPLOYMENT_STATUS_UNKNOWN
}

func (x *Deployment) GetStatusReason() *DeploymentStatusReason {
	if x != nil {
		return x.StatusReason
	}
	return nil
}

func (x *Deployment) GetLogs() []*Event {
	if x != nil {
		return x.Logs
	}
	return nil
}

type Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace           string                `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pipeline            string                `protobuf:"bytes,2,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Version             int64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Id                  int64                 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Started             int64                 `protobuf:"varint,5,opt,name=started,proto3" json:"started,omitempty"`
	Ended               int64                 `protobuf:"varint,6,opt,name=ended,proto3" json:"ended,omitempty"`
	State               Run_RunState          `protobuf:"varint,7,opt,name=state,proto3,enum=proto.Run_RunState" json:"state,omitempty"`
	Status              Run_RunStatus         `protobuf:"varint,8,opt,name=status,proto3,enum=proto.Run_RunStatus" json:"status,omitempty"`
	StatusReason        *RunStatusReason      `protobuf:"bytes,9,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	Extension           *Run_RunExtensionInfo `protobuf:"bytes,10,opt,name=extension,proto3" json:"extension,omitempty"`
	Variables           []*Variable           `protobuf:"bytes,11,rep,name=variables,proto3" json:"variables,omitempty"`
	StoreObjectsExpired bool                  `protobuf:"varint,12,opt,name=store_objects_expired,json=storeObjectsExpired,proto3" json:"store_objects_expired,omitempty"`
}

func (x *Run) Reset() {
	*x = Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{9}
}

func (x *Run) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Run) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *Run) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Run) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Run) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Run) GetEnded() int64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *Run) GetState() Run_RunState {
	if x != nil {
		return x.State
	}
	return Run_RUN_STATE_UNKNOWN
}

func (x *Run) GetStatus() Run_RunStatus {
	if x != nil {
		return x.Status
	}
	return Run_RUN_STATUS_UNKNOWN
}

func (x *Run) GetStatusReason() *RunStatusReason {
	if x != nil {
		return x.StatusReason
	}
	return nil
}

func (x *Run) GetExtension() *Run_RunExtensionInfo {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Run) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Run) GetStoreObjectsExpired() bool {
	if x != nil {
		return x.StoreObjectsExpired
	}
	return false
}

type RunStatusReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      RunStatusReason_RunStatusReasonKind `protobuf:"varint,1,opt,name=reason,proto3,enum=proto.RunStatusReason_RunStatusReasonKind" json:"reason,omitempty"`
	Description string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RunStatusReason) Reset() {
	*x = RunStatusReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStatusReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStatusReason) ProtoMessage() {}

func (x *RunStatusReason) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStatusReason.ProtoReflect.Descriptor instead.
func (*RunStatusReason) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{10}
}

func (x *RunStatusReason) GetReason() RunStatusReason_RunStatusReasonKind {
	if x != nil {
		return x.Reason
	}
	return RunStatusReason_RUN_STATUS_REASON_UNKNOWN
}

func (x *RunStatusReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RegistryAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Pass string `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
}

func (x *RegistryAuth) Reset() {
	*x = RegistryAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryAuth) ProtoMessage() {}

func (x *RegistryAuth) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryAuth.ProtoReflect.Descriptor instead.
func (*RegistryAuth) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{11}
}

func (x *RegistryAuth) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RegistryAuth) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

type CustomTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description    string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image          string                                     `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	RegistryAuth   *RegistryAuth                              `protobuf:"bytes,4,opt,name=registry_auth,json=registryAuth,proto3" json:"registry_auth,omitempty"`
	DependsOn      map[string]CustomTask_RequiredParentStatus `protobuf:"bytes,5,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.CustomTask_RequiredParentStatus"`
	Variables      []*Variable                                `protobuf:"bytes,6,rep,name=variables,proto3" json:"variables,omitempty"`
	Entrypoint     []string                                   `protobuf:"bytes,7,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Command        []string                                   `protobuf:"bytes,8,rep,name=command,proto3" json:"command,omitempty"`
	InjectApiToken bool                                       `protobuf:"varint,9,opt,name=inject_api_token,json=injectApiToken,proto3" json:"inject_api_token,omitempty"`
}

func (x *CustomTask) Reset() {
	*x = CustomTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomTask) ProtoMessage() {}

func (x *CustomTask) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomTask.ProtoReflect.Descriptor instead.
func (*CustomTask) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{12}
}

func (x *CustomTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CustomTask) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CustomTask) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CustomTask) GetRegistryAuth() *RegistryAuth {
	if x != nil {
		return x.RegistryAuth
	}
	return nil
}

func (x *CustomTask) GetDependsOn() map[string]CustomTask_RequiredParentStatus {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *CustomTask) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CustomTask) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *CustomTask) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *CustomTask) GetInjectApiToken() bool {
	if x != nil {
		return x.InjectApiToken
	}
	return false
}

type PipelineExtensionSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label    string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Settings map[string]string `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PipelineExtensionSettings) Reset() {
	*x = PipelineExtensionSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineExtensionSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineExtensionSettings) ProtoMessage() {}

func (x *PipelineExtensionSettings) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineExtensionSettings.ProtoReflect.Descriptor instead.
func (*PipelineExtensionSettings) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{13}
}

func (x *PipelineExtensionSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineExtensionSettings) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineExtensionSettings) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

type PipelineCommonTaskSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                                                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label          string                                                     `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Description    string                                                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DependsOn      map[string]PipelineCommonTaskSettings_RequiredParentStatus `protobuf:"bytes,4,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.PipelineCommonTaskSettings_RequiredParentStatus"`
	Settings       map[string]string                                          `protobuf:"bytes,5,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InjectApiToken bool                                                       `protobuf:"varint,6,opt,name=inject_api_token,json=injectApiToken,proto3" json:"inject_api_token,omitempty"`
}

func (x *PipelineCommonTaskSettings) Reset() {
	*x = PipelineCommonTaskSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineCommonTaskSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineCommonTaskSettings) ProtoMessage() {}

func (x *PipelineCommonTaskSettings) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineCommonTaskSettings.ProtoReflect.Descriptor instead.
func (*PipelineCommonTaskSettings) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{14}
}

func (x *PipelineCommonTaskSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineCommonTaskSettings) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineCommonTaskSettings) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PipelineCommonTaskSettings) GetDependsOn() map[string]PipelineCommonTaskSettings_RequiredParentStatus {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *PipelineCommonTaskSettings) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *PipelineCommonTaskSettings) GetInjectApiToken() bool {
	if x != nil {
		return x.InjectApiToken
	}
	return false
}

type CommonTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings     *PipelineCommonTaskSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	Registration *CommonTaskRegistration     `protobuf:"bytes,2,opt,name=registration,proto3" json:"registration,omitempty"`
}

func (x *CommonTask) Reset() {
	*x = CommonTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTask) ProtoMessage() {}

func (x *CommonTask) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTask.ProtoReflect.Descriptor instead.
func (*CommonTask) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{15}
}

func (x *CommonTask) GetSettings() *PipelineCommonTaskSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CommonTask) GetRegistration() *CommonTaskRegistration {
	if x != nil {
		return x.Registration
	}
	return nil
}

type TaskRunStatusReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      TaskRunStatusReason_Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=proto.TaskRunStatusReason_Reason" json:"reason,omitempty"`
	Description string                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TaskRunStatusReason) Reset() {
	*x = TaskRunStatusReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRunStatusReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRunStatusReason) ProtoMessage() {}

func (x *TaskRunStatusReason) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRunStatusReason.ProtoReflect.Descriptor instead.
func (*TaskRunStatusReason) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{16}
}

func (x *TaskRunStatusReason) GetReason() TaskRunStatusReason_Reason {
	if x != nil {
		return x.Reason
	}
	return TaskRunStatusReason_UNKNOWN
}

func (x *TaskRunStatusReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TaskRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created      int64                 `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Ended        int64                 `protobuf:"varint,2,opt,name=ended,proto3" json:"ended,omitempty"`
	ExitCode     int64                 `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	StatusReason *TaskRunStatusReason  `protobuf:"bytes,4,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	Id           string                `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	LogsExpired  bool                  `protobuf:"varint,6,opt,name=logs_expired,json=logsExpired,proto3" json:"logs_expired,omitempty"`
	LogsRemoved  bool                  `protobuf:"varint,7,opt,name=logs_removed,json=logsRemoved,proto3" json:"logs_removed,omitempty"`
	Namespace    string                `protobuf:"bytes,8,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pipeline     string                `protobuf:"bytes,9,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Version      int64                 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	Run          int64                 `protobuf:"varint,11,opt,name=run,proto3" json:"run,omitempty"`
	Started      int64                 `protobuf:"varint,12,opt,name=started,proto3" json:"started,omitempty"`
	State        TaskRun_TaskRunState  `protobuf:"varint,13,opt,name=state,proto3,enum=proto.TaskRun_TaskRunState" json:"state,omitempty"`
	Status       TaskRun_TaskRunStatus `protobuf:"varint,14,opt,name=status,proto3,enum=proto.TaskRun_TaskRunStatus" json:"status,omitempty"`
	TaskKind     TaskRun_TaskKind      `protobuf:"varint,15,opt,name=task_kind,json=taskKind,proto3,enum=proto.TaskRun_TaskKind" json:"task_kind,omitempty"`
	// Types that are assignable to Task:
	//
	//	*TaskRun_CustomTask
	//	*TaskRun_CommonTask
	Task      isTaskRun_Task `protobuf_oneof:"task"`
	Variables []*Variable    `protobuf:"bytes,18,rep,name=variables,proto3" json:"variables,omitempty"`
}

func (x *TaskRun) Reset() {
	*x = TaskRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRun) ProtoMessage() {}

func (x *TaskRun) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRun.ProtoReflect.Descriptor instead.
func (*TaskRun) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{17}
}

func (x *TaskRun) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *TaskRun) GetEnded() int64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *TaskRun) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *TaskRun) GetStatusReason() *TaskRunStatusReason {
	if x != nil {
		return x.StatusReason
	}
	return nil
}

func (x *TaskRun) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskRun) GetLogsExpired() bool {
	if x != nil {
		return x.LogsExpired
	}
	return false
}

func (x *TaskRun) GetLogsRemoved() bool {
	if x != nil {
		return x.LogsRemoved
	}
	return false
}

func (x *TaskRun) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TaskRun) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *TaskRun) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TaskRun) GetRun() int64 {
	if x != nil {
		return x.Run
	}
	return 0
}

func (x *TaskRun) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *TaskRun) GetState() TaskRun_TaskRunState {
	if x != nil {
		return x.State
	}
	return TaskRun_UNKNOWN_STATE
}

func (x *TaskRun) GetStatus() TaskRun_TaskRunStatus {
	if x != nil {
		return x.Status
	}
	return TaskRun_UNKNOWN_STATUS
}

func (x *TaskRun) GetTaskKind() TaskRun_TaskKind {
	if x != nil {
		return x.TaskKind
	}
	return TaskRun_UNKNOWN_TASKKIND
}

func (m *TaskRun) GetTask() isTaskRun_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (x *TaskRun) GetCustomTask() *CustomTask {
	if x, ok := x.GetTask().(*TaskRun_CustomTask); ok {
		return x.CustomTask
	}
	return nil
}

func (x *TaskRun) GetCommonTask() *CommonTask {
	if x, ok := x.GetTask().(*TaskRun_CommonTask); ok {
		return x.CommonTask
	}
	return nil
}

func (x *TaskRun) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

type isTaskRun_Task interface {
	isTaskRun_Task()
}

type TaskRun_CustomTask struct {
	CustomTask *CustomTask `protobuf:"bytes,16,opt,name=custom_task,json=customTask,proto3,oneof"`
}

type TaskRun_CommonTask struct {
	CommonTask *CommonTask `protobuf:"bytes,17,opt,name=common_task,json=commonTask,proto3,oneof"`
}

func (*TaskRun_CustomTask) isTaskRun_Task() {}

func (*TaskRun_CommonTask) isTaskRun_Task() {}

type Extension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                    `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Url           string                    `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Started       int64                     `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`
	State         Extension_ExtensionState  `protobuf:"varint,5,opt,name=state,proto3,enum=proto.Extension_ExtensionState" json:"state,omitempty"`
	Status        Extension_ExtensionStatus `protobuf:"varint,6,opt,name=status,proto3,enum=proto.Extension_ExtensionStatus" json:"status,omitempty"`
	Documentation string                    `protobuf:"bytes,7,opt,name=documentation,proto3" json:"documentation,omitempty"`
}

func (x *Extension) Reset() {
	*x = Extension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Extension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extension) ProtoMessage() {}

func (x *Extension) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extension.ProtoReflect.Descriptor instead.
func (*Extension) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{18}
}

func (x *Extension) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Extension) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Extension) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Extension) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Extension) GetState() Extension_ExtensionState {
	if x != nil {
		return x.State
	}
	return Extension_UNKNOWN_STATE
}

func (x *Extension) GetStatus() Extension_ExtensionStatus {
	if x != nil {
		return x.Status
	}
	return Extension_UNKNOWN_STATUS
}

func (x *Extension) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

type ExtensionRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image     string                                `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	User      string                                `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Pass      string                                `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	Variables map[string]string                     `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Created   int64                                 `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	Status    ExtensionRegistration_ExtensionStatus `protobuf:"varint,7,opt,name=status,proto3,enum=proto.ExtensionRegistration_ExtensionStatus" json:"status,omitempty"`
}

func (x *ExtensionRegistration) Reset() {
	*x = ExtensionRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionRegistration) ProtoMessage() {}

func (x *ExtensionRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionRegistration.ProtoReflect.Descriptor instead.
func (*ExtensionRegistration) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{19}
}

func (x *ExtensionRegistration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExtensionRegistration) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ExtensionRegistration) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ExtensionRegistration) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *ExtensionRegistration) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *ExtensionRegistration) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ExtensionRegistration) GetStatus() ExtensionRegistration_ExtensionStatus {
	if x != nil {
		return x.Status
	}
	return ExtensionRegistration_UNKNOWN_STATUS
}

type CommonTaskRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                        `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	User          string                        `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Pass          string                        `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	Variables     []*Variable                   `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty"`
	Created       int64                         `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	Status        CommonTaskRegistration_Status `protobuf:"varint,7,opt,name=status,proto3,enum=proto.CommonTaskRegistration_Status" json:"status,omitempty"`
	Documentation string                        `protobuf:"bytes,8,opt,name=documentation,proto3" json:"documentation,omitempty"`
}

func (x *CommonTaskRegistration) Reset() {
	*x = CommonTaskRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTaskRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTaskRegistration) ProtoMessage() {}

func (x *CommonTaskRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTaskRegistration.ProtoReflect.Descriptor instead.
func (*CommonTaskRegistration) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{20}
}

func (x *CommonTaskRegistration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommonTaskRegistration) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CommonTaskRegistration) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CommonTaskRegistration) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *CommonTaskRegistration) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CommonTaskRegistration) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *CommonTaskRegistration) GetStatus() CommonTaskRegistration_Status {
	if x != nil {
		return x.Status
	}
	return CommonTaskRegistration_UNKNOWN
}

func (x *CommonTaskRegistration) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind    string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`       // What type of event
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"` // Json output of the event
	Emitted int64  `protobuf:"varint,4,opt,name=emitted,proto3" json:"emitted,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{21}
}

func (x *Event) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Event) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *Event) GetEmitted() int64 {
	if x != nil {
		return x.Emitted
	}
	return 0
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created    int64             `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Kind       Token_Kind        `protobuf:"varint,2,opt,name=kind,proto3,enum=proto.Token_Kind" json:"kind,omitempty"`
	Namespaces []string          `protobuf:"bytes,3,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Metadata   map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Expires    int64             `protobuf:"varint,5,opt,name=expires,proto3" json:"expires,omitempty"`
	Disabled   bool              `protobuf:"varint,6,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{22}
}

func (x *Token) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Token) GetKind() Token_Kind {
	if x != nil {
		return x.Kind
	}
	return Token_UNKNOWN
}

func (x *Token) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *Token) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Token) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *Token) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type ExtensionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  ExtensionResult_Status `protobuf:"varint,1,opt,name=status,proto3,enum=proto.ExtensionResult_Status" json:"status,omitempty"`
	Details string                 `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ExtensionResult) Reset() {
	*x = ExtensionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionResult) ProtoMessage() {}

func (x *ExtensionResult) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionResult.ProtoReflect.Descriptor instead.
func (*ExtensionResult) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{23}
}

func (x *ExtensionResult) GetStatus() ExtensionResult_Status {
	if x != nil {
		return x.Status
	}
	return ExtensionResult_UNKNOWN
}

func (x *ExtensionResult) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type SecretStoreKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Namespaces []string `protobuf:"bytes,2,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Created    int64    `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *SecretStoreKey) Reset() {
	*x = SecretStoreKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretStoreKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretStoreKey) ProtoMessage() {}

func (x *SecretStoreKey) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretStoreKey.ProtoReflect.Descriptor instead.
func (*SecretStoreKey) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{24}
}

func (x *SecretStoreKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SecretStoreKey) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *SecretStoreKey) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type ObjectStoreKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Created int64  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *ObjectStoreKey) Reset() {
	*x = ObjectStoreKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStoreKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStoreKey) ProtoMessage() {}

func (x *ObjectStoreKey) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStoreKey.ProtoReflect.Descriptor instead.
func (*ObjectStoreKey) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{25}
}

func (x *ObjectStoreKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ObjectStoreKey) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type Run_RunExtensionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Run_RunExtensionInfo) Reset() {
	*x = Run_RunExtensionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run_RunExtensionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run_RunExtensionInfo) ProtoMessage() {}

func (x *Run_RunExtensionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run_RunExtensionInfo.ProtoReflect.Descriptor instead.
func (*Run_RunExtensionInfo) Descriptor() ([]byte, []int) {
	return file_gofer_message_api_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Run_RunExtensionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Run_RunExtensionInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

var File_gofer_message_api_proto protoreflect.FileDescriptor

var file_gofer_message_api_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x6f, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x87, 0x01, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x4a, 0x0a, 0x08, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6e, 0x0a, 0x08, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xfa, 0x01, 0x0a, 0x10, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x3b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x45, 0x0a, 0x0d,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x16, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x22, 0xed, 0x05, 0x0a, 0x0e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x49, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x51, 0x0a, 0x10, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x10,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x62, 0x0a, 0x13, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49,
	0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x52,
	0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x56,
	0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x22, 0xca, 0x02, 0x0a, 0x29, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x76, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x5e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x2d,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x2c, 0x0a,
	0x28, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x22, 0xef, 0x03, 0x0a, 0x1d, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x4e, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x55, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x41, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x22, 0xd0, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x50, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x42, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12,
	0x24, 0x0a, 0x20, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x22, 0xc2, 0x04, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22,
	0x4a, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22, 0x4d, 0x0a, 0x10, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x19, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x10, 0x02, 0x22, 0xa6, 0x05, 0x0a, 0x03, 0x52,
	0x75, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75,
	0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x52, 0x75,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3b, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x1a, 0x3c, 0x0a, 0x10, 0x52, 0x75,
	0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x49, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x03, 0x22, 0x4e, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45,
	0x44, 0x10, 0x03, 0x22, 0x98, 0x02, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e,
	0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01,
	0x0a, 0x13, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x42, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c,
	0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x48, 0x45, 0x44,
	0x55, 0x4c, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x22, 0x36,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x22, 0xa7, 0x04, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a,
	0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x6a,
	0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x64, 0x0a, 0x0e, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73,
	0x6b, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x5d, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x51,
	0x55, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x03,
	0x22, 0xce, 0x01, 0x0a, 0x19, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x4a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xc2, 0x04, 0x0a, 0x1a, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x4b, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x74, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x0a, 0x1e, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x45,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49,
	0x4c, 0x55, 0x52, 0x45, 0x10, 0x03, 0x22, 0x8e, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x39, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x06,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x42, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x5f,
	0x45, 0x58, 0x49, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55,
	0x4c, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x52, 0x50, 0x48, 0x41, 0x4e, 0x45, 0x44, 0x10,
	0x05, 0x22, 0xa1, 0x07, 0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x6f, 0x67, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x72, 0x75, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x75, 0x6e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x34, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2d, 0x0a, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x0c, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50,
	0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x22, 0x5b, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45,
	0x44, 0x10, 0x04, 0x22, 0x38, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4b, 0x69, 0x6e, 0x64, 0x12,
	0x14, 0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x4b,
	0x49, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x88, 0x03, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4c, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x10, 0x03, 0x22, 0x40,
	0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x22, 0x94, 0x03, 0x0a, 0x15, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x49, 0x0a, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x40, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0xc9, 0x02, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42,
	0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x22, 0x5f, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x22, 0xc4, 0x02, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2f, 0x0a, 0x04, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x22, 0xa0, 0x01, 0x0a, 0x0f,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x3c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55,
	0x52, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x03, 0x22, 0x5c,
	0x0a, 0x0e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x3c, 0x0a, 0x0e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x6e, 0x74, 0x6a, 0x65,
	0x64, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x66, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gofer_message_api_proto_rawDescOnce sync.Once
	file_gofer_message_api_proto_rawDescData = file_gofer_message_api_proto_rawDesc
)

func file_gofer_message_api_proto_rawDescGZIP() []byte {
	file_gofer_message_api_proto_rawDescOnce.Do(func() {
		file_gofer_message_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_gofer_message_api_proto_rawDescData)
	})
	return file_gofer_message_api_proto_rawDescData
}

var file_gofer_message_api_proto_enumTypes = make([]protoimpl.EnumInfo, 22)
var file_gofer_message_api_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_gofer_message_api_proto_goTypes = []interface{}{
	(PipelineMetadata_PipelineState)(0),                                                          // 0: proto.PipelineMetadata.PipelineState
	(PipelineConfig_PipelineConfigState)(0),                                                      // 1: proto.PipelineConfig.PipelineConfigState
	(PipelineExtensionSubscriptionStatusReason_PipelineExtensionSubscriptionStatusReasonKind)(0), // 2: proto.PipelineExtensionSubscriptionStatusReason.PipelineExtensionSubscriptionStatusReasonKind
	(PipelineExtensionSubscription_Status)(0),                                                    // 3: proto.PipelineExtensionSubscription.Status
	(DeploymentStatusReason_DeploymentStatusReasonKind)(0),                                       // 4: proto.DeploymentStatusReason.DeploymentStatusReasonKind
	(Deployment_DeploymentState)(0),                                                              // 5: proto.Deployment.DeploymentState
	(Deployment_DeploymentStatus)(0),                                                             // 6: proto.Deployment.DeploymentStatus
	(Run_RunState)(0),                                                                            // 7: proto.Run.RunState
	(Run_RunStatus)(0),                                                                           // 8: proto.Run.RunStatus
	(RunStatusReason_RunStatusReasonKind)(0),                                                     // 9: proto.RunStatusReason.RunStatusReasonKind
	(CustomTask_RequiredParentStatus)(0),                                                         // 10: proto.CustomTask.RequiredParentStatus
	(PipelineCommonTaskSettings_RequiredParentStatus)(0),                                         // 11: proto.PipelineCommonTaskSettings.RequiredParentStatus
	(TaskRunStatusReason_Reason)(0),                                                              // 12: proto.TaskRunStatusReason.Reason
	(TaskRun_TaskRunState)(0),                                                                    // 13: proto.TaskRun.TaskRunState
	(TaskRun_TaskRunStatus)(0),                                                                   // 14: proto.TaskRun.TaskRunStatus
	(TaskRun_TaskKind)(0),                                                                        // 15: proto.TaskRun.TaskKind
	(Extension_ExtensionState)(0),                                                                // 16: proto.Extension.ExtensionState
	(Extension_ExtensionStatus)(0),                                                               // 17: proto.Extension.ExtensionStatus
	(ExtensionRegistration_ExtensionStatus)(0),                                                   // 18: proto.ExtensionRegistration.ExtensionStatus
	(CommonTaskRegistration_Status)(0),                                                           // 19: proto.CommonTaskRegistration.Status
	(Token_Kind)(0),                                                                              // 20: proto.Token.Kind
	(ExtensionResult_Status)(0),                                                                  // 21: proto.ExtensionResult.Status
	(*Namespace)(nil),                                                                            // 22: proto.Namespace
	(*Variable)(nil),                                                                             // 23: proto.Variable
	(*Pipeline)(nil),                                                                             // 24: proto.Pipeline
	(*PipelineMetadata)(nil),                                                                     // 25: proto.PipelineMetadata
	(*PipelineConfig)(nil),                                                                       // 26: proto.PipelineConfig
	(*PipelineExtensionSubscriptionStatusReason)(nil),                                            // 27: proto.PipelineExtensionSubscriptionStatusReason
	(*PipelineExtensionSubscription)(nil),                                                        // 28: proto.PipelineExtensionSubscription
	(*DeploymentStatusReason)(nil),                                                               // 29: proto.DeploymentStatusReason
	(*Deployment)(nil),                                                                           // 30: proto.Deployment
	(*Run)(nil),                                                                                  // 31: proto.Run
	(*RunStatusReason)(nil),                                                                      // 32: proto.RunStatusReason
	(*RegistryAuth)(nil),                                                                         // 33: proto.RegistryAuth
	(*CustomTask)(nil),                                                                           // 34: proto.CustomTask
	(*PipelineExtensionSettings)(nil),                                                            // 35: proto.PipelineExtensionSettings
	(*PipelineCommonTaskSettings)(nil),                                                           // 36: proto.PipelineCommonTaskSettings
	(*CommonTask)(nil),                                                                           // 37: proto.CommonTask
	(*TaskRunStatusReason)(nil),                                                                  // 38: proto.TaskRunStatusReason
	(*TaskRun)(nil),                                                                              // 39: proto.TaskRun
	(*Extension)(nil),                                                                            // 40: proto.Extension
	(*ExtensionRegistration)(nil),                                                                // 41: proto.ExtensionRegistration
	(*CommonTaskRegistration)(nil),                                                               // 42: proto.CommonTaskRegistration
	(*Event)(nil),                                                                                // 43: proto.Event
	(*Token)(nil),                                                                                // 44: proto.Token
	(*ExtensionResult)(nil),                                                                      // 45: proto.ExtensionResult
	(*SecretStoreKey)(nil),                                                                       // 46: proto.SecretStoreKey
	(*ObjectStoreKey)(nil),                                                                       // 47: proto.ObjectStoreKey
	nil,                                                                                          // 48: proto.PipelineConfig.CustomTasksEntry
	nil,                                                                                          // 49: proto.PipelineConfig.CommonTasksEntry
	nil,                                                                                          // 50: proto.PipelineExtensionSubscription.SettingsEntry
	(*Run_RunExtensionInfo)(nil),                                                                 // 51: proto.Run.RunExtensionInfo
	nil,                                                                                          // 52: proto.CustomTask.DependsOnEntry
	nil,                                                                                          // 53: proto.PipelineExtensionSettings.SettingsEntry
	nil,                                                                                          // 54: proto.PipelineCommonTaskSettings.DependsOnEntry
	nil,                                                                                          // 55: proto.PipelineCommonTaskSettings.SettingsEntry
	nil,                                                                                          // 56: proto.ExtensionRegistration.VariablesEntry
	nil,                                                                                          // 57: proto.Token.MetadataEntry
}
var file_gofer_message_api_proto_depIdxs = []int32{
	25, // 0: proto.Pipeline.metadata:type_name -> proto.PipelineMetadata
	26, // 1: proto.Pipeline.config:type_name -> proto.PipelineConfig
	0,  // 2: proto.PipelineMetadata.state:type_name -> proto.PipelineMetadata.PipelineState
	48, // 3: proto.PipelineConfig.custom_tasks:type_name -> proto.PipelineConfig.CustomTasksEntry
	49, // 4: proto.PipelineConfig.common_tasks:type_name -> proto.PipelineConfig.CommonTasksEntry
	1,  // 5: proto.PipelineConfig.state:type_name -> proto.PipelineConfig.PipelineConfigState
	2,  // 6: proto.PipelineExtensionSubscriptionStatusReason.reason:type_name -> proto.PipelineExtensionSubscriptionStatusReason.PipelineExtensionSubscriptionStatusReasonKind
	50, // 7: proto.PipelineExtensionSubscription.settings:type_name -> proto.PipelineExtensionSubscription.SettingsEntry
	3,  // 8: proto.PipelineExtensionSubscription.status:type_name -> proto.PipelineExtensionSubscription.Status
	27, // 9: proto.PipelineExtensionSubscription.status_reason:type_name -> proto.PipelineExtensionSubscriptionStatusReason
	4,  // 10: proto.DeploymentStatusReason.reason:type_name -> proto.DeploymentStatusReason.DeploymentStatusReasonKind
	5,  // 11: proto.Deployment.state:type_name -> proto.Deployment.DeploymentState
	6,  // 12: proto.Deployment.status:type_name -> proto.Deployment.DeploymentStatus
	29, // 13: proto.Deployment.status_reason:type_name -> proto.DeploymentStatusReason
	43, // 14: proto.Deployment.logs:type_name -> proto.Event
	7,  // 15: proto.Run.state:type_name -> proto.Run.RunState
	8,  // 16: proto.Run.status:type_name -> proto.Run.RunStatus
	32, // 17: proto.Run.status_reason:type_name -> proto.RunStatusReason
	51, // 18: proto.Run.extension:type_name -> proto.Run.RunExtensionInfo
	23, // 19: proto.Run.variables:type_name -> proto.Variable
	9,  // 20: proto.RunStatusReason.reason:type_name -> proto.RunStatusReason.RunStatusReasonKind
	33, // 21: proto.CustomTask.registry_auth:type_name -> proto.RegistryAuth
	52, // 22: proto.CustomTask.depends_on:type_name -> proto.CustomTask.DependsOnEntry
	23, // 23: proto.CustomTask.variables:type_name -> proto.Variable
	53, // 24: proto.PipelineExtensionSettings.settings:type_name -> proto.PipelineExtensionSettings.SettingsEntry
	54, // 25: proto.PipelineCommonTaskSettings.depends_on:type_name -> proto.PipelineCommonTaskSettings.DependsOnEntry
	55, // 26: proto.PipelineCommonTaskSettings.settings:type_name -> proto.PipelineCommonTaskSettings.SettingsEntry
	36, // 27: proto.CommonTask.settings:type_name -> proto.PipelineCommonTaskSettings
	42, // 28: proto.CommonTask.registration:type_name -> proto.CommonTaskRegistration
	12, // 29: proto.TaskRunStatusReason.reason:type_name -> proto.TaskRunStatusReason.Reason
	38, // 30: proto.TaskRun.status_reason:type_name -> proto.TaskRunStatusReason
	13, // 31: proto.TaskRun.state:type_name -> proto.TaskRun.TaskRunState
	14, // 32: proto.TaskRun.status:type_name -> proto.TaskRun.TaskRunStatus
	15, // 33: proto.TaskRun.task_kind:type_name -> proto.TaskRun.TaskKind
	34, // 34: proto.TaskRun.custom_task:type_name -> proto.CustomTask
	37, // 35: proto.TaskRun.common_task:type_name -> proto.CommonTask
	23, // 36: proto.TaskRun.variables:type_name -> proto.Variable
	16, // 37: proto.Extension.state:type_name -> proto.Extension.ExtensionState
	17, // 38: proto.Extension.status:type_name -> proto.Extension.ExtensionStatus
	56, // 39: proto.ExtensionRegistration.variables:type_name -> proto.ExtensionRegistration.VariablesEntry
	18, // 40: proto.ExtensionRegistration.status:type_name -> proto.ExtensionRegistration.ExtensionStatus
	23, // 41: proto.CommonTaskRegistration.variables:type_name -> proto.Variable
	19, // 42: proto.CommonTaskRegistration.status:type_name -> proto.CommonTaskRegistration.Status
	20, // 43: proto.Token.kind:type_name -> proto.Token.Kind
	57, // 44: proto.Token.metadata:type_name -> proto.Token.MetadataEntry
	21, // 45: proto.ExtensionResult.status:type_name -> proto.ExtensionResult.Status
	34, // 46: proto.PipelineConfig.CustomTasksEntry.value:type_name -> proto.CustomTask
	36, // 47: proto.PipelineConfig.CommonTasksEntry.value:type_name -> proto.PipelineCommonTaskSettings
	10, // 48: proto.CustomTask.DependsOnEntry.value:type_name -> proto.CustomTask.RequiredParentStatus
	11, // 49: proto.PipelineCommonTaskSettings.DependsOnEntry.value:type_name -> proto.PipelineCommonTaskSettings.RequiredParentStatus
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_gofer_message_api_proto_init() }
func file_gofer_message_api_proto_init() {
	if File_gofer_message_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gofer_message_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineExtensionSubscriptionStatusReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineExtensionSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentStatusReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStatusReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineExtensionSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineCommonTaskSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRunStatusReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Extension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTaskRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretStoreKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStoreKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run_RunExtensionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gofer_message_api_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*TaskRun_CustomTask)(nil),
		(*TaskRun_CommonTask)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gofer_message_api_proto_rawDesc,
			NumEnums:      22,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gofer_message_api_proto_goTypes,
		DependencyIndexes: file_gofer_message_api_proto_depIdxs,
		EnumInfos:         file_gofer_message_api_proto_enumTypes,
		MessageInfos:      file_gofer_message_api_proto_msgTypes,
	}.Build()
	File_gofer_message_api_proto = out.File
	file_gofer_message_api_proto_rawDesc = nil
	file_gofer_message_api_proto_goTypes = nil
	file_gofer_message_api_proto_depIdxs = nil
}
