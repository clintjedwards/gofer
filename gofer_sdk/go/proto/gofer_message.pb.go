// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.4
// source: gofer_message.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Variable_VariableSensitivity int32

const (
	Variable_VARIABLE_SENSITIVITY_UNKNOWN Variable_VariableSensitivity = 0
	Variable_PUBLIC                       Variable_VariableSensitivity = 1
	Variable_PRIVATE                      Variable_VariableSensitivity = 2
)

// Enum value maps for Variable_VariableSensitivity.
var (
	Variable_VariableSensitivity_name = map[int32]string{
		0: "VARIABLE_SENSITIVITY_UNKNOWN",
		1: "PUBLIC",
		2: "PRIVATE",
	}
	Variable_VariableSensitivity_value = map[string]int32{
		"VARIABLE_SENSITIVITY_UNKNOWN": 0,
		"PUBLIC":                       1,
		"PRIVATE":                      2,
	}
)

func (x Variable_VariableSensitivity) Enum() *Variable_VariableSensitivity {
	p := new(Variable_VariableSensitivity)
	*p = x
	return p
}

func (x Variable_VariableSensitivity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Variable_VariableSensitivity) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[0].Descriptor()
}

func (Variable_VariableSensitivity) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[0]
}

func (x Variable_VariableSensitivity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Variable_VariableSensitivity.Descriptor instead.
func (Variable_VariableSensitivity) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{1, 0}
}

type Variable_VariableOwner int32

const (
	Variable_VARIABLE_OWNER_UNKNOWN Variable_VariableOwner = 0
	Variable_USER                   Variable_VariableOwner = 1
	Variable_SYSTEM                 Variable_VariableOwner = 2
)

// Enum value maps for Variable_VariableOwner.
var (
	Variable_VariableOwner_name = map[int32]string{
		0: "VARIABLE_OWNER_UNKNOWN",
		1: "USER",
		2: "SYSTEM",
	}
	Variable_VariableOwner_value = map[string]int32{
		"VARIABLE_OWNER_UNKNOWN": 0,
		"USER":                   1,
		"SYSTEM":                 2,
	}
)

func (x Variable_VariableOwner) Enum() *Variable_VariableOwner {
	p := new(Variable_VariableOwner)
	*p = x
	return p
}

func (x Variable_VariableOwner) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Variable_VariableOwner) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[1].Descriptor()
}

func (Variable_VariableOwner) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[1]
}

func (x Variable_VariableOwner) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Variable_VariableOwner.Descriptor instead.
func (Variable_VariableOwner) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{1, 1}
}

type Pipeline_PipelineState int32

const (
	Pipeline_PIPELINE_STATE_UNKNOWN Pipeline_PipelineState = 0
	Pipeline_ACTIVE                 Pipeline_PipelineState = 1
	Pipeline_DISABLED               Pipeline_PipelineState = 2
)

// Enum value maps for Pipeline_PipelineState.
var (
	Pipeline_PipelineState_name = map[int32]string{
		0: "PIPELINE_STATE_UNKNOWN",
		1: "ACTIVE",
		2: "DISABLED",
	}
	Pipeline_PipelineState_value = map[string]int32{
		"PIPELINE_STATE_UNKNOWN": 0,
		"ACTIVE":                 1,
		"DISABLED":               2,
	}
)

func (x Pipeline_PipelineState) Enum() *Pipeline_PipelineState {
	p := new(Pipeline_PipelineState)
	*p = x
	return p
}

func (x Pipeline_PipelineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pipeline_PipelineState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[2].Descriptor()
}

func (Pipeline_PipelineState) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[2]
}

func (x Pipeline_PipelineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pipeline_PipelineState.Descriptor instead.
func (Pipeline_PipelineState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{2, 0}
}

type Run_RunState int32

const (
	Run_RUN_STATE_UNKNOWN Run_RunState = 0
	Run_PENDING           Run_RunState = 1
	Run_RUNNING           Run_RunState = 2
	Run_COMPLETE          Run_RunState = 3
)

// Enum value maps for Run_RunState.
var (
	Run_RunState_name = map[int32]string{
		0: "RUN_STATE_UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETE",
	}
	Run_RunState_value = map[string]int32{
		"RUN_STATE_UNKNOWN": 0,
		"PENDING":           1,
		"RUNNING":           2,
		"COMPLETE":          3,
	}
)

func (x Run_RunState) Enum() *Run_RunState {
	p := new(Run_RunState)
	*p = x
	return p
}

func (x Run_RunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Run_RunState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[3].Descriptor()
}

func (Run_RunState) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[3]
}

func (x Run_RunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Run_RunState.Descriptor instead.
func (Run_RunState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{4, 0}
}

type Run_RunStatus int32

const (
	Run_RUN_STATUS_UNKNOWN Run_RunStatus = 0
	Run_SUCCESSFUL         Run_RunStatus = 1
	Run_FAILED             Run_RunStatus = 2
	Run_CANCELLED          Run_RunStatus = 3
)

// Enum value maps for Run_RunStatus.
var (
	Run_RunStatus_name = map[int32]string{
		0: "RUN_STATUS_UNKNOWN",
		1: "SUCCESSFUL",
		2: "FAILED",
		3: "CANCELLED",
	}
	Run_RunStatus_value = map[string]int32{
		"RUN_STATUS_UNKNOWN": 0,
		"SUCCESSFUL":         1,
		"FAILED":             2,
		"CANCELLED":          3,
	}
)

func (x Run_RunStatus) Enum() *Run_RunStatus {
	p := new(Run_RunStatus)
	*p = x
	return p
}

func (x Run_RunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Run_RunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[4].Descriptor()
}

func (Run_RunStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[4]
}

func (x Run_RunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Run_RunStatus.Descriptor instead.
func (Run_RunStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{4, 1}
}

type RunStatusReason_RunStatusReason int32

const (
	RunStatusReason_RUN_STATUS_REASON_UNKNOWN RunStatusReason_RunStatusReason = 0
	RunStatusReason_ABNORMAL_EXIT             RunStatusReason_RunStatusReason = 1
	RunStatusReason_SCHEDULER_ERROR           RunStatusReason_RunStatusReason = 2
	RunStatusReason_FAILED_PRECONDITION       RunStatusReason_RunStatusReason = 3
	RunStatusReason_USER_CANCELLED            RunStatusReason_RunStatusReason = 4
	RunStatusReason_ADMIN_CANCELLED           RunStatusReason_RunStatusReason = 5
)

// Enum value maps for RunStatusReason_RunStatusReason.
var (
	RunStatusReason_RunStatusReason_name = map[int32]string{
		0: "RUN_STATUS_REASON_UNKNOWN",
		1: "ABNORMAL_EXIT",
		2: "SCHEDULER_ERROR",
		3: "FAILED_PRECONDITION",
		4: "USER_CANCELLED",
		5: "ADMIN_CANCELLED",
	}
	RunStatusReason_RunStatusReason_value = map[string]int32{
		"RUN_STATUS_REASON_UNKNOWN": 0,
		"ABNORMAL_EXIT":             1,
		"SCHEDULER_ERROR":           2,
		"FAILED_PRECONDITION":       3,
		"USER_CANCELLED":            4,
		"ADMIN_CANCELLED":           5,
	}
)

func (x RunStatusReason_RunStatusReason) Enum() *RunStatusReason_RunStatusReason {
	p := new(RunStatusReason_RunStatusReason)
	*p = x
	return p
}

func (x RunStatusReason_RunStatusReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunStatusReason_RunStatusReason) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[5].Descriptor()
}

func (RunStatusReason_RunStatusReason) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[5]
}

func (x RunStatusReason_RunStatusReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunStatusReason_RunStatusReason.Descriptor instead.
func (RunStatusReason_RunStatusReason) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{5, 0}
}

type Task_RequiredParentStatus int32

const (
	Task_REQUIRED_PARENT_STATUS_UNKNOWN Task_RequiredParentStatus = 0
	Task_ANY                            Task_RequiredParentStatus = 1
	Task_SUCCESS                        Task_RequiredParentStatus = 2
	Task_FAILURE                        Task_RequiredParentStatus = 3
)

// Enum value maps for Task_RequiredParentStatus.
var (
	Task_RequiredParentStatus_name = map[int32]string{
		0: "REQUIRED_PARENT_STATUS_UNKNOWN",
		1: "ANY",
		2: "SUCCESS",
		3: "FAILURE",
	}
	Task_RequiredParentStatus_value = map[string]int32{
		"REQUIRED_PARENT_STATUS_UNKNOWN": 0,
		"ANY":                            1,
		"SUCCESS":                        2,
		"FAILURE":                        3,
	}
)

func (x Task_RequiredParentStatus) Enum() *Task_RequiredParentStatus {
	p := new(Task_RequiredParentStatus)
	*p = x
	return p
}

func (x Task_RequiredParentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_RequiredParentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[6].Descriptor()
}

func (Task_RequiredParentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[6]
}

func (x Task_RequiredParentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_RequiredParentStatus.Descriptor instead.
func (Task_RequiredParentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{9, 0}
}

type TaskConfig_RequiredParentStatus int32

const (
	TaskConfig_REQUIRED_PARENT_STATUS_UNKNOWN TaskConfig_RequiredParentStatus = 0
	TaskConfig_ANY                            TaskConfig_RequiredParentStatus = 1
	TaskConfig_SUCCESS                        TaskConfig_RequiredParentStatus = 2
	TaskConfig_FAILURE                        TaskConfig_RequiredParentStatus = 3
)

// Enum value maps for TaskConfig_RequiredParentStatus.
var (
	TaskConfig_RequiredParentStatus_name = map[int32]string{
		0: "REQUIRED_PARENT_STATUS_UNKNOWN",
		1: "ANY",
		2: "SUCCESS",
		3: "FAILURE",
	}
	TaskConfig_RequiredParentStatus_value = map[string]int32{
		"REQUIRED_PARENT_STATUS_UNKNOWN": 0,
		"ANY":                            1,
		"SUCCESS":                        2,
		"FAILURE":                        3,
	}
)

func (x TaskConfig_RequiredParentStatus) Enum() *TaskConfig_RequiredParentStatus {
	p := new(TaskConfig_RequiredParentStatus)
	*p = x
	return p
}

func (x TaskConfig_RequiredParentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskConfig_RequiredParentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[7].Descriptor()
}

func (TaskConfig_RequiredParentStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[7]
}

func (x TaskConfig_RequiredParentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskConfig_RequiredParentStatus.Descriptor instead.
func (TaskConfig_RequiredParentStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{12, 0}
}

type TaskRunStatusReason_Reason int32

const (
	TaskRunStatusReason_UNKNOWN             TaskRunStatusReason_Reason = 0
	TaskRunStatusReason_ABNORMAL_EXIT       TaskRunStatusReason_Reason = 1
	TaskRunStatusReason_SCHEDULER_ERROR     TaskRunStatusReason_Reason = 2
	TaskRunStatusReason_FAILED_PRECONDITION TaskRunStatusReason_Reason = 3
	TaskRunStatusReason_CANCELLED           TaskRunStatusReason_Reason = 4
	TaskRunStatusReason_ORPHANED            TaskRunStatusReason_Reason = 5
)

// Enum value maps for TaskRunStatusReason_Reason.
var (
	TaskRunStatusReason_Reason_name = map[int32]string{
		0: "UNKNOWN",
		1: "ABNORMAL_EXIT",
		2: "SCHEDULER_ERROR",
		3: "FAILED_PRECONDITION",
		4: "CANCELLED",
		5: "ORPHANED",
	}
	TaskRunStatusReason_Reason_value = map[string]int32{
		"UNKNOWN":             0,
		"ABNORMAL_EXIT":       1,
		"SCHEDULER_ERROR":     2,
		"FAILED_PRECONDITION": 3,
		"CANCELLED":           4,
		"ORPHANED":            5,
	}
)

func (x TaskRunStatusReason_Reason) Enum() *TaskRunStatusReason_Reason {
	p := new(TaskRunStatusReason_Reason)
	*p = x
	return p
}

func (x TaskRunStatusReason_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRunStatusReason_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[8].Descriptor()
}

func (TaskRunStatusReason_Reason) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[8]
}

func (x TaskRunStatusReason_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRunStatusReason_Reason.Descriptor instead.
func (TaskRunStatusReason_Reason) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{15, 0}
}

type TaskRun_TaskRunState int32

const (
	TaskRun_UNKNOWN_STATE TaskRun_TaskRunState = 0
	TaskRun_PROCESSING    TaskRun_TaskRunState = 1
	TaskRun_WAITING       TaskRun_TaskRunState = 2
	TaskRun_RUNNING       TaskRun_TaskRunState = 3
	TaskRun_COMPLETE      TaskRun_TaskRunState = 4
)

// Enum value maps for TaskRun_TaskRunState.
var (
	TaskRun_TaskRunState_name = map[int32]string{
		0: "UNKNOWN_STATE",
		1: "PROCESSING",
		2: "WAITING",
		3: "RUNNING",
		4: "COMPLETE",
	}
	TaskRun_TaskRunState_value = map[string]int32{
		"UNKNOWN_STATE": 0,
		"PROCESSING":    1,
		"WAITING":       2,
		"RUNNING":       3,
		"COMPLETE":      4,
	}
)

func (x TaskRun_TaskRunState) Enum() *TaskRun_TaskRunState {
	p := new(TaskRun_TaskRunState)
	*p = x
	return p
}

func (x TaskRun_TaskRunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRun_TaskRunState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[9].Descriptor()
}

func (TaskRun_TaskRunState) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[9]
}

func (x TaskRun_TaskRunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRun_TaskRunState.Descriptor instead.
func (TaskRun_TaskRunState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{16, 0}
}

type TaskRun_TaskRunStatus int32

const (
	TaskRun_UNKNOWN_STATUS TaskRun_TaskRunStatus = 0
	TaskRun_SUCCESSFUL     TaskRun_TaskRunStatus = 1
	TaskRun_FAILED         TaskRun_TaskRunStatus = 2
	TaskRun_CANCELLED      TaskRun_TaskRunStatus = 3
	TaskRun_SKIPPED        TaskRun_TaskRunStatus = 4
)

// Enum value maps for TaskRun_TaskRunStatus.
var (
	TaskRun_TaskRunStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "SUCCESSFUL",
		2: "FAILED",
		3: "CANCELLED",
		4: "SKIPPED",
	}
	TaskRun_TaskRunStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"SUCCESSFUL":     1,
		"FAILED":         2,
		"CANCELLED":      3,
		"SKIPPED":        4,
	}
)

func (x TaskRun_TaskRunStatus) Enum() *TaskRun_TaskRunStatus {
	p := new(TaskRun_TaskRunStatus)
	*p = x
	return p
}

func (x TaskRun_TaskRunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRun_TaskRunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[10].Descriptor()
}

func (TaskRun_TaskRunStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[10]
}

func (x TaskRun_TaskRunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRun_TaskRunStatus.Descriptor instead.
func (TaskRun_TaskRunStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{16, 1}
}

type Trigger_TriggerState int32

const (
	Trigger_UNKNOWN_STATE Trigger_TriggerState = 0
	Trigger_PROCESSING    Trigger_TriggerState = 1
	Trigger_RUNNING       Trigger_TriggerState = 2
	Trigger_EXITED        Trigger_TriggerState = 3
)

// Enum value maps for Trigger_TriggerState.
var (
	Trigger_TriggerState_name = map[int32]string{
		0: "UNKNOWN_STATE",
		1: "PROCESSING",
		2: "RUNNING",
		3: "EXITED",
	}
	Trigger_TriggerState_value = map[string]int32{
		"UNKNOWN_STATE": 0,
		"PROCESSING":    1,
		"RUNNING":       2,
		"EXITED":        3,
	}
)

func (x Trigger_TriggerState) Enum() *Trigger_TriggerState {
	p := new(Trigger_TriggerState)
	*p = x
	return p
}

func (x Trigger_TriggerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Trigger_TriggerState) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[11].Descriptor()
}

func (Trigger_TriggerState) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[11]
}

func (x Trigger_TriggerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Trigger_TriggerState.Descriptor instead.
func (Trigger_TriggerState) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{17, 0}
}

type Trigger_TriggerStatus int32

const (
	Trigger_UNKNOWN_STATUS Trigger_TriggerStatus = 0
	Trigger_ENABLED        Trigger_TriggerStatus = 1
	Trigger_DISABLED       Trigger_TriggerStatus = 2
)

// Enum value maps for Trigger_TriggerStatus.
var (
	Trigger_TriggerStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "ENABLED",
		2: "DISABLED",
	}
	Trigger_TriggerStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"ENABLED":        1,
		"DISABLED":       2,
	}
)

func (x Trigger_TriggerStatus) Enum() *Trigger_TriggerStatus {
	p := new(Trigger_TriggerStatus)
	*p = x
	return p
}

func (x Trigger_TriggerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Trigger_TriggerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[12].Descriptor()
}

func (Trigger_TriggerStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[12]
}

func (x Trigger_TriggerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Trigger_TriggerStatus.Descriptor instead.
func (Trigger_TriggerStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{17, 1}
}

type TriggerRegistration_TriggerStatus int32

const (
	TriggerRegistration_UNKNOWN_STATUS TriggerRegistration_TriggerStatus = 0
	TriggerRegistration_ENABLED        TriggerRegistration_TriggerStatus = 1
	TriggerRegistration_DISABLED       TriggerRegistration_TriggerStatus = 2
)

// Enum value maps for TriggerRegistration_TriggerStatus.
var (
	TriggerRegistration_TriggerStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "ENABLED",
		2: "DISABLED",
	}
	TriggerRegistration_TriggerStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"ENABLED":        1,
		"DISABLED":       2,
	}
)

func (x TriggerRegistration_TriggerStatus) Enum() *TriggerRegistration_TriggerStatus {
	p := new(TriggerRegistration_TriggerStatus)
	*p = x
	return p
}

func (x TriggerRegistration_TriggerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerRegistration_TriggerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[13].Descriptor()
}

func (TriggerRegistration_TriggerStatus) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[13]
}

func (x TriggerRegistration_TriggerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerRegistration_TriggerStatus.Descriptor instead.
func (TriggerRegistration_TriggerStatus) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{18, 0}
}

type CommonTask_Status int32

const (
	CommonTask_UNKNOWN  CommonTask_Status = 0
	CommonTask_ENABLED  CommonTask_Status = 1
	CommonTask_DISABLED CommonTask_Status = 2
)

// Enum value maps for CommonTask_Status.
var (
	CommonTask_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "ENABLED",
		2: "DISABLED",
	}
	CommonTask_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x CommonTask_Status) Enum() *CommonTask_Status {
	p := new(CommonTask_Status)
	*p = x
	return p
}

func (x CommonTask_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonTask_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[14].Descriptor()
}

func (CommonTask_Status) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[14]
}

func (x CommonTask_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonTask_Status.Descriptor instead.
func (CommonTask_Status) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{19, 0}
}

type CommonTaskRegistration_Status int32

const (
	CommonTaskRegistration_UNKNOWN  CommonTaskRegistration_Status = 0
	CommonTaskRegistration_ENABLED  CommonTaskRegistration_Status = 1
	CommonTaskRegistration_DISABLED CommonTaskRegistration_Status = 2
)

// Enum value maps for CommonTaskRegistration_Status.
var (
	CommonTaskRegistration_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "ENABLED",
		2: "DISABLED",
	}
	CommonTaskRegistration_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x CommonTaskRegistration_Status) Enum() *CommonTaskRegistration_Status {
	p := new(CommonTaskRegistration_Status)
	*p = x
	return p
}

func (x CommonTaskRegistration_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonTaskRegistration_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_gofer_message_proto_enumTypes[15].Descriptor()
}

func (CommonTaskRegistration_Status) Type() protoreflect.EnumType {
	return &file_gofer_message_proto_enumTypes[15]
}

func (x CommonTaskRegistration_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonTaskRegistration_Status.Descriptor instead.
func (CommonTaskRegistration_Status) EnumDescriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{20, 0}
}

type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Created     uint64 `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified    uint64 `protobuf:"varint,5,opt,name=modified,proto3" json:"modified,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{0}
}

func (x *Namespace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Namespace) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Namespace) GetModified() uint64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

type Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string                       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value       string                       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Owner       Variable_VariableOwner       `protobuf:"varint,3,opt,name=owner,proto3,enum=proto.Variable_VariableOwner" json:"owner,omitempty"`
	Sensitivity Variable_VariableSensitivity `protobuf:"varint,4,opt,name=sensitivity,proto3,enum=proto.Variable_VariableSensitivity" json:"sensitivity,omitempty"`
}

func (x *Variable) Reset() {
	*x = Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{1}
}

func (x *Variable) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Variable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Variable) GetOwner() Variable_VariableOwner {
	if x != nil {
		return x.Owner
	}
	return Variable_VARIABLE_OWNER_UNKNOWN
}

func (x *Variable) GetSensitivity() Variable_VariableSensitivity {
	if x != nil {
		return x.Sensitivity
	}
	return Variable_VARIABLE_SENSITIVITY_UNKNOWN
}

type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string                                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Id          string                                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Parallelism uint64                                 `protobuf:"varint,5,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	Created     uint64                                 `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	Modified    uint64                                 `protobuf:"varint,7,opt,name=modified,proto3" json:"modified,omitempty"`
	State       Pipeline_PipelineState                 `protobuf:"varint,8,opt,name=state,proto3,enum=proto.Pipeline_PipelineState" json:"state,omitempty"`
	Tasks       map[string]*Task                       `protobuf:"bytes,9,rep,name=tasks,proto3" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Triggers    map[string]*PipelineTriggerSettings    `protobuf:"bytes,10,rep,name=triggers,proto3" json:"triggers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CommonTasks map[string]*PipelineCommonTaskSettings `protobuf:"bytes,11,rep,name=common_tasks,json=commonTasks,proto3" json:"common_tasks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StoreKeys   []string                               `protobuf:"bytes,12,rep,name=store_keys,json=storeKeys,proto3" json:"store_keys,omitempty"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{2}
}

func (x *Pipeline) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Pipeline) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pipeline) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Pipeline) GetParallelism() uint64 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *Pipeline) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Pipeline) GetModified() uint64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

func (x *Pipeline) GetState() Pipeline_PipelineState {
	if x != nil {
		return x.State
	}
	return Pipeline_PIPELINE_STATE_UNKNOWN
}

func (x *Pipeline) GetTasks() map[string]*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Pipeline) GetTriggers() map[string]*PipelineTriggerSettings {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *Pipeline) GetCommonTasks() map[string]*PipelineCommonTaskSettings {
	if x != nil {
		return x.CommonTasks
	}
	return nil
}

func (x *Pipeline) GetStoreKeys() []string {
	if x != nil {
		return x.StoreKeys
	}
	return nil
}

type PipelineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Parallelism uint64                      `protobuf:"varint,4,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	Tasks       []*TaskConfig               `protobuf:"bytes,5,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Triggers    []*PipelineTriggerConfig    `protobuf:"bytes,6,rep,name=triggers,proto3" json:"triggers,omitempty"`
	CommonTasks []*PipelineCommonTaskConfig `protobuf:"bytes,7,rep,name=common_tasks,json=commonTasks,proto3" json:"common_tasks,omitempty"`
}

func (x *PipelineConfig) Reset() {
	*x = PipelineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineConfig) ProtoMessage() {}

func (x *PipelineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineConfig.ProtoReflect.Descriptor instead.
func (*PipelineConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{3}
}

func (x *PipelineConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PipelineConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PipelineConfig) GetParallelism() uint64 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *PipelineConfig) GetTasks() []*TaskConfig {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *PipelineConfig) GetTriggers() []*PipelineTriggerConfig {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *PipelineConfig) GetCommonTasks() []*PipelineCommonTaskConfig {
	if x != nil {
		return x.CommonTasks
	}
	return nil
}

type Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace    string           `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pipeline     string           `protobuf:"bytes,2,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Id           uint64           `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Started      uint64           `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`
	Ended        uint64           `protobuf:"varint,5,opt,name=ended,proto3" json:"ended,omitempty"`
	State        Run_RunState     `protobuf:"varint,6,opt,name=state,proto3,enum=proto.Run_RunState" json:"state,omitempty"`
	Status       Run_RunStatus    `protobuf:"varint,7,opt,name=status,proto3,enum=proto.Run_RunStatus" json:"status,omitempty"`
	StatusReason *RunStatusReason `protobuf:"bytes,8,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	TaskRuns     []string         `protobuf:"bytes,9,rep,name=task_runs,json=taskRuns,proto3" json:"task_runs,omitempty"`
	Trigger      *RunTriggerInfo  `protobuf:"bytes,10,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Variables    []*Variable      `protobuf:"bytes,11,rep,name=variables,proto3" json:"variables,omitempty"`
	StoreInfo    *RunStoreInfo    `protobuf:"bytes,12,opt,name=store_info,json=storeInfo,proto3" json:"store_info,omitempty"`
}

func (x *Run) Reset() {
	*x = Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{4}
}

func (x *Run) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Run) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *Run) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Run) GetStarted() uint64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Run) GetEnded() uint64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *Run) GetState() Run_RunState {
	if x != nil {
		return x.State
	}
	return Run_RUN_STATE_UNKNOWN
}

func (x *Run) GetStatus() Run_RunStatus {
	if x != nil {
		return x.Status
	}
	return Run_RUN_STATUS_UNKNOWN
}

func (x *Run) GetStatusReason() *RunStatusReason {
	if x != nil {
		return x.StatusReason
	}
	return nil
}

func (x *Run) GetTaskRuns() []string {
	if x != nil {
		return x.TaskRuns
	}
	return nil
}

func (x *Run) GetTrigger() *RunTriggerInfo {
	if x != nil {
		return x.Trigger
	}
	return nil
}

func (x *Run) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Run) GetStoreInfo() *RunStoreInfo {
	if x != nil {
		return x.StoreInfo
	}
	return nil
}

type RunStatusReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      RunStatusReason_RunStatusReason `protobuf:"varint,1,opt,name=reason,proto3,enum=proto.RunStatusReason_RunStatusReason" json:"reason,omitempty"`
	Description string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RunStatusReason) Reset() {
	*x = RunStatusReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStatusReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStatusReason) ProtoMessage() {}

func (x *RunStatusReason) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStatusReason.ProtoReflect.Descriptor instead.
func (*RunStatusReason) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{5}
}

func (x *RunStatusReason) GetReason() RunStatusReason_RunStatusReason {
	if x != nil {
		return x.Reason
	}
	return RunStatusReason_RUN_STATUS_REASON_UNKNOWN
}

func (x *RunStatusReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RunTriggerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *RunTriggerInfo) Reset() {
	*x = RunTriggerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTriggerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTriggerInfo) ProtoMessage() {}

func (x *RunTriggerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTriggerInfo.ProtoReflect.Descriptor instead.
func (*RunTriggerInfo) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{6}
}

func (x *RunTriggerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunTriggerInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type RunStoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExpired bool     `protobuf:"varint,1,opt,name=is_expired,json=isExpired,proto3" json:"is_expired,omitempty"`
	Keys      []string `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *RunStoreInfo) Reset() {
	*x = RunStoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStoreInfo) ProtoMessage() {}

func (x *RunStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStoreInfo.ProtoReflect.Descriptor instead.
func (*RunStoreInfo) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{7}
}

func (x *RunStoreInfo) GetIsExpired() bool {
	if x != nil {
		return x.IsExpired
	}
	return false
}

func (x *RunStoreInfo) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RegistryAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Pass string `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
}

func (x *RegistryAuth) Reset() {
	*x = RegistryAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryAuth) ProtoMessage() {}

func (x *RegistryAuth) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryAuth.ProtoReflect.Descriptor instead.
func (*RegistryAuth) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{8}
}

func (x *RegistryAuth) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RegistryAuth) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description  string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image        string                               `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	RegistryAuth *RegistryAuth                        `protobuf:"bytes,4,opt,name=registry_auth,json=registryAuth,proto3" json:"registry_auth,omitempty"`
	DependsOn    map[string]Task_RequiredParentStatus `protobuf:"bytes,5,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.Task_RequiredParentStatus"`
	Variables    []*Variable                          `protobuf:"bytes,6,rep,name=variables,proto3" json:"variables,omitempty"`
	Entrypoint   []string                             `protobuf:"bytes,7,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Command      []string                             `protobuf:"bytes,8,rep,name=command,proto3" json:"command,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{9}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Task) GetRegistryAuth() *RegistryAuth {
	if x != nil {
		return x.RegistryAuth
	}
	return nil
}

func (x *Task) GetDependsOn() map[string]Task_RequiredParentStatus {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *Task) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Task) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *Task) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

type PipelineTriggerSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label    string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Settings map[string]string `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Error    string            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PipelineTriggerSettings) Reset() {
	*x = PipelineTriggerSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineTriggerSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineTriggerSettings) ProtoMessage() {}

func (x *PipelineTriggerSettings) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineTriggerSettings.ProtoReflect.Descriptor instead.
func (*PipelineTriggerSettings) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{10}
}

func (x *PipelineTriggerSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineTriggerSettings) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineTriggerSettings) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *PipelineTriggerSettings) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type PipelineCommonTaskSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label    string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Settings map[string]string `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Error    string            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PipelineCommonTaskSettings) Reset() {
	*x = PipelineCommonTaskSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineCommonTaskSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineCommonTaskSettings) ProtoMessage() {}

func (x *PipelineCommonTaskSettings) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineCommonTaskSettings.ProtoReflect.Descriptor instead.
func (*PipelineCommonTaskSettings) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{11}
}

func (x *PipelineCommonTaskSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineCommonTaskSettings) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineCommonTaskSettings) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *PipelineCommonTaskSettings) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TaskConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description  string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image        string                                     `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	RegistryAuth *RegistryAuth                              `protobuf:"bytes,4,opt,name=registry_auth,json=registryAuth,proto3" json:"registry_auth,omitempty"`
	DependsOn    map[string]TaskConfig_RequiredParentStatus `protobuf:"bytes,5,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.TaskConfig_RequiredParentStatus"`
	Variables    map[string]string                          `protobuf:"bytes,6,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Entrypoint   []string                                   `protobuf:"bytes,7,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Command      []string                                   `protobuf:"bytes,8,rep,name=command,proto3" json:"command,omitempty"`
}

func (x *TaskConfig) Reset() {
	*x = TaskConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskConfig) ProtoMessage() {}

func (x *TaskConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskConfig.ProtoReflect.Descriptor instead.
func (*TaskConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{12}
}

func (x *TaskConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *TaskConfig) GetRegistryAuth() *RegistryAuth {
	if x != nil {
		return x.RegistryAuth
	}
	return nil
}

func (x *TaskConfig) GetDependsOn() map[string]TaskConfig_RequiredParentStatus {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *TaskConfig) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *TaskConfig) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *TaskConfig) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

type PipelineTriggerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label    string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Settings map[string]string `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PipelineTriggerConfig) Reset() {
	*x = PipelineTriggerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineTriggerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineTriggerConfig) ProtoMessage() {}

func (x *PipelineTriggerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineTriggerConfig.ProtoReflect.Descriptor instead.
func (*PipelineTriggerConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{13}
}

func (x *PipelineTriggerConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineTriggerConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineTriggerConfig) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

type PipelineCommonTaskConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label    string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Settings map[string]string `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PipelineCommonTaskConfig) Reset() {
	*x = PipelineCommonTaskConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineCommonTaskConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineCommonTaskConfig) ProtoMessage() {}

func (x *PipelineCommonTaskConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineCommonTaskConfig.ProtoReflect.Descriptor instead.
func (*PipelineCommonTaskConfig) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{14}
}

func (x *PipelineCommonTaskConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineCommonTaskConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PipelineCommonTaskConfig) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

type TaskRunStatusReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      TaskRunStatusReason_Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=proto.TaskRunStatusReason_Reason" json:"reason,omitempty"`
	Description string                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TaskRunStatusReason) Reset() {
	*x = TaskRunStatusReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRunStatusReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRunStatusReason) ProtoMessage() {}

func (x *TaskRunStatusReason) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRunStatusReason.ProtoReflect.Descriptor instead.
func (*TaskRunStatusReason) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{15}
}

func (x *TaskRunStatusReason) GetReason() TaskRunStatusReason_Reason {
	if x != nil {
		return x.Reason
	}
	return TaskRunStatusReason_UNKNOWN
}

func (x *TaskRunStatusReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TaskRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created      uint64                `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Ended        uint64                `protobuf:"varint,2,opt,name=ended,proto3" json:"ended,omitempty"`
	ExitCode     uint64                `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	StatusReason *TaskRunStatusReason  `protobuf:"bytes,4,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	Id           string                `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	LogsExpired  bool                  `protobuf:"varint,6,opt,name=logs_expired,json=logsExpired,proto3" json:"logs_expired,omitempty"`
	LogsRemoved  bool                  `protobuf:"varint,7,opt,name=logs_removed,json=logsRemoved,proto3" json:"logs_removed,omitempty"`
	NamespaceId  string                `protobuf:"bytes,8,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PipelineId   string                `protobuf:"bytes,9,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	RunId        uint64                `protobuf:"varint,10,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	SchedulerId  string                `protobuf:"bytes,11,opt,name=scheduler_id,json=schedulerId,proto3" json:"scheduler_id,omitempty"`
	Started      uint64                `protobuf:"varint,12,opt,name=started,proto3" json:"started,omitempty"`
	State        TaskRun_TaskRunState  `protobuf:"varint,13,opt,name=state,proto3,enum=proto.TaskRun_TaskRunState" json:"state,omitempty"`
	Status       TaskRun_TaskRunStatus `protobuf:"varint,14,opt,name=status,proto3,enum=proto.TaskRun_TaskRunStatus" json:"status,omitempty"`
	Task         *Task                 `protobuf:"bytes,15,opt,name=task,proto3" json:"task,omitempty"`
	Variables    []*Variable           `protobuf:"bytes,16,rep,name=variables,proto3" json:"variables,omitempty"`
}

func (x *TaskRun) Reset() {
	*x = TaskRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRun) ProtoMessage() {}

func (x *TaskRun) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRun.ProtoReflect.Descriptor instead.
func (*TaskRun) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{16}
}

func (x *TaskRun) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *TaskRun) GetEnded() uint64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *TaskRun) GetExitCode() uint64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *TaskRun) GetStatusReason() *TaskRunStatusReason {
	if x != nil {
		return x.StatusReason
	}
	return nil
}

func (x *TaskRun) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskRun) GetLogsExpired() bool {
	if x != nil {
		return x.LogsExpired
	}
	return false
}

func (x *TaskRun) GetLogsRemoved() bool {
	if x != nil {
		return x.LogsRemoved
	}
	return false
}

func (x *TaskRun) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TaskRun) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *TaskRun) GetRunId() uint64 {
	if x != nil {
		return x.RunId
	}
	return 0
}

func (x *TaskRun) GetSchedulerId() string {
	if x != nil {
		return x.SchedulerId
	}
	return ""
}

func (x *TaskRun) GetStarted() uint64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *TaskRun) GetState() TaskRun_TaskRunState {
	if x != nil {
		return x.State
	}
	return TaskRun_UNKNOWN_STATE
}

func (x *TaskRun) GetStatus() TaskRun_TaskRunStatus {
	if x != nil {
		return x.Status
	}
	return TaskRun_UNKNOWN_STATUS
}

func (x *TaskRun) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskRun) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

type Trigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Url           string                `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	SchedulerId   string                `protobuf:"bytes,4,opt,name=scheduler_id,json=schedulerId,proto3" json:"scheduler_id,omitempty"`
	Started       uint64                `protobuf:"varint,5,opt,name=started,proto3" json:"started,omitempty"`
	State         Trigger_TriggerState  `protobuf:"varint,6,opt,name=state,proto3,enum=proto.Trigger_TriggerState" json:"state,omitempty"`
	Status        Trigger_TriggerStatus `protobuf:"varint,7,opt,name=status,proto3,enum=proto.Trigger_TriggerStatus" json:"status,omitempty"`
	Documentation string                `protobuf:"bytes,8,opt,name=documentation,proto3" json:"documentation,omitempty"`
}

func (x *Trigger) Reset() {
	*x = Trigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trigger) ProtoMessage() {}

func (x *Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trigger.ProtoReflect.Descriptor instead.
func (*Trigger) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{17}
}

func (x *Trigger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Trigger) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Trigger) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Trigger) GetSchedulerId() string {
	if x != nil {
		return x.SchedulerId
	}
	return ""
}

func (x *Trigger) GetStarted() uint64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Trigger) GetState() Trigger_TriggerState {
	if x != nil {
		return x.State
	}
	return Trigger_UNKNOWN_STATE
}

func (x *Trigger) GetStatus() Trigger_TriggerStatus {
	if x != nil {
		return x.Status
	}
	return Trigger_UNKNOWN_STATUS
}

func (x *Trigger) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

type TriggerRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image     string                            `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	User      string                            `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Pass      string                            `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	Variables map[string]string                 `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Created   uint64                            `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	Status    TriggerRegistration_TriggerStatus `protobuf:"varint,7,opt,name=status,proto3,enum=proto.TriggerRegistration_TriggerStatus" json:"status,omitempty"`
}

func (x *TriggerRegistration) Reset() {
	*x = TriggerRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRegistration) ProtoMessage() {}

func (x *TriggerRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRegistration.ProtoReflect.Descriptor instead.
func (*TriggerRegistration) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{18}
}

func (x *TriggerRegistration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerRegistration) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *TriggerRegistration) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *TriggerRegistration) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *TriggerRegistration) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *TriggerRegistration) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *TriggerRegistration) GetStatus() TriggerRegistration_TriggerStatus {
	if x != nil {
		return x.Status
	}
	return TriggerRegistration_UNKNOWN_STATUS
}

type CommonTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string            `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Documentation string            `protobuf:"bytes,3,opt,name=documentation,proto3" json:"documentation,omitempty"`
	Status        CommonTask_Status `protobuf:"varint,4,opt,name=status,proto3,enum=proto.CommonTask_Status" json:"status,omitempty"`
}

func (x *CommonTask) Reset() {
	*x = CommonTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTask) ProtoMessage() {}

func (x *CommonTask) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTask.ProtoReflect.Descriptor instead.
func (*CommonTask) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{19}
}

func (x *CommonTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommonTask) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CommonTask) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

func (x *CommonTask) GetStatus() CommonTask_Status {
	if x != nil {
		return x.Status
	}
	return CommonTask_UNKNOWN
}

type CommonTaskRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image     string                        `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	User      string                        `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Pass      string                        `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	Variables map[string]string             `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Created   uint64                        `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	Status    CommonTaskRegistration_Status `protobuf:"varint,7,opt,name=status,proto3,enum=proto.CommonTaskRegistration_Status" json:"status,omitempty"`
}

func (x *CommonTaskRegistration) Reset() {
	*x = CommonTaskRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTaskRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTaskRegistration) ProtoMessage() {}

func (x *CommonTaskRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTaskRegistration.ProtoReflect.Descriptor instead.
func (*CommonTaskRegistration) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{20}
}

func (x *CommonTaskRegistration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommonTaskRegistration) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CommonTaskRegistration) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CommonTaskRegistration) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *CommonTaskRegistration) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CommonTaskRegistration) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *CommonTaskRegistration) GetStatus() CommonTaskRegistration_Status {
	if x != nil {
		return x.Status
	}
	return CommonTaskRegistration_UNKNOWN
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind    string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`       // What type of event
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"` // Json output of the event
	Emitted uint64 `protobuf:"varint,4,opt,name=emitted,proto3" json:"emitted,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gofer_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_gofer_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_gofer_message_proto_rawDescGZIP(), []int{21}
}

func (x *Event) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Event) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *Event) GetEmitted() uint64 {
	if x != nil {
		return x.Emitted
	}
	return 0
}

var File_gofer_message_proto protoreflect.FileDescriptor

var file_gofer_message_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x6f, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a,
	0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0xc3, 0x02, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x45, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x50, 0x0a, 0x13, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x0a, 0x1c, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x49,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x22, 0x41, 0x0a, 0x0d, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x41,
	0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x22, 0x9a, 0x06, 0x0a,
	0x08, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x39, 0x0a, 0x08,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x43, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x45, 0x0a, 0x0a, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x5b, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x61, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x45, 0x0a, 0x0d, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x9f, 0x02, 0x0a, 0x0e, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65,
	0x6c, 0x69, 0x73, 0x6d, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x38, 0x0a,
	0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0xe1, 0x04, 0x0a, 0x03,
	0x52, 0x75, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x29, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x73,
	0x12, 0x2f, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x22,
	0x4e, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46,
	0x55, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22,
	0x90, 0x02, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x55, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x42, 0x4e, 0x4f,
	0x52, 0x4d, 0x41, 0x4c, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x13, 0x0a,
	0x0f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44,
	0x10, 0x05, 0x22, 0x3a, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x41,
	0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x22, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x22, 0xeb, 0x03, 0x0a, 0x04, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12,
	0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x5e, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x50, 0x41, 0x52,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41,
	0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x03, 0x22, 0xe0, 0x01, 0x0a, 0x17, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x48, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x3b, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe6, 0x01, 0x0a, 0x1a, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x4b, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xcc, 0x04, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x3e, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a,
	0x64, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x52,
	0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x10, 0x03, 0x22, 0xc6, 0x01, 0x0a, 0x15, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x46, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x3b,
	0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcc, 0x01, 0x0a, 0x18,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61,
	0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x49, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x3b, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x73, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x42, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x48,
	0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x17,
	0x0a, 0x13, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x52, 0x50, 0x48, 0x41, 0x4e,
	0x45, 0x44, 0x10, 0x05, 0x22, 0xf6, 0x05, 0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x49, 0x54,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04,
	0x22, 0x5b, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x46, 0x55, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x22, 0x9d, 0x03,
	0x0a, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x4a, 0x0a, 0x0c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x10, 0x03, 0x22, 0x3e, 0x0a,
	0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x8a, 0x03,
	0x0a, 0x13, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x3c, 0x0a, 0x0e,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x0d, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0xfe, 0x02,
	0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x09, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x3c,
	0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x5f,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42,
	0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c,
	0x69, 0x6e, 0x74, 0x6a, 0x65, 0x64, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x66, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gofer_message_proto_rawDescOnce sync.Once
	file_gofer_message_proto_rawDescData = file_gofer_message_proto_rawDesc
)

func file_gofer_message_proto_rawDescGZIP() []byte {
	file_gofer_message_proto_rawDescOnce.Do(func() {
		file_gofer_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_gofer_message_proto_rawDescData)
	})
	return file_gofer_message_proto_rawDescData
}

var file_gofer_message_proto_enumTypes = make([]protoimpl.EnumInfo, 16)
var file_gofer_message_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_gofer_message_proto_goTypes = []interface{}{
	(Variable_VariableSensitivity)(0),      // 0: proto.Variable.VariableSensitivity
	(Variable_VariableOwner)(0),            // 1: proto.Variable.VariableOwner
	(Pipeline_PipelineState)(0),            // 2: proto.Pipeline.PipelineState
	(Run_RunState)(0),                      // 3: proto.Run.RunState
	(Run_RunStatus)(0),                     // 4: proto.Run.RunStatus
	(RunStatusReason_RunStatusReason)(0),   // 5: proto.RunStatusReason.RunStatusReason
	(Task_RequiredParentStatus)(0),         // 6: proto.Task.RequiredParentStatus
	(TaskConfig_RequiredParentStatus)(0),   // 7: proto.TaskConfig.RequiredParentStatus
	(TaskRunStatusReason_Reason)(0),        // 8: proto.TaskRunStatusReason.Reason
	(TaskRun_TaskRunState)(0),              // 9: proto.TaskRun.TaskRunState
	(TaskRun_TaskRunStatus)(0),             // 10: proto.TaskRun.TaskRunStatus
	(Trigger_TriggerState)(0),              // 11: proto.Trigger.TriggerState
	(Trigger_TriggerStatus)(0),             // 12: proto.Trigger.TriggerStatus
	(TriggerRegistration_TriggerStatus)(0), // 13: proto.TriggerRegistration.TriggerStatus
	(CommonTask_Status)(0),                 // 14: proto.CommonTask.Status
	(CommonTaskRegistration_Status)(0),     // 15: proto.CommonTaskRegistration.Status
	(*Namespace)(nil),                      // 16: proto.Namespace
	(*Variable)(nil),                       // 17: proto.Variable
	(*Pipeline)(nil),                       // 18: proto.Pipeline
	(*PipelineConfig)(nil),                 // 19: proto.PipelineConfig
	(*Run)(nil),                            // 20: proto.Run
	(*RunStatusReason)(nil),                // 21: proto.RunStatusReason
	(*RunTriggerInfo)(nil),                 // 22: proto.RunTriggerInfo
	(*RunStoreInfo)(nil),                   // 23: proto.RunStoreInfo
	(*RegistryAuth)(nil),                   // 24: proto.RegistryAuth
	(*Task)(nil),                           // 25: proto.Task
	(*PipelineTriggerSettings)(nil),        // 26: proto.PipelineTriggerSettings
	(*PipelineCommonTaskSettings)(nil),     // 27: proto.PipelineCommonTaskSettings
	(*TaskConfig)(nil),                     // 28: proto.TaskConfig
	(*PipelineTriggerConfig)(nil),          // 29: proto.PipelineTriggerConfig
	(*PipelineCommonTaskConfig)(nil),       // 30: proto.PipelineCommonTaskConfig
	(*TaskRunStatusReason)(nil),            // 31: proto.TaskRunStatusReason
	(*TaskRun)(nil),                        // 32: proto.TaskRun
	(*Trigger)(nil),                        // 33: proto.Trigger
	(*TriggerRegistration)(nil),            // 34: proto.TriggerRegistration
	(*CommonTask)(nil),                     // 35: proto.CommonTask
	(*CommonTaskRegistration)(nil),         // 36: proto.CommonTaskRegistration
	(*Event)(nil),                          // 37: proto.Event
	nil,                                    // 38: proto.Pipeline.TasksEntry
	nil,                                    // 39: proto.Pipeline.TriggersEntry
	nil,                                    // 40: proto.Pipeline.CommonTasksEntry
	nil,                                    // 41: proto.Task.DependsOnEntry
	nil,                                    // 42: proto.PipelineTriggerSettings.SettingsEntry
	nil,                                    // 43: proto.PipelineCommonTaskSettings.SettingsEntry
	nil,                                    // 44: proto.TaskConfig.DependsOnEntry
	nil,                                    // 45: proto.TaskConfig.VariablesEntry
	nil,                                    // 46: proto.PipelineTriggerConfig.SettingsEntry
	nil,                                    // 47: proto.PipelineCommonTaskConfig.SettingsEntry
	nil,                                    // 48: proto.TriggerRegistration.VariablesEntry
	nil,                                    // 49: proto.CommonTaskRegistration.VariablesEntry
}
var file_gofer_message_proto_depIdxs = []int32{
	1,  // 0: proto.Variable.owner:type_name -> proto.Variable.VariableOwner
	0,  // 1: proto.Variable.sensitivity:type_name -> proto.Variable.VariableSensitivity
	2,  // 2: proto.Pipeline.state:type_name -> proto.Pipeline.PipelineState
	38, // 3: proto.Pipeline.tasks:type_name -> proto.Pipeline.TasksEntry
	39, // 4: proto.Pipeline.triggers:type_name -> proto.Pipeline.TriggersEntry
	40, // 5: proto.Pipeline.common_tasks:type_name -> proto.Pipeline.CommonTasksEntry
	28, // 6: proto.PipelineConfig.tasks:type_name -> proto.TaskConfig
	29, // 7: proto.PipelineConfig.triggers:type_name -> proto.PipelineTriggerConfig
	30, // 8: proto.PipelineConfig.common_tasks:type_name -> proto.PipelineCommonTaskConfig
	3,  // 9: proto.Run.state:type_name -> proto.Run.RunState
	4,  // 10: proto.Run.status:type_name -> proto.Run.RunStatus
	21, // 11: proto.Run.status_reason:type_name -> proto.RunStatusReason
	22, // 12: proto.Run.trigger:type_name -> proto.RunTriggerInfo
	17, // 13: proto.Run.variables:type_name -> proto.Variable
	23, // 14: proto.Run.store_info:type_name -> proto.RunStoreInfo
	5,  // 15: proto.RunStatusReason.reason:type_name -> proto.RunStatusReason.RunStatusReason
	24, // 16: proto.Task.registry_auth:type_name -> proto.RegistryAuth
	41, // 17: proto.Task.depends_on:type_name -> proto.Task.DependsOnEntry
	17, // 18: proto.Task.variables:type_name -> proto.Variable
	42, // 19: proto.PipelineTriggerSettings.settings:type_name -> proto.PipelineTriggerSettings.SettingsEntry
	43, // 20: proto.PipelineCommonTaskSettings.settings:type_name -> proto.PipelineCommonTaskSettings.SettingsEntry
	24, // 21: proto.TaskConfig.registry_auth:type_name -> proto.RegistryAuth
	44, // 22: proto.TaskConfig.depends_on:type_name -> proto.TaskConfig.DependsOnEntry
	45, // 23: proto.TaskConfig.variables:type_name -> proto.TaskConfig.VariablesEntry
	46, // 24: proto.PipelineTriggerConfig.settings:type_name -> proto.PipelineTriggerConfig.SettingsEntry
	47, // 25: proto.PipelineCommonTaskConfig.settings:type_name -> proto.PipelineCommonTaskConfig.SettingsEntry
	8,  // 26: proto.TaskRunStatusReason.reason:type_name -> proto.TaskRunStatusReason.Reason
	31, // 27: proto.TaskRun.status_reason:type_name -> proto.TaskRunStatusReason
	9,  // 28: proto.TaskRun.state:type_name -> proto.TaskRun.TaskRunState
	10, // 29: proto.TaskRun.status:type_name -> proto.TaskRun.TaskRunStatus
	25, // 30: proto.TaskRun.task:type_name -> proto.Task
	17, // 31: proto.TaskRun.variables:type_name -> proto.Variable
	11, // 32: proto.Trigger.state:type_name -> proto.Trigger.TriggerState
	12, // 33: proto.Trigger.status:type_name -> proto.Trigger.TriggerStatus
	48, // 34: proto.TriggerRegistration.variables:type_name -> proto.TriggerRegistration.VariablesEntry
	13, // 35: proto.TriggerRegistration.status:type_name -> proto.TriggerRegistration.TriggerStatus
	14, // 36: proto.CommonTask.status:type_name -> proto.CommonTask.Status
	49, // 37: proto.CommonTaskRegistration.variables:type_name -> proto.CommonTaskRegistration.VariablesEntry
	15, // 38: proto.CommonTaskRegistration.status:type_name -> proto.CommonTaskRegistration.Status
	25, // 39: proto.Pipeline.TasksEntry.value:type_name -> proto.Task
	26, // 40: proto.Pipeline.TriggersEntry.value:type_name -> proto.PipelineTriggerSettings
	27, // 41: proto.Pipeline.CommonTasksEntry.value:type_name -> proto.PipelineCommonTaskSettings
	6,  // 42: proto.Task.DependsOnEntry.value:type_name -> proto.Task.RequiredParentStatus
	7,  // 43: proto.TaskConfig.DependsOnEntry.value:type_name -> proto.TaskConfig.RequiredParentStatus
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_gofer_message_proto_init() }
func file_gofer_message_proto_init() {
	if File_gofer_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gofer_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStatusReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTriggerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineTriggerSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineCommonTaskSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineTriggerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineCommonTaskConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRunStatusReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTaskRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gofer_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gofer_message_proto_rawDesc,
			NumEnums:      16,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gofer_message_proto_goTypes,
		DependencyIndexes: file_gofer_message_proto_depIdxs,
		EnumInfos:         file_gofer_message_proto_enumTypes,
		MessageInfos:      file_gofer_message_proto_msgTypes,
	}.Build()
	File_gofer_message_proto = out.File
	file_gofer_message_proto_rawDesc = nil
	file_gofer_message_proto_goTypes = nil
	file_gofer_message_proto_depIdxs = nil
}
